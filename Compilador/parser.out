Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> package_decl import_decls class_decls
Rule 2     program -> import_decls class_decls
Rule 3     program -> class_decls
Rule 4     package_decl -> PACKAGE qualified_id PUNTO_Y_COMA
Rule 5     import_decls -> import_decl import_decls
Rule 6     import_decls -> import_decl
Rule 7     import_decl -> IMPORT qualified_id PUNTO_Y_COMA
Rule 8     class_decls -> class_decl class_decls
Rule 9     class_decls -> class_decl
Rule 10    class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
Rule 11    class_header -> modifiers CLASS ID extends_clause implements_clause
Rule 12    class_header -> CLASS ID extends_clause implements_clause
Rule 13    extends_clause -> EXTENDS qualified_id
Rule 14    extends_clause -> empty
Rule 15    implements_clause -> IMPLEMENTS qualified_id_list
Rule 16    implements_clause -> empty
Rule 17    class_body -> class_members
Rule 18    class_members -> class_member class_members
Rule 19    class_members -> empty
Rule 20    class_member -> field_decl
Rule 21    class_member -> method_decl
Rule 22    class_member -> constructor_decl
Rule 23    class_member -> class_decl
Rule 24    field_decl -> modifiers type variables PUNTO_Y_COMA
Rule 25    variables -> variable COMA variables
Rule 26    variables -> variable
Rule 27    variable -> ID
Rule 28    variable -> ID ASIGNACION expression
Rule 29    method_decl -> method_header block
Rule 30    method_header -> modifiers type ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
Rule 31    method_header -> modifiers VOID ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
Rule 32    method_header -> modifiers type ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
Rule 33    method_header -> modifiers VOID ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
Rule 34    method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
Rule 35    method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
Rule 36    method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
Rule 37    method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
Rule 38    formal_params -> formal_param COMA formal_params
Rule 39    formal_params -> formal_param
Rule 40    formal_params -> empty
Rule 41    formal_param -> type ID
Rule 42    formal_param -> array_type ID
Rule 43    array_type -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
Rule 44    array_type -> reference_type CORCHETE_ABIERTO CORCHETE_CERRADO
Rule 45    constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block
Rule 46    block -> LLAVE_ABIERTA statements LLAVE_CERRADA
Rule 47    block -> LLAVE_ABIERTA LLAVE_CERRADA
Rule 48    statements -> statement statements
Rule 49    statements -> empty
Rule 50    statement -> block
Rule 51    statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
Rule 52    statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
Rule 53    statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
Rule 54    statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
Rule 55    statement -> RETURN expression PUNTO_Y_COMA
Rule 56    statement -> RETURN PUNTO_Y_COMA
Rule 57    statement -> BREAK PUNTO_Y_COMA
Rule 58    statement -> CONTINUE PUNTO_Y_COMA
Rule 59    statement -> THROW expression PUNTO_Y_COMA
Rule 60    statement -> TRY block catches
Rule 61    statement -> ASSERT expression PUNTO_Y_COMA
Rule 62    statement -> TRY block catches FINALLY block
Rule 63    statement -> expression PUNTO_Y_COMA
Rule 64    statement -> local_var_decl PUNTO_Y_COMA
Rule 65    statement -> PUNTO_Y_COMA
Rule 66    for_init -> local_var_decl
Rule 67    for_init -> expression_list
Rule 68    for_update -> expression_list
Rule 69    expression_list -> expression
Rule 70    expression_list -> expression COMA expression_list
Rule 71    switch_cases -> switch_case switch_cases
Rule 72    switch_cases -> switch_case
Rule 73    switch_case -> CASE expression DOSPUNTOS statements
Rule 74    switch_case -> DEFAULT DOSPUNTOS statements
Rule 75    catches -> catch catches
Rule 76    catches -> catch
Rule 77    catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block
Rule 78    local_var_decl -> type variables
Rule 79    type -> primitive_type
Rule 80    type -> reference_type
Rule 81    primitive_type -> INT
Rule 82    primitive_type -> FLOAT
Rule 83    primitive_type -> DOUBLE
Rule 84    primitive_type -> CHAR
Rule 85    primitive_type -> BOOLEAN
Rule 86    primitive_type -> SHORT
Rule 87    primitive_type -> LONG
Rule 88    primitive_type -> STRING
Rule 89    primitive_type -> BYTE
Rule 90    reference_type -> qualified_id
Rule 91    qualified_id -> ID PUNTO ID
Rule 92    qualified_id -> ID
Rule 93    qualified_id_list -> qualified_id COMA qualified_id_list
Rule 94    qualified_id_list -> qualified_id
Rule 95    expression -> assignment_expression
Rule 96    assignment_expression -> conditional_expression
Rule 97    assignment_expression -> ID assignment_operator expression
Rule 98    assignment_operator -> ASIGNACION
Rule 99    assignment_operator -> ASIGNACION_SUMA
Rule 100   assignment_operator -> ASIGNACION_RESTA
Rule 101   assignment_operator -> ASIGNACION_MULTIPLICACION
Rule 102   assignment_operator -> ASIGNACION_DIVISION
Rule 103   assignment_operator -> ASIGNACION_MODULO
Rule 104   assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION
Rule 105   assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION
Rule 106   conditional_expression -> logical_or_expression
Rule 107   conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
Rule 108   logical_or_expression -> logical_and_expression
Rule 109   logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression
Rule 110   logical_and_expression -> inclusive_or_expression
Rule 111   logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression
Rule 112   inclusive_or_expression -> exclusive_or_expression
Rule 113   inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression
Rule 114   exclusive_or_expression -> and_expression
Rule 115   exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression
Rule 116   and_expression -> equality_expression
Rule 117   and_expression -> and_expression AND_BIT equality_expression
Rule 118   equality_expression -> relational_expression
Rule 119   equality_expression -> equality_expression IGUAL relational_expression
Rule 120   equality_expression -> equality_expression DISTINTO relational_expression
Rule 121   relational_expression -> shift_expression
Rule 122   relational_expression -> relational_expression MENOR shift_expression
Rule 123   relational_expression -> relational_expression MAYOR shift_expression
Rule 124   relational_expression -> relational_expression MENOR_IGUAL shift_expression
Rule 125   relational_expression -> relational_expression MAYOR_IGUAL shift_expression
Rule 126   relational_expression -> relational_expression INSTANCEOF reference_type
Rule 127   shift_expression -> additive_expression
Rule 128   shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
Rule 129   shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression
Rule 130   additive_expression -> multiplicative_expression
Rule 131   additive_expression -> additive_expression SUMA multiplicative_expression
Rule 132   additive_expression -> additive_expression RESTA multiplicative_expression
Rule 133   multiplicative_expression -> unary_expression
Rule 134   multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression
Rule 135   multiplicative_expression -> multiplicative_expression DIVISION unary_expression
Rule 136   multiplicative_expression -> multiplicative_expression MODULO unary_expression
Rule 137   unary_expression -> postfix_expression
Rule 138   unary_expression -> INCREMENTO unary_expression
Rule 139   unary_expression -> DECREMENTO unary_expression
Rule 140   unary_expression -> SUMA unary_expression
Rule 141   unary_expression -> RESTA unary_expression
Rule 142   unary_expression -> UMAS unary_expression
Rule 143   unary_expression -> UMENOS unary_expression
Rule 144   unary_expression -> NOT unary_expression
Rule 145   unary_expression -> NOT_BIT unary_expression
Rule 146   statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
Rule 147   statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
Rule 148   postfix_expression -> primary
Rule 149   postfix_expression -> postfix_expression INCREMENTO
Rule 150   postfix_expression -> postfix_expression DECREMENTO
Rule 151   postfix_expression -> postfix_expression PUNTO member_access
Rule 152   postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
Rule 153   member_access -> ID
Rule 154   member_access -> THIS
Rule 155   member_access -> SUPER
Rule 156   member_access -> NEW creator
Rule 157   member_access -> method_call
Rule 158   primary -> literal
Rule 159   primary -> THIS
Rule 160   primary -> SUPER
Rule 161   primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
Rule 162   primary -> NEW creator
Rule 163   primary -> qualified_id
Rule 164   literal -> NUMERO
Rule 165   literal -> CADENA
Rule 166   literal -> TRUE
Rule 167   literal -> FALSE
Rule 168   literal -> NULL
Rule 169   literal -> OCTAL_NUMERO
Rule 170   literal -> HEX_NUMERO
Rule 171   literal -> BINARIO_NUMERO
Rule 172   creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
Rule 173   creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO
Rule 174   creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO
Rule 175   creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO
Rule 176   creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
Rule 177   arguments -> expression_list
Rule 178   arguments -> empty
Rule 179   modifiers -> modifier modifiers
Rule 180   modifiers -> modifier
Rule 181   modifier -> PUBLIC
Rule 182   modifier -> PRIVATE
Rule 183   modifier -> PROTECTED
Rule 184   modifier -> STATIC
Rule 185   modifier -> FINAL
Rule 186   modifier -> ABSTRACT
Rule 187   modifier -> NATIVE
Rule 188   modifier -> SYNCHRONIZED
Rule 189   modifier -> VOLATILE
Rule 190   modifier -> EXPORT
Rule 191   modifier -> INTERFACE
Rule 192   modifier -> TRANSIENT
Rule 193   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 186
AND_BIT              : 117
AND_LOGICO           : 111
ASIGNACION           : 28 98
ASIGNACION_DIVISION  : 102
ASIGNACION_MODULO    : 103
ASIGNACION_MULTIPLICACION : 101
ASIGNACION_RESTA     : 100
ASIGNACION_SUMA      : 99
ASSERT               : 61
BINARIO_NUMERO       : 171
BOOLEAN              : 85
BREAK                : 57
BYTE                 : 89
CADENA               : 165
CASE                 : 73
CATCH                : 77
CHAR                 : 84
CLASS                : 11 12
COMA                 : 25 38 70 93
CONTINUE             : 58
CORCHETE_ABIERTO     : 43 44 152 173 174 175 176
CORCHETE_CERRADO     : 43 44 152 173 174 175 176
DECREMENTO           : 139 150
DEFAULT              : 74
DESPLAZAMIENTO_DERECHO : 129
DESPLAZAMIENTO_DERECHO_ASIGNACION : 105
DESPLAZAMIENTO_IZQUIERDO : 128
DESPLAZAMIENTO_IZQUIERDO_ASIGNACION : 104
DISTINTO             : 120
DIVISION             : 135
DO                   : 52
DOSPUNTOS            : 73 74 107
DOUBLE               : 83
ELSE                 : 147
EXPORT               : 190
EXTENDS              : 13
FALSE                : 167
FINAL                : 185
FINALLY              : 62
FLOAT                : 82
FOR                  : 53
HEX_NUMERO           : 170
ID                   : 11 12 27 28 30 31 32 33 34 41 42 45 91 91 92 97 153
IF                   : 146 147
IGUAL                : 119
IMPLEMENTS           : 15
IMPORT               : 7
INCREMENTO           : 138 149
INSTANCEOF           : 126
INT                  : 81
INTERFACE            : 191
LLAVE_ABIERTA        : 10 46 47 54
LLAVE_CERRADA        : 10 46 47 54
LONG                 : 87
MAYOR                : 123
MAYOR_IGUAL          : 125
MENOR                : 122
MENOR_IGUAL          : 124
MODULO               : 136
MULTIPLICACION       : 134
NATIVE               : 187
NEW                  : 37 156 162
NOT                  : 144
NOT_BIT              : 145
NULL                 : 168
NUMERO               : 164
OCTAL_NUMERO         : 169
OR_BIT               : 113
OR_LOGICO            : 109
PACKAGE              : 4
PARENTESIS_ABIERTO   : 30 31 32 33 34 35 36 37 45 51 52 53 54 77 146 147 161 172
PARENTESIS_CERRADO   : 30 31 32 33 34 35 36 37 45 51 52 53 54 77 146 147 161 172
PRIVATE              : 182
PROTECTED            : 183
PUBLIC               : 181
PUNTO                : 91 151
PUNTO_Y_COMA         : 4 7 24 52 53 53 55 56 57 58 59 61 63 64 65
RESTA                : 132 141
RETURN               : 55 56
SHORT                : 86
STATIC               : 184
STRING               : 88
SUMA                 : 131 140
SUPER                : 36 155 160
SWITCH               : 54
SYNCHRONIZED         : 188
TERNARIO             : 107
THIS                 : 35 154 159
THROW                : 59
TRANSIENT            : 192
TRUE                 : 166
TRY                  : 60 62
UMAS                 : 142
UMENOS               : 143
VOID                 : 31 33
VOLATILE             : 189
WHILE                : 51 52
XOR_BIT              : 115
error                : 

Nonterminals, with rules where they appear

additive_expression  : 127 128 129 131 132
and_expression       : 114 115 117
arguments            : 34 35 36 37 172
array_type           : 42
assignment_expression : 95
assignment_operator  : 97
block                : 29 45 50 60 62 62 77
catch                : 75 76
catches              : 60 62 75
class_body           : 10
class_decl           : 8 9 23
class_decls          : 1 2 3 8
class_header         : 10
class_member         : 18
class_members        : 17 18
conditional_expression : 96 107
constructor_decl     : 22
creator              : 37 156 162
empty                : 14 16 19 40 49 178
equality_expression  : 116 117 119 120
exclusive_or_expression : 112 113 115
expression           : 28 51 52 53 54 55 59 61 63 69 70 73 97 107 146 147 152 161 173 175
expression_list      : 67 68 70 177
extends_clause       : 11 12
field_decl           : 20
for_init             : 53
for_update           : 53
formal_param         : 38 39 77
formal_params        : 30 31 38 45
implements_clause    : 11 12
import_decl          : 5 6
import_decls         : 1 2 5
inclusive_or_expression : 110 111 113
literal              : 158
local_var_decl       : 64 66
logical_and_expression : 108 109 111
logical_or_expression : 106 107 109
member_access        : 151
method_call          : 157
method_decl          : 21
method_header        : 29
modifier             : 179 180
modifiers            : 11 24 30 31 32 33 45 179
multiplicative_expression : 130 131 132 134 135 136
package_decl         : 1
postfix_expression   : 137 149 150 151 152
primary              : 148
primitive_type       : 43 79 175 176
program              : 0
qualified_id         : 4 7 13 90 93 94 163 172 173 174
qualified_id_list    : 15 93
reference_type       : 44 80 126
relational_expression : 118 119 120 122 123 124 125 126
shift_expression     : 121 122 123 124 125 128 129
statement            : 48 51 52 53 146 147 147
statements           : 46 48 73 74
switch_case          : 71 72
switch_cases         : 54 71
type                 : 24 30 32 41 78
unary_expression     : 133 134 135 136 138 139 140 141 142 143 144 145
variable             : 25 26
variables            : 24 25 78

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . package_decl import_decls class_decls
    (2) program -> . import_decls class_decls
    (3) program -> . class_decls
    (4) package_decl -> . PACKAGE qualified_id PUNTO_Y_COMA
    (5) import_decls -> . import_decl import_decls
    (6) import_decls -> . import_decl
    (8) class_decls -> . class_decl class_decls
    (9) class_decls -> . class_decl
    (7) import_decl -> . IMPORT qualified_id PUNTO_Y_COMA
    (10) class_decl -> . class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
    (11) class_header -> . modifiers CLASS ID extends_clause implements_clause
    (12) class_header -> . CLASS ID extends_clause implements_clause
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    PACKAGE         shift and go to state 5
    IMPORT          shift and go to state 8
    CLASS           shift and go to state 11
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    program                        shift and go to state 1
    package_decl                   shift and go to state 2
    import_decls                   shift and go to state 3
    class_decls                    shift and go to state 4
    import_decl                    shift and go to state 6
    class_decl                     shift and go to state 7
    class_header                   shift and go to state 9
    modifiers                      shift and go to state 10
    modifier                       shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> package_decl . import_decls class_decls
    (5) import_decls -> . import_decl import_decls
    (6) import_decls -> . import_decl
    (7) import_decl -> . IMPORT qualified_id PUNTO_Y_COMA

    IMPORT          shift and go to state 8

    import_decls                   shift and go to state 25
    import_decl                    shift and go to state 6

state 3

    (2) program -> import_decls . class_decls
    (8) class_decls -> . class_decl class_decls
    (9) class_decls -> . class_decl
    (10) class_decl -> . class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
    (11) class_header -> . modifiers CLASS ID extends_clause implements_clause
    (12) class_header -> . CLASS ID extends_clause implements_clause
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    CLASS           shift and go to state 11
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    class_decls                    shift and go to state 26
    class_decl                     shift and go to state 7
    class_header                   shift and go to state 9
    modifiers                      shift and go to state 10
    modifier                       shift and go to state 12

state 4

    (3) program -> class_decls .

    $end            reduce using rule 3 (program -> class_decls .)


state 5

    (4) package_decl -> PACKAGE . qualified_id PUNTO_Y_COMA
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 28

    qualified_id                   shift and go to state 27

state 6

    (5) import_decls -> import_decl . import_decls
    (6) import_decls -> import_decl .
    (5) import_decls -> . import_decl import_decls
    (6) import_decls -> . import_decl
    (7) import_decl -> . IMPORT qualified_id PUNTO_Y_COMA

    CLASS           reduce using rule 6 (import_decls -> import_decl .)
    PUBLIC          reduce using rule 6 (import_decls -> import_decl .)
    PRIVATE         reduce using rule 6 (import_decls -> import_decl .)
    PROTECTED       reduce using rule 6 (import_decls -> import_decl .)
    STATIC          reduce using rule 6 (import_decls -> import_decl .)
    FINAL           reduce using rule 6 (import_decls -> import_decl .)
    ABSTRACT        reduce using rule 6 (import_decls -> import_decl .)
    NATIVE          reduce using rule 6 (import_decls -> import_decl .)
    SYNCHRONIZED    reduce using rule 6 (import_decls -> import_decl .)
    VOLATILE        reduce using rule 6 (import_decls -> import_decl .)
    EXPORT          reduce using rule 6 (import_decls -> import_decl .)
    INTERFACE       reduce using rule 6 (import_decls -> import_decl .)
    TRANSIENT       reduce using rule 6 (import_decls -> import_decl .)
    IMPORT          shift and go to state 8

    import_decl                    shift and go to state 6
    import_decls                   shift and go to state 29

state 7

    (8) class_decls -> class_decl . class_decls
    (9) class_decls -> class_decl .
    (8) class_decls -> . class_decl class_decls
    (9) class_decls -> . class_decl
    (10) class_decl -> . class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
    (11) class_header -> . modifiers CLASS ID extends_clause implements_clause
    (12) class_header -> . CLASS ID extends_clause implements_clause
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    $end            reduce using rule 9 (class_decls -> class_decl .)
    CLASS           shift and go to state 11
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    class_decl                     shift and go to state 7
    class_decls                    shift and go to state 30
    class_header                   shift and go to state 9
    modifiers                      shift and go to state 10
    modifier                       shift and go to state 12

state 8

    (7) import_decl -> IMPORT . qualified_id PUNTO_Y_COMA
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 28

    qualified_id                   shift and go to state 31

state 9

    (10) class_decl -> class_header . LLAVE_ABIERTA class_body LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 32


state 10

    (11) class_header -> modifiers . CLASS ID extends_clause implements_clause

    CLASS           shift and go to state 33


state 11

    (12) class_header -> CLASS . ID extends_clause implements_clause

    ID              shift and go to state 34


state 12

    (179) modifiers -> modifier . modifiers
    (180) modifiers -> modifier .
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    CLASS           reduce using rule 180 (modifiers -> modifier .)
    ID              reduce using rule 180 (modifiers -> modifier .)
    VOID            reduce using rule 180 (modifiers -> modifier .)
    INT             reduce using rule 180 (modifiers -> modifier .)
    FLOAT           reduce using rule 180 (modifiers -> modifier .)
    DOUBLE          reduce using rule 180 (modifiers -> modifier .)
    CHAR            reduce using rule 180 (modifiers -> modifier .)
    BOOLEAN         reduce using rule 180 (modifiers -> modifier .)
    SHORT           reduce using rule 180 (modifiers -> modifier .)
    LONG            reduce using rule 180 (modifiers -> modifier .)
    STRING          reduce using rule 180 (modifiers -> modifier .)
    BYTE            reduce using rule 180 (modifiers -> modifier .)
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    modifier                       shift and go to state 12
    modifiers                      shift and go to state 35

state 13

    (181) modifier -> PUBLIC .

    PUBLIC          reduce using rule 181 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 181 (modifier -> PUBLIC .)
    PROTECTED       reduce using rule 181 (modifier -> PUBLIC .)
    STATIC          reduce using rule 181 (modifier -> PUBLIC .)
    FINAL           reduce using rule 181 (modifier -> PUBLIC .)
    ABSTRACT        reduce using rule 181 (modifier -> PUBLIC .)
    NATIVE          reduce using rule 181 (modifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 181 (modifier -> PUBLIC .)
    VOLATILE        reduce using rule 181 (modifier -> PUBLIC .)
    EXPORT          reduce using rule 181 (modifier -> PUBLIC .)
    INTERFACE       reduce using rule 181 (modifier -> PUBLIC .)
    TRANSIENT       reduce using rule 181 (modifier -> PUBLIC .)
    CLASS           reduce using rule 181 (modifier -> PUBLIC .)
    ID              reduce using rule 181 (modifier -> PUBLIC .)
    VOID            reduce using rule 181 (modifier -> PUBLIC .)
    INT             reduce using rule 181 (modifier -> PUBLIC .)
    FLOAT           reduce using rule 181 (modifier -> PUBLIC .)
    DOUBLE          reduce using rule 181 (modifier -> PUBLIC .)
    CHAR            reduce using rule 181 (modifier -> PUBLIC .)
    BOOLEAN         reduce using rule 181 (modifier -> PUBLIC .)
    SHORT           reduce using rule 181 (modifier -> PUBLIC .)
    LONG            reduce using rule 181 (modifier -> PUBLIC .)
    STRING          reduce using rule 181 (modifier -> PUBLIC .)
    BYTE            reduce using rule 181 (modifier -> PUBLIC .)


state 14

    (182) modifier -> PRIVATE .

    PUBLIC          reduce using rule 182 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 182 (modifier -> PRIVATE .)
    PROTECTED       reduce using rule 182 (modifier -> PRIVATE .)
    STATIC          reduce using rule 182 (modifier -> PRIVATE .)
    FINAL           reduce using rule 182 (modifier -> PRIVATE .)
    ABSTRACT        reduce using rule 182 (modifier -> PRIVATE .)
    NATIVE          reduce using rule 182 (modifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 182 (modifier -> PRIVATE .)
    VOLATILE        reduce using rule 182 (modifier -> PRIVATE .)
    EXPORT          reduce using rule 182 (modifier -> PRIVATE .)
    INTERFACE       reduce using rule 182 (modifier -> PRIVATE .)
    TRANSIENT       reduce using rule 182 (modifier -> PRIVATE .)
    CLASS           reduce using rule 182 (modifier -> PRIVATE .)
    ID              reduce using rule 182 (modifier -> PRIVATE .)
    VOID            reduce using rule 182 (modifier -> PRIVATE .)
    INT             reduce using rule 182 (modifier -> PRIVATE .)
    FLOAT           reduce using rule 182 (modifier -> PRIVATE .)
    DOUBLE          reduce using rule 182 (modifier -> PRIVATE .)
    CHAR            reduce using rule 182 (modifier -> PRIVATE .)
    BOOLEAN         reduce using rule 182 (modifier -> PRIVATE .)
    SHORT           reduce using rule 182 (modifier -> PRIVATE .)
    LONG            reduce using rule 182 (modifier -> PRIVATE .)
    STRING          reduce using rule 182 (modifier -> PRIVATE .)
    BYTE            reduce using rule 182 (modifier -> PRIVATE .)


state 15

    (183) modifier -> PROTECTED .

    PUBLIC          reduce using rule 183 (modifier -> PROTECTED .)
    PRIVATE         reduce using rule 183 (modifier -> PROTECTED .)
    PROTECTED       reduce using rule 183 (modifier -> PROTECTED .)
    STATIC          reduce using rule 183 (modifier -> PROTECTED .)
    FINAL           reduce using rule 183 (modifier -> PROTECTED .)
    ABSTRACT        reduce using rule 183 (modifier -> PROTECTED .)
    NATIVE          reduce using rule 183 (modifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 183 (modifier -> PROTECTED .)
    VOLATILE        reduce using rule 183 (modifier -> PROTECTED .)
    EXPORT          reduce using rule 183 (modifier -> PROTECTED .)
    INTERFACE       reduce using rule 183 (modifier -> PROTECTED .)
    TRANSIENT       reduce using rule 183 (modifier -> PROTECTED .)
    CLASS           reduce using rule 183 (modifier -> PROTECTED .)
    ID              reduce using rule 183 (modifier -> PROTECTED .)
    VOID            reduce using rule 183 (modifier -> PROTECTED .)
    INT             reduce using rule 183 (modifier -> PROTECTED .)
    FLOAT           reduce using rule 183 (modifier -> PROTECTED .)
    DOUBLE          reduce using rule 183 (modifier -> PROTECTED .)
    CHAR            reduce using rule 183 (modifier -> PROTECTED .)
    BOOLEAN         reduce using rule 183 (modifier -> PROTECTED .)
    SHORT           reduce using rule 183 (modifier -> PROTECTED .)
    LONG            reduce using rule 183 (modifier -> PROTECTED .)
    STRING          reduce using rule 183 (modifier -> PROTECTED .)
    BYTE            reduce using rule 183 (modifier -> PROTECTED .)


state 16

    (184) modifier -> STATIC .

    PUBLIC          reduce using rule 184 (modifier -> STATIC .)
    PRIVATE         reduce using rule 184 (modifier -> STATIC .)
    PROTECTED       reduce using rule 184 (modifier -> STATIC .)
    STATIC          reduce using rule 184 (modifier -> STATIC .)
    FINAL           reduce using rule 184 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 184 (modifier -> STATIC .)
    NATIVE          reduce using rule 184 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 184 (modifier -> STATIC .)
    VOLATILE        reduce using rule 184 (modifier -> STATIC .)
    EXPORT          reduce using rule 184 (modifier -> STATIC .)
    INTERFACE       reduce using rule 184 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 184 (modifier -> STATIC .)
    CLASS           reduce using rule 184 (modifier -> STATIC .)
    ID              reduce using rule 184 (modifier -> STATIC .)
    VOID            reduce using rule 184 (modifier -> STATIC .)
    INT             reduce using rule 184 (modifier -> STATIC .)
    FLOAT           reduce using rule 184 (modifier -> STATIC .)
    DOUBLE          reduce using rule 184 (modifier -> STATIC .)
    CHAR            reduce using rule 184 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 184 (modifier -> STATIC .)
    SHORT           reduce using rule 184 (modifier -> STATIC .)
    LONG            reduce using rule 184 (modifier -> STATIC .)
    STRING          reduce using rule 184 (modifier -> STATIC .)
    BYTE            reduce using rule 184 (modifier -> STATIC .)


state 17

    (185) modifier -> FINAL .

    PUBLIC          reduce using rule 185 (modifier -> FINAL .)
    PRIVATE         reduce using rule 185 (modifier -> FINAL .)
    PROTECTED       reduce using rule 185 (modifier -> FINAL .)
    STATIC          reduce using rule 185 (modifier -> FINAL .)
    FINAL           reduce using rule 185 (modifier -> FINAL .)
    ABSTRACT        reduce using rule 185 (modifier -> FINAL .)
    NATIVE          reduce using rule 185 (modifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 185 (modifier -> FINAL .)
    VOLATILE        reduce using rule 185 (modifier -> FINAL .)
    EXPORT          reduce using rule 185 (modifier -> FINAL .)
    INTERFACE       reduce using rule 185 (modifier -> FINAL .)
    TRANSIENT       reduce using rule 185 (modifier -> FINAL .)
    CLASS           reduce using rule 185 (modifier -> FINAL .)
    ID              reduce using rule 185 (modifier -> FINAL .)
    VOID            reduce using rule 185 (modifier -> FINAL .)
    INT             reduce using rule 185 (modifier -> FINAL .)
    FLOAT           reduce using rule 185 (modifier -> FINAL .)
    DOUBLE          reduce using rule 185 (modifier -> FINAL .)
    CHAR            reduce using rule 185 (modifier -> FINAL .)
    BOOLEAN         reduce using rule 185 (modifier -> FINAL .)
    SHORT           reduce using rule 185 (modifier -> FINAL .)
    LONG            reduce using rule 185 (modifier -> FINAL .)
    STRING          reduce using rule 185 (modifier -> FINAL .)
    BYTE            reduce using rule 185 (modifier -> FINAL .)


state 18

    (186) modifier -> ABSTRACT .

    PUBLIC          reduce using rule 186 (modifier -> ABSTRACT .)
    PRIVATE         reduce using rule 186 (modifier -> ABSTRACT .)
    PROTECTED       reduce using rule 186 (modifier -> ABSTRACT .)
    STATIC          reduce using rule 186 (modifier -> ABSTRACT .)
    FINAL           reduce using rule 186 (modifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 186 (modifier -> ABSTRACT .)
    NATIVE          reduce using rule 186 (modifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 186 (modifier -> ABSTRACT .)
    VOLATILE        reduce using rule 186 (modifier -> ABSTRACT .)
    EXPORT          reduce using rule 186 (modifier -> ABSTRACT .)
    INTERFACE       reduce using rule 186 (modifier -> ABSTRACT .)
    TRANSIENT       reduce using rule 186 (modifier -> ABSTRACT .)
    CLASS           reduce using rule 186 (modifier -> ABSTRACT .)
    ID              reduce using rule 186 (modifier -> ABSTRACT .)
    VOID            reduce using rule 186 (modifier -> ABSTRACT .)
    INT             reduce using rule 186 (modifier -> ABSTRACT .)
    FLOAT           reduce using rule 186 (modifier -> ABSTRACT .)
    DOUBLE          reduce using rule 186 (modifier -> ABSTRACT .)
    CHAR            reduce using rule 186 (modifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 186 (modifier -> ABSTRACT .)
    SHORT           reduce using rule 186 (modifier -> ABSTRACT .)
    LONG            reduce using rule 186 (modifier -> ABSTRACT .)
    STRING          reduce using rule 186 (modifier -> ABSTRACT .)
    BYTE            reduce using rule 186 (modifier -> ABSTRACT .)


state 19

    (187) modifier -> NATIVE .

    PUBLIC          reduce using rule 187 (modifier -> NATIVE .)
    PRIVATE         reduce using rule 187 (modifier -> NATIVE .)
    PROTECTED       reduce using rule 187 (modifier -> NATIVE .)
    STATIC          reduce using rule 187 (modifier -> NATIVE .)
    FINAL           reduce using rule 187 (modifier -> NATIVE .)
    ABSTRACT        reduce using rule 187 (modifier -> NATIVE .)
    NATIVE          reduce using rule 187 (modifier -> NATIVE .)
    SYNCHRONIZED    reduce using rule 187 (modifier -> NATIVE .)
    VOLATILE        reduce using rule 187 (modifier -> NATIVE .)
    EXPORT          reduce using rule 187 (modifier -> NATIVE .)
    INTERFACE       reduce using rule 187 (modifier -> NATIVE .)
    TRANSIENT       reduce using rule 187 (modifier -> NATIVE .)
    CLASS           reduce using rule 187 (modifier -> NATIVE .)
    ID              reduce using rule 187 (modifier -> NATIVE .)
    VOID            reduce using rule 187 (modifier -> NATIVE .)
    INT             reduce using rule 187 (modifier -> NATIVE .)
    FLOAT           reduce using rule 187 (modifier -> NATIVE .)
    DOUBLE          reduce using rule 187 (modifier -> NATIVE .)
    CHAR            reduce using rule 187 (modifier -> NATIVE .)
    BOOLEAN         reduce using rule 187 (modifier -> NATIVE .)
    SHORT           reduce using rule 187 (modifier -> NATIVE .)
    LONG            reduce using rule 187 (modifier -> NATIVE .)
    STRING          reduce using rule 187 (modifier -> NATIVE .)
    BYTE            reduce using rule 187 (modifier -> NATIVE .)


state 20

    (188) modifier -> SYNCHRONIZED .

    PUBLIC          reduce using rule 188 (modifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 188 (modifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 188 (modifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 188 (modifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 188 (modifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 188 (modifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 188 (modifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 188 (modifier -> SYNCHRONIZED .)
    VOLATILE        reduce using rule 188 (modifier -> SYNCHRONIZED .)
    EXPORT          reduce using rule 188 (modifier -> SYNCHRONIZED .)
    INTERFACE       reduce using rule 188 (modifier -> SYNCHRONIZED .)
    TRANSIENT       reduce using rule 188 (modifier -> SYNCHRONIZED .)
    CLASS           reduce using rule 188 (modifier -> SYNCHRONIZED .)
    ID              reduce using rule 188 (modifier -> SYNCHRONIZED .)
    VOID            reduce using rule 188 (modifier -> SYNCHRONIZED .)
    INT             reduce using rule 188 (modifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 188 (modifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 188 (modifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 188 (modifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 188 (modifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 188 (modifier -> SYNCHRONIZED .)
    LONG            reduce using rule 188 (modifier -> SYNCHRONIZED .)
    STRING          reduce using rule 188 (modifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 188 (modifier -> SYNCHRONIZED .)


state 21

    (189) modifier -> VOLATILE .

    PUBLIC          reduce using rule 189 (modifier -> VOLATILE .)
    PRIVATE         reduce using rule 189 (modifier -> VOLATILE .)
    PROTECTED       reduce using rule 189 (modifier -> VOLATILE .)
    STATIC          reduce using rule 189 (modifier -> VOLATILE .)
    FINAL           reduce using rule 189 (modifier -> VOLATILE .)
    ABSTRACT        reduce using rule 189 (modifier -> VOLATILE .)
    NATIVE          reduce using rule 189 (modifier -> VOLATILE .)
    SYNCHRONIZED    reduce using rule 189 (modifier -> VOLATILE .)
    VOLATILE        reduce using rule 189 (modifier -> VOLATILE .)
    EXPORT          reduce using rule 189 (modifier -> VOLATILE .)
    INTERFACE       reduce using rule 189 (modifier -> VOLATILE .)
    TRANSIENT       reduce using rule 189 (modifier -> VOLATILE .)
    CLASS           reduce using rule 189 (modifier -> VOLATILE .)
    ID              reduce using rule 189 (modifier -> VOLATILE .)
    VOID            reduce using rule 189 (modifier -> VOLATILE .)
    INT             reduce using rule 189 (modifier -> VOLATILE .)
    FLOAT           reduce using rule 189 (modifier -> VOLATILE .)
    DOUBLE          reduce using rule 189 (modifier -> VOLATILE .)
    CHAR            reduce using rule 189 (modifier -> VOLATILE .)
    BOOLEAN         reduce using rule 189 (modifier -> VOLATILE .)
    SHORT           reduce using rule 189 (modifier -> VOLATILE .)
    LONG            reduce using rule 189 (modifier -> VOLATILE .)
    STRING          reduce using rule 189 (modifier -> VOLATILE .)
    BYTE            reduce using rule 189 (modifier -> VOLATILE .)


state 22

    (190) modifier -> EXPORT .

    PUBLIC          reduce using rule 190 (modifier -> EXPORT .)
    PRIVATE         reduce using rule 190 (modifier -> EXPORT .)
    PROTECTED       reduce using rule 190 (modifier -> EXPORT .)
    STATIC          reduce using rule 190 (modifier -> EXPORT .)
    FINAL           reduce using rule 190 (modifier -> EXPORT .)
    ABSTRACT        reduce using rule 190 (modifier -> EXPORT .)
    NATIVE          reduce using rule 190 (modifier -> EXPORT .)
    SYNCHRONIZED    reduce using rule 190 (modifier -> EXPORT .)
    VOLATILE        reduce using rule 190 (modifier -> EXPORT .)
    EXPORT          reduce using rule 190 (modifier -> EXPORT .)
    INTERFACE       reduce using rule 190 (modifier -> EXPORT .)
    TRANSIENT       reduce using rule 190 (modifier -> EXPORT .)
    CLASS           reduce using rule 190 (modifier -> EXPORT .)
    ID              reduce using rule 190 (modifier -> EXPORT .)
    VOID            reduce using rule 190 (modifier -> EXPORT .)
    INT             reduce using rule 190 (modifier -> EXPORT .)
    FLOAT           reduce using rule 190 (modifier -> EXPORT .)
    DOUBLE          reduce using rule 190 (modifier -> EXPORT .)
    CHAR            reduce using rule 190 (modifier -> EXPORT .)
    BOOLEAN         reduce using rule 190 (modifier -> EXPORT .)
    SHORT           reduce using rule 190 (modifier -> EXPORT .)
    LONG            reduce using rule 190 (modifier -> EXPORT .)
    STRING          reduce using rule 190 (modifier -> EXPORT .)
    BYTE            reduce using rule 190 (modifier -> EXPORT .)


state 23

    (191) modifier -> INTERFACE .

    PUBLIC          reduce using rule 191 (modifier -> INTERFACE .)
    PRIVATE         reduce using rule 191 (modifier -> INTERFACE .)
    PROTECTED       reduce using rule 191 (modifier -> INTERFACE .)
    STATIC          reduce using rule 191 (modifier -> INTERFACE .)
    FINAL           reduce using rule 191 (modifier -> INTERFACE .)
    ABSTRACT        reduce using rule 191 (modifier -> INTERFACE .)
    NATIVE          reduce using rule 191 (modifier -> INTERFACE .)
    SYNCHRONIZED    reduce using rule 191 (modifier -> INTERFACE .)
    VOLATILE        reduce using rule 191 (modifier -> INTERFACE .)
    EXPORT          reduce using rule 191 (modifier -> INTERFACE .)
    INTERFACE       reduce using rule 191 (modifier -> INTERFACE .)
    TRANSIENT       reduce using rule 191 (modifier -> INTERFACE .)
    CLASS           reduce using rule 191 (modifier -> INTERFACE .)
    ID              reduce using rule 191 (modifier -> INTERFACE .)
    VOID            reduce using rule 191 (modifier -> INTERFACE .)
    INT             reduce using rule 191 (modifier -> INTERFACE .)
    FLOAT           reduce using rule 191 (modifier -> INTERFACE .)
    DOUBLE          reduce using rule 191 (modifier -> INTERFACE .)
    CHAR            reduce using rule 191 (modifier -> INTERFACE .)
    BOOLEAN         reduce using rule 191 (modifier -> INTERFACE .)
    SHORT           reduce using rule 191 (modifier -> INTERFACE .)
    LONG            reduce using rule 191 (modifier -> INTERFACE .)
    STRING          reduce using rule 191 (modifier -> INTERFACE .)
    BYTE            reduce using rule 191 (modifier -> INTERFACE .)


state 24

    (192) modifier -> TRANSIENT .

    PUBLIC          reduce using rule 192 (modifier -> TRANSIENT .)
    PRIVATE         reduce using rule 192 (modifier -> TRANSIENT .)
    PROTECTED       reduce using rule 192 (modifier -> TRANSIENT .)
    STATIC          reduce using rule 192 (modifier -> TRANSIENT .)
    FINAL           reduce using rule 192 (modifier -> TRANSIENT .)
    ABSTRACT        reduce using rule 192 (modifier -> TRANSIENT .)
    NATIVE          reduce using rule 192 (modifier -> TRANSIENT .)
    SYNCHRONIZED    reduce using rule 192 (modifier -> TRANSIENT .)
    VOLATILE        reduce using rule 192 (modifier -> TRANSIENT .)
    EXPORT          reduce using rule 192 (modifier -> TRANSIENT .)
    INTERFACE       reduce using rule 192 (modifier -> TRANSIENT .)
    TRANSIENT       reduce using rule 192 (modifier -> TRANSIENT .)
    CLASS           reduce using rule 192 (modifier -> TRANSIENT .)
    ID              reduce using rule 192 (modifier -> TRANSIENT .)
    VOID            reduce using rule 192 (modifier -> TRANSIENT .)
    INT             reduce using rule 192 (modifier -> TRANSIENT .)
    FLOAT           reduce using rule 192 (modifier -> TRANSIENT .)
    DOUBLE          reduce using rule 192 (modifier -> TRANSIENT .)
    CHAR            reduce using rule 192 (modifier -> TRANSIENT .)
    BOOLEAN         reduce using rule 192 (modifier -> TRANSIENT .)
    SHORT           reduce using rule 192 (modifier -> TRANSIENT .)
    LONG            reduce using rule 192 (modifier -> TRANSIENT .)
    STRING          reduce using rule 192 (modifier -> TRANSIENT .)
    BYTE            reduce using rule 192 (modifier -> TRANSIENT .)


state 25

    (1) program -> package_decl import_decls . class_decls
    (8) class_decls -> . class_decl class_decls
    (9) class_decls -> . class_decl
    (10) class_decl -> . class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
    (11) class_header -> . modifiers CLASS ID extends_clause implements_clause
    (12) class_header -> . CLASS ID extends_clause implements_clause
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    CLASS           shift and go to state 11
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    class_decls                    shift and go to state 36
    class_decl                     shift and go to state 7
    class_header                   shift and go to state 9
    modifiers                      shift and go to state 10
    modifier                       shift and go to state 12

state 26

    (2) program -> import_decls class_decls .

    $end            reduce using rule 2 (program -> import_decls class_decls .)


state 27

    (4) package_decl -> PACKAGE qualified_id . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 37


state 28

    (91) qualified_id -> ID . PUNTO ID
    (92) qualified_id -> ID .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 38
    PUNTO_Y_COMA    reduce using rule 92 (qualified_id -> ID .)
    IMPLEMENTS      reduce using rule 92 (qualified_id -> ID .)
    LLAVE_ABIERTA   reduce using rule 92 (qualified_id -> ID .)
    COMA            reduce using rule 92 (qualified_id -> ID .)
    CORCHETE_ABIERTO reduce using rule 92 (qualified_id -> ID .)
    ID              reduce using rule 92 (qualified_id -> ID .)
    INCREMENTO      reduce using rule 92 (qualified_id -> ID .)
    DECREMENTO      reduce using rule 92 (qualified_id -> ID .)
    MULTIPLICACION  reduce using rule 92 (qualified_id -> ID .)
    DIVISION        reduce using rule 92 (qualified_id -> ID .)
    MODULO          reduce using rule 92 (qualified_id -> ID .)
    SUMA            reduce using rule 92 (qualified_id -> ID .)
    RESTA           reduce using rule 92 (qualified_id -> ID .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 92 (qualified_id -> ID .)
    DESPLAZAMIENTO_DERECHO reduce using rule 92 (qualified_id -> ID .)
    MENOR           reduce using rule 92 (qualified_id -> ID .)
    MAYOR           reduce using rule 92 (qualified_id -> ID .)
    MENOR_IGUAL     reduce using rule 92 (qualified_id -> ID .)
    MAYOR_IGUAL     reduce using rule 92 (qualified_id -> ID .)
    INSTANCEOF      reduce using rule 92 (qualified_id -> ID .)
    IGUAL           reduce using rule 92 (qualified_id -> ID .)
    DISTINTO        reduce using rule 92 (qualified_id -> ID .)
    AND_BIT         reduce using rule 92 (qualified_id -> ID .)
    XOR_BIT         reduce using rule 92 (qualified_id -> ID .)
    OR_BIT          reduce using rule 92 (qualified_id -> ID .)
    AND_LOGICO      reduce using rule 92 (qualified_id -> ID .)
    TERNARIO        reduce using rule 92 (qualified_id -> ID .)
    OR_LOGICO       reduce using rule 92 (qualified_id -> ID .)
    PARENTESIS_CERRADO reduce using rule 92 (qualified_id -> ID .)
    DOSPUNTOS       reduce using rule 92 (qualified_id -> ID .)
    CORCHETE_CERRADO reduce using rule 92 (qualified_id -> ID .)
    PARENTESIS_ABIERTO reduce using rule 92 (qualified_id -> ID .)

  ! PUNTO           [ reduce using rule 92 (qualified_id -> ID .) ]


state 29

    (5) import_decls -> import_decl import_decls .

    CLASS           reduce using rule 5 (import_decls -> import_decl import_decls .)
    PUBLIC          reduce using rule 5 (import_decls -> import_decl import_decls .)
    PRIVATE         reduce using rule 5 (import_decls -> import_decl import_decls .)
    PROTECTED       reduce using rule 5 (import_decls -> import_decl import_decls .)
    STATIC          reduce using rule 5 (import_decls -> import_decl import_decls .)
    FINAL           reduce using rule 5 (import_decls -> import_decl import_decls .)
    ABSTRACT        reduce using rule 5 (import_decls -> import_decl import_decls .)
    NATIVE          reduce using rule 5 (import_decls -> import_decl import_decls .)
    SYNCHRONIZED    reduce using rule 5 (import_decls -> import_decl import_decls .)
    VOLATILE        reduce using rule 5 (import_decls -> import_decl import_decls .)
    EXPORT          reduce using rule 5 (import_decls -> import_decl import_decls .)
    INTERFACE       reduce using rule 5 (import_decls -> import_decl import_decls .)
    TRANSIENT       reduce using rule 5 (import_decls -> import_decl import_decls .)


state 30

    (8) class_decls -> class_decl class_decls .

    $end            reduce using rule 8 (class_decls -> class_decl class_decls .)


state 31

    (7) import_decl -> IMPORT qualified_id . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 39


state 32

    (10) class_decl -> class_header LLAVE_ABIERTA . class_body LLAVE_CERRADA
    (17) class_body -> . class_members
    (18) class_members -> . class_member class_members
    (19) class_members -> . empty
    (20) class_member -> . field_decl
    (21) class_member -> . method_decl
    (22) class_member -> . constructor_decl
    (23) class_member -> . class_decl
    (193) empty -> .
    (24) field_decl -> . modifiers type variables PUNTO_Y_COMA
    (29) method_decl -> . method_header block
    (45) constructor_decl -> . modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block
    (10) class_decl -> . class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (30) method_header -> . modifiers type ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (31) method_header -> . modifiers VOID ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (32) method_header -> . modifiers type ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (33) method_header -> . modifiers VOID ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (11) class_header -> . modifiers CLASS ID extends_clause implements_clause
    (12) class_header -> . CLASS ID extends_clause implements_clause
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    LLAVE_CERRADA   reduce using rule 193 (empty -> .)
    CLASS           shift and go to state 11
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    class_header                   shift and go to state 9
    class_body                     shift and go to state 40
    class_members                  shift and go to state 41
    class_member                   shift and go to state 42
    empty                          shift and go to state 43
    field_decl                     shift and go to state 44
    method_decl                    shift and go to state 45
    constructor_decl               shift and go to state 46
    class_decl                     shift and go to state 47
    modifiers                      shift and go to state 48
    method_header                  shift and go to state 49
    modifier                       shift and go to state 12

state 33

    (11) class_header -> modifiers CLASS . ID extends_clause implements_clause

    ID              shift and go to state 50


state 34

    (12) class_header -> CLASS ID . extends_clause implements_clause
    (13) extends_clause -> . EXTENDS qualified_id
    (14) extends_clause -> . empty
    (193) empty -> .

    EXTENDS         shift and go to state 52
    IMPLEMENTS      reduce using rule 193 (empty -> .)
    LLAVE_ABIERTA   reduce using rule 193 (empty -> .)

    extends_clause                 shift and go to state 51
    empty                          shift and go to state 53

state 35

    (179) modifiers -> modifier modifiers .

    CLASS           reduce using rule 179 (modifiers -> modifier modifiers .)
    ID              reduce using rule 179 (modifiers -> modifier modifiers .)
    VOID            reduce using rule 179 (modifiers -> modifier modifiers .)
    INT             reduce using rule 179 (modifiers -> modifier modifiers .)
    FLOAT           reduce using rule 179 (modifiers -> modifier modifiers .)
    DOUBLE          reduce using rule 179 (modifiers -> modifier modifiers .)
    CHAR            reduce using rule 179 (modifiers -> modifier modifiers .)
    BOOLEAN         reduce using rule 179 (modifiers -> modifier modifiers .)
    SHORT           reduce using rule 179 (modifiers -> modifier modifiers .)
    LONG            reduce using rule 179 (modifiers -> modifier modifiers .)
    STRING          reduce using rule 179 (modifiers -> modifier modifiers .)
    BYTE            reduce using rule 179 (modifiers -> modifier modifiers .)


state 36

    (1) program -> package_decl import_decls class_decls .

    $end            reduce using rule 1 (program -> package_decl import_decls class_decls .)


state 37

    (4) package_decl -> PACKAGE qualified_id PUNTO_Y_COMA .

    IMPORT          reduce using rule 4 (package_decl -> PACKAGE qualified_id PUNTO_Y_COMA .)


state 38

    (91) qualified_id -> ID PUNTO . ID

    ID              shift and go to state 54


state 39

    (7) import_decl -> IMPORT qualified_id PUNTO_Y_COMA .

    IMPORT          reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    CLASS           reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    PUBLIC          reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    STATIC          reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    FINAL           reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    ABSTRACT        reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    NATIVE          reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    SYNCHRONIZED    reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    VOLATILE        reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    EXPORT          reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    INTERFACE       reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)
    TRANSIENT       reduce using rule 7 (import_decl -> IMPORT qualified_id PUNTO_Y_COMA .)


state 40

    (10) class_decl -> class_header LLAVE_ABIERTA class_body . LLAVE_CERRADA

    LLAVE_CERRADA   shift and go to state 55


state 41

    (17) class_body -> class_members .

    LLAVE_CERRADA   reduce using rule 17 (class_body -> class_members .)


state 42

    (18) class_members -> class_member . class_members
    (18) class_members -> . class_member class_members
    (19) class_members -> . empty
    (20) class_member -> . field_decl
    (21) class_member -> . method_decl
    (22) class_member -> . constructor_decl
    (23) class_member -> . class_decl
    (193) empty -> .
    (24) field_decl -> . modifiers type variables PUNTO_Y_COMA
    (29) method_decl -> . method_header block
    (45) constructor_decl -> . modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block
    (10) class_decl -> . class_header LLAVE_ABIERTA class_body LLAVE_CERRADA
    (179) modifiers -> . modifier modifiers
    (180) modifiers -> . modifier
    (30) method_header -> . modifiers type ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (31) method_header -> . modifiers VOID ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (32) method_header -> . modifiers type ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (33) method_header -> . modifiers VOID ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (11) class_header -> . modifiers CLASS ID extends_clause implements_clause
    (12) class_header -> . CLASS ID extends_clause implements_clause
    (181) modifier -> . PUBLIC
    (182) modifier -> . PRIVATE
    (183) modifier -> . PROTECTED
    (184) modifier -> . STATIC
    (185) modifier -> . FINAL
    (186) modifier -> . ABSTRACT
    (187) modifier -> . NATIVE
    (188) modifier -> . SYNCHRONIZED
    (189) modifier -> . VOLATILE
    (190) modifier -> . EXPORT
    (191) modifier -> . INTERFACE
    (192) modifier -> . TRANSIENT

    LLAVE_CERRADA   reduce using rule 193 (empty -> .)
    CLASS           shift and go to state 11
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    FINAL           shift and go to state 17
    ABSTRACT        shift and go to state 18
    NATIVE          shift and go to state 19
    SYNCHRONIZED    shift and go to state 20
    VOLATILE        shift and go to state 21
    EXPORT          shift and go to state 22
    INTERFACE       shift and go to state 23
    TRANSIENT       shift and go to state 24

    class_member                   shift and go to state 42
    class_members                  shift and go to state 56
    empty                          shift and go to state 43
    field_decl                     shift and go to state 44
    method_decl                    shift and go to state 45
    constructor_decl               shift and go to state 46
    class_decl                     shift and go to state 47
    modifiers                      shift and go to state 48
    method_header                  shift and go to state 49
    class_header                   shift and go to state 9
    modifier                       shift and go to state 12

state 43

    (19) class_members -> empty .

    LLAVE_CERRADA   reduce using rule 19 (class_members -> empty .)


state 44

    (20) class_member -> field_decl .

    CLASS           reduce using rule 20 (class_member -> field_decl .)
    PUBLIC          reduce using rule 20 (class_member -> field_decl .)
    PRIVATE         reduce using rule 20 (class_member -> field_decl .)
    PROTECTED       reduce using rule 20 (class_member -> field_decl .)
    STATIC          reduce using rule 20 (class_member -> field_decl .)
    FINAL           reduce using rule 20 (class_member -> field_decl .)
    ABSTRACT        reduce using rule 20 (class_member -> field_decl .)
    NATIVE          reduce using rule 20 (class_member -> field_decl .)
    SYNCHRONIZED    reduce using rule 20 (class_member -> field_decl .)
    VOLATILE        reduce using rule 20 (class_member -> field_decl .)
    EXPORT          reduce using rule 20 (class_member -> field_decl .)
    INTERFACE       reduce using rule 20 (class_member -> field_decl .)
    TRANSIENT       reduce using rule 20 (class_member -> field_decl .)
    LLAVE_CERRADA   reduce using rule 20 (class_member -> field_decl .)


state 45

    (21) class_member -> method_decl .

    CLASS           reduce using rule 21 (class_member -> method_decl .)
    PUBLIC          reduce using rule 21 (class_member -> method_decl .)
    PRIVATE         reduce using rule 21 (class_member -> method_decl .)
    PROTECTED       reduce using rule 21 (class_member -> method_decl .)
    STATIC          reduce using rule 21 (class_member -> method_decl .)
    FINAL           reduce using rule 21 (class_member -> method_decl .)
    ABSTRACT        reduce using rule 21 (class_member -> method_decl .)
    NATIVE          reduce using rule 21 (class_member -> method_decl .)
    SYNCHRONIZED    reduce using rule 21 (class_member -> method_decl .)
    VOLATILE        reduce using rule 21 (class_member -> method_decl .)
    EXPORT          reduce using rule 21 (class_member -> method_decl .)
    INTERFACE       reduce using rule 21 (class_member -> method_decl .)
    TRANSIENT       reduce using rule 21 (class_member -> method_decl .)
    LLAVE_CERRADA   reduce using rule 21 (class_member -> method_decl .)


state 46

    (22) class_member -> constructor_decl .

    CLASS           reduce using rule 22 (class_member -> constructor_decl .)
    PUBLIC          reduce using rule 22 (class_member -> constructor_decl .)
    PRIVATE         reduce using rule 22 (class_member -> constructor_decl .)
    PROTECTED       reduce using rule 22 (class_member -> constructor_decl .)
    STATIC          reduce using rule 22 (class_member -> constructor_decl .)
    FINAL           reduce using rule 22 (class_member -> constructor_decl .)
    ABSTRACT        reduce using rule 22 (class_member -> constructor_decl .)
    NATIVE          reduce using rule 22 (class_member -> constructor_decl .)
    SYNCHRONIZED    reduce using rule 22 (class_member -> constructor_decl .)
    VOLATILE        reduce using rule 22 (class_member -> constructor_decl .)
    EXPORT          reduce using rule 22 (class_member -> constructor_decl .)
    INTERFACE       reduce using rule 22 (class_member -> constructor_decl .)
    TRANSIENT       reduce using rule 22 (class_member -> constructor_decl .)
    LLAVE_CERRADA   reduce using rule 22 (class_member -> constructor_decl .)


state 47

    (23) class_member -> class_decl .

    CLASS           reduce using rule 23 (class_member -> class_decl .)
    PUBLIC          reduce using rule 23 (class_member -> class_decl .)
    PRIVATE         reduce using rule 23 (class_member -> class_decl .)
    PROTECTED       reduce using rule 23 (class_member -> class_decl .)
    STATIC          reduce using rule 23 (class_member -> class_decl .)
    FINAL           reduce using rule 23 (class_member -> class_decl .)
    ABSTRACT        reduce using rule 23 (class_member -> class_decl .)
    NATIVE          reduce using rule 23 (class_member -> class_decl .)
    SYNCHRONIZED    reduce using rule 23 (class_member -> class_decl .)
    VOLATILE        reduce using rule 23 (class_member -> class_decl .)
    EXPORT          reduce using rule 23 (class_member -> class_decl .)
    INTERFACE       reduce using rule 23 (class_member -> class_decl .)
    TRANSIENT       reduce using rule 23 (class_member -> class_decl .)
    LLAVE_CERRADA   reduce using rule 23 (class_member -> class_decl .)


state 48

    (24) field_decl -> modifiers . type variables PUNTO_Y_COMA
    (45) constructor_decl -> modifiers . ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block
    (30) method_header -> modifiers . type ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (31) method_header -> modifiers . VOID ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (32) method_header -> modifiers . type ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (33) method_header -> modifiers . VOID ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (11) class_header -> modifiers . CLASS ID extends_clause implements_clause
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 58
    VOID            shift and go to state 59
    CLASS           shift and go to state 33
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70

    type                           shift and go to state 57
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    qualified_id                   shift and go to state 71

state 49

    (29) method_decl -> method_header . block
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 73

    block                          shift and go to state 72

state 50

    (11) class_header -> modifiers CLASS ID . extends_clause implements_clause
    (13) extends_clause -> . EXTENDS qualified_id
    (14) extends_clause -> . empty
    (193) empty -> .

    EXTENDS         shift and go to state 52
    IMPLEMENTS      reduce using rule 193 (empty -> .)
    LLAVE_ABIERTA   reduce using rule 193 (empty -> .)

    extends_clause                 shift and go to state 74
    empty                          shift and go to state 53

state 51

    (12) class_header -> CLASS ID extends_clause . implements_clause
    (15) implements_clause -> . IMPLEMENTS qualified_id_list
    (16) implements_clause -> . empty
    (193) empty -> .

    IMPLEMENTS      shift and go to state 76
    LLAVE_ABIERTA   reduce using rule 193 (empty -> .)

    implements_clause              shift and go to state 75
    empty                          shift and go to state 77

state 52

    (13) extends_clause -> EXTENDS . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 28

    qualified_id                   shift and go to state 78

state 53

    (14) extends_clause -> empty .

    IMPLEMENTS      reduce using rule 14 (extends_clause -> empty .)
    LLAVE_ABIERTA   reduce using rule 14 (extends_clause -> empty .)


state 54

    (91) qualified_id -> ID PUNTO ID .

    PUNTO_Y_COMA    reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    ID              reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    IMPLEMENTS      reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    LLAVE_ABIERTA   reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    INCREMENTO      reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    DECREMENTO      reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    PUNTO           reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    CORCHETE_ABIERTO reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    MULTIPLICACION  reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    DIVISION        reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    MODULO          reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    SUMA            reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    RESTA           reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    DESPLAZAMIENTO_DERECHO reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    MENOR           reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    MAYOR           reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    MENOR_IGUAL     reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    INSTANCEOF      reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    IGUAL           reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    DISTINTO        reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    AND_BIT         reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    XOR_BIT         reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    OR_BIT          reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    AND_LOGICO      reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    TERNARIO        reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    OR_LOGICO       reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    COMA            reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    PARENTESIS_CERRADO reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    DOSPUNTOS       reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    CORCHETE_CERRADO reduce using rule 91 (qualified_id -> ID PUNTO ID .)
    PARENTESIS_ABIERTO reduce using rule 91 (qualified_id -> ID PUNTO ID .)


state 55

    (10) class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .

    CLASS           reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    PUBLIC          reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    PRIVATE         reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    PROTECTED       reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    STATIC          reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    FINAL           reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    ABSTRACT        reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    NATIVE          reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    SYNCHRONIZED    reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    VOLATILE        reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    EXPORT          reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    INTERFACE       reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    TRANSIENT       reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    $end            reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)
    LLAVE_CERRADA   reduce using rule 10 (class_decl -> class_header LLAVE_ABIERTA class_body LLAVE_CERRADA .)


state 56

    (18) class_members -> class_member class_members .

    LLAVE_CERRADA   reduce using rule 18 (class_members -> class_member class_members .)


state 57

    (24) field_decl -> modifiers type . variables PUNTO_Y_COMA
    (30) method_header -> modifiers type . ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (32) method_header -> modifiers type . ID PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (25) variables -> . variable COMA variables
    (26) variables -> . variable
    (27) variable -> . ID
    (28) variable -> . ID ASIGNACION expression

    ID              shift and go to state 80

    variables                      shift and go to state 79
    variable                       shift and go to state 81

state 58

    (45) constructor_decl -> modifiers ID . PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block
    (91) qualified_id -> ID . PUNTO ID
    (92) qualified_id -> ID .

    PARENTESIS_ABIERTO shift and go to state 82
    PUNTO           shift and go to state 38
    ID              reduce using rule 92 (qualified_id -> ID .)


state 59

    (31) method_header -> modifiers VOID . ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (33) method_header -> modifiers VOID . ID PARENTESIS_ABIERTO PARENTESIS_CERRADO

    ID              shift and go to state 83


state 60

    (79) type -> primitive_type .

    ID              reduce using rule 79 (type -> primitive_type .)


state 61

    (80) type -> reference_type .

    ID              reduce using rule 80 (type -> reference_type .)


state 62

    (81) primitive_type -> INT .

    ID              reduce using rule 81 (primitive_type -> INT .)
    CORCHETE_ABIERTO reduce using rule 81 (primitive_type -> INT .)


state 63

    (82) primitive_type -> FLOAT .

    ID              reduce using rule 82 (primitive_type -> FLOAT .)
    CORCHETE_ABIERTO reduce using rule 82 (primitive_type -> FLOAT .)


state 64

    (83) primitive_type -> DOUBLE .

    ID              reduce using rule 83 (primitive_type -> DOUBLE .)
    CORCHETE_ABIERTO reduce using rule 83 (primitive_type -> DOUBLE .)


state 65

    (84) primitive_type -> CHAR .

    ID              reduce using rule 84 (primitive_type -> CHAR .)
    CORCHETE_ABIERTO reduce using rule 84 (primitive_type -> CHAR .)


state 66

    (85) primitive_type -> BOOLEAN .

    ID              reduce using rule 85 (primitive_type -> BOOLEAN .)
    CORCHETE_ABIERTO reduce using rule 85 (primitive_type -> BOOLEAN .)


state 67

    (86) primitive_type -> SHORT .

    ID              reduce using rule 86 (primitive_type -> SHORT .)
    CORCHETE_ABIERTO reduce using rule 86 (primitive_type -> SHORT .)


state 68

    (87) primitive_type -> LONG .

    ID              reduce using rule 87 (primitive_type -> LONG .)
    CORCHETE_ABIERTO reduce using rule 87 (primitive_type -> LONG .)


state 69

    (88) primitive_type -> STRING .

    ID              reduce using rule 88 (primitive_type -> STRING .)
    CORCHETE_ABIERTO reduce using rule 88 (primitive_type -> STRING .)


state 70

    (89) primitive_type -> BYTE .

    ID              reduce using rule 89 (primitive_type -> BYTE .)
    CORCHETE_ABIERTO reduce using rule 89 (primitive_type -> BYTE .)


state 71

    (90) reference_type -> qualified_id .

    ID              reduce using rule 90 (reference_type -> qualified_id .)
    CORCHETE_ABIERTO reduce using rule 90 (reference_type -> qualified_id .)
    MENOR           reduce using rule 90 (reference_type -> qualified_id .)
    MAYOR           reduce using rule 90 (reference_type -> qualified_id .)
    MENOR_IGUAL     reduce using rule 90 (reference_type -> qualified_id .)
    MAYOR_IGUAL     reduce using rule 90 (reference_type -> qualified_id .)
    INSTANCEOF      reduce using rule 90 (reference_type -> qualified_id .)
    IGUAL           reduce using rule 90 (reference_type -> qualified_id .)
    DISTINTO        reduce using rule 90 (reference_type -> qualified_id .)
    AND_BIT         reduce using rule 90 (reference_type -> qualified_id .)
    XOR_BIT         reduce using rule 90 (reference_type -> qualified_id .)
    OR_BIT          reduce using rule 90 (reference_type -> qualified_id .)
    AND_LOGICO      reduce using rule 90 (reference_type -> qualified_id .)
    TERNARIO        reduce using rule 90 (reference_type -> qualified_id .)
    OR_LOGICO       reduce using rule 90 (reference_type -> qualified_id .)
    PUNTO_Y_COMA    reduce using rule 90 (reference_type -> qualified_id .)
    PARENTESIS_CERRADO reduce using rule 90 (reference_type -> qualified_id .)
    COMA            reduce using rule 90 (reference_type -> qualified_id .)
    DOSPUNTOS       reduce using rule 90 (reference_type -> qualified_id .)
    CORCHETE_CERRADO reduce using rule 90 (reference_type -> qualified_id .)


state 72

    (29) method_decl -> method_header block .

    CLASS           reduce using rule 29 (method_decl -> method_header block .)
    PUBLIC          reduce using rule 29 (method_decl -> method_header block .)
    PRIVATE         reduce using rule 29 (method_decl -> method_header block .)
    PROTECTED       reduce using rule 29 (method_decl -> method_header block .)
    STATIC          reduce using rule 29 (method_decl -> method_header block .)
    FINAL           reduce using rule 29 (method_decl -> method_header block .)
    ABSTRACT        reduce using rule 29 (method_decl -> method_header block .)
    NATIVE          reduce using rule 29 (method_decl -> method_header block .)
    SYNCHRONIZED    reduce using rule 29 (method_decl -> method_header block .)
    VOLATILE        reduce using rule 29 (method_decl -> method_header block .)
    EXPORT          reduce using rule 29 (method_decl -> method_header block .)
    INTERFACE       reduce using rule 29 (method_decl -> method_header block .)
    TRANSIENT       reduce using rule 29 (method_decl -> method_header block .)
    LLAVE_CERRADA   reduce using rule 29 (method_decl -> method_header block .)


state 73

    (46) block -> LLAVE_ABIERTA . statements LLAVE_CERRADA
    (47) block -> LLAVE_ABIERTA . LLAVE_CERRADA
    (48) statements -> . statement statements
    (49) statements -> . empty
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (193) empty -> .
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

  ! shift/reduce conflict for LLAVE_CERRADA resolved as shift
    LLAVE_CERRADA   shift and go to state 85
    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

  ! LLAVE_CERRADA   [ reduce using rule 193 (empty -> .) ]

    statements                     shift and go to state 84
    statement                      shift and go to state 86
    empty                          shift and go to state 87
    block                          shift and go to state 88
    expression                     shift and go to state 91
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 74

    (11) class_header -> modifiers CLASS ID extends_clause . implements_clause
    (15) implements_clause -> . IMPLEMENTS qualified_id_list
    (16) implements_clause -> . empty
    (193) empty -> .

    IMPLEMENTS      shift and go to state 76
    LLAVE_ABIERTA   reduce using rule 193 (empty -> .)

    implements_clause              shift and go to state 142
    empty                          shift and go to state 77

state 75

    (12) class_header -> CLASS ID extends_clause implements_clause .

    LLAVE_ABIERTA   reduce using rule 12 (class_header -> CLASS ID extends_clause implements_clause .)


state 76

    (15) implements_clause -> IMPLEMENTS . qualified_id_list
    (93) qualified_id_list -> . qualified_id COMA qualified_id_list
    (94) qualified_id_list -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 28

    qualified_id_list              shift and go to state 143
    qualified_id                   shift and go to state 144

state 77

    (16) implements_clause -> empty .

    LLAVE_ABIERTA   reduce using rule 16 (implements_clause -> empty .)


state 78

    (13) extends_clause -> EXTENDS qualified_id .

    IMPLEMENTS      reduce using rule 13 (extends_clause -> EXTENDS qualified_id .)
    LLAVE_ABIERTA   reduce using rule 13 (extends_clause -> EXTENDS qualified_id .)


state 79

    (24) field_decl -> modifiers type variables . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 145


state 80

    (30) method_header -> modifiers type ID . PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (32) method_header -> modifiers type ID . PARENTESIS_ABIERTO PARENTESIS_CERRADO
    (27) variable -> ID .
    (28) variable -> ID . ASIGNACION expression

    PARENTESIS_ABIERTO shift and go to state 146
    COMA            reduce using rule 27 (variable -> ID .)
    PUNTO_Y_COMA    reduce using rule 27 (variable -> ID .)
    ASIGNACION      shift and go to state 147


state 81

    (25) variables -> variable . COMA variables
    (26) variables -> variable .

    COMA            shift and go to state 148
    PUNTO_Y_COMA    reduce using rule 26 (variables -> variable .)


state 82

    (45) constructor_decl -> modifiers ID PARENTESIS_ABIERTO . formal_params PARENTESIS_CERRADO block
    (38) formal_params -> . formal_param COMA formal_params
    (39) formal_params -> . formal_param
    (40) formal_params -> . empty
    (41) formal_param -> . type ID
    (42) formal_param -> . array_type ID
    (193) empty -> .
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (43) array_type -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (44) array_type -> . reference_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    ID              shift and go to state 28

    formal_params                  shift and go to state 149
    formal_param                   shift and go to state 150
    empty                          shift and go to state 151
    type                           shift and go to state 152
    array_type                     shift and go to state 153
    primitive_type                 shift and go to state 154
    reference_type                 shift and go to state 155
    qualified_id                   shift and go to state 71

state 83

    (31) method_header -> modifiers VOID ID . PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO
    (33) method_header -> modifiers VOID ID . PARENTESIS_ABIERTO PARENTESIS_CERRADO

    PARENTESIS_ABIERTO shift and go to state 156


state 84

    (46) block -> LLAVE_ABIERTA statements . LLAVE_CERRADA

    LLAVE_CERRADA   shift and go to state 157


state 85

    (47) block -> LLAVE_ABIERTA LLAVE_CERRADA .

    CLASS           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    PUBLIC          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    PRIVATE         reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    PROTECTED       reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    STATIC          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    FINAL           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    ABSTRACT        reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    NATIVE          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    SYNCHRONIZED    reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    VOLATILE        reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    EXPORT          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    INTERFACE       reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    TRANSIENT       reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    LLAVE_CERRADA   reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    WHILE           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    DO              reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    FOR             reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    SWITCH          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    RETURN          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    BREAK           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    CONTINUE        reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    THROW           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    TRY             reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    ASSERT          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    PUNTO_Y_COMA    reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    IF              reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    LLAVE_ABIERTA   reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    ID              reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    INT             reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    FLOAT           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    DOUBLE          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    CHAR            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    BOOLEAN         reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    SHORT           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    LONG            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    STRING          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    BYTE            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    INCREMENTO      reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    DECREMENTO      reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    SUMA            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    RESTA           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    UMAS            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    UMENOS          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    NOT             reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    NOT_BIT         reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    THIS            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    SUPER           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    PARENTESIS_ABIERTO reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    NEW             reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    NUMERO          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    CADENA          reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    TRUE            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    FALSE           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    NULL            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    OCTAL_NUMERO    reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    HEX_NUMERO      reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    BINARIO_NUMERO  reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    CASE            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    DEFAULT         reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    CATCH           reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    ELSE            reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)
    FINALLY         reduce using rule 47 (block -> LLAVE_ABIERTA LLAVE_CERRADA .)


state 86

    (48) statements -> statement . statements
    (48) statements -> . statement statements
    (49) statements -> . empty
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (193) empty -> .
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_CERRADA   reduce using rule 193 (empty -> .)
    CASE            reduce using rule 193 (empty -> .)
    DEFAULT         reduce using rule 193 (empty -> .)
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    statement                      shift and go to state 86
    statements                     shift and go to state 158
    empty                          shift and go to state 87
    block                          shift and go to state 88
    expression                     shift and go to state 91
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 87

    (49) statements -> empty .

    LLAVE_CERRADA   reduce using rule 49 (statements -> empty .)
    CASE            reduce using rule 49 (statements -> empty .)
    DEFAULT         reduce using rule 49 (statements -> empty .)


state 88

    (50) statement -> block .

    WHILE           reduce using rule 50 (statement -> block .)
    DO              reduce using rule 50 (statement -> block .)
    FOR             reduce using rule 50 (statement -> block .)
    SWITCH          reduce using rule 50 (statement -> block .)
    RETURN          reduce using rule 50 (statement -> block .)
    BREAK           reduce using rule 50 (statement -> block .)
    CONTINUE        reduce using rule 50 (statement -> block .)
    THROW           reduce using rule 50 (statement -> block .)
    TRY             reduce using rule 50 (statement -> block .)
    ASSERT          reduce using rule 50 (statement -> block .)
    PUNTO_Y_COMA    reduce using rule 50 (statement -> block .)
    IF              reduce using rule 50 (statement -> block .)
    LLAVE_ABIERTA   reduce using rule 50 (statement -> block .)
    ID              reduce using rule 50 (statement -> block .)
    INT             reduce using rule 50 (statement -> block .)
    FLOAT           reduce using rule 50 (statement -> block .)
    DOUBLE          reduce using rule 50 (statement -> block .)
    CHAR            reduce using rule 50 (statement -> block .)
    BOOLEAN         reduce using rule 50 (statement -> block .)
    SHORT           reduce using rule 50 (statement -> block .)
    LONG            reduce using rule 50 (statement -> block .)
    STRING          reduce using rule 50 (statement -> block .)
    BYTE            reduce using rule 50 (statement -> block .)
    INCREMENTO      reduce using rule 50 (statement -> block .)
    DECREMENTO      reduce using rule 50 (statement -> block .)
    SUMA            reduce using rule 50 (statement -> block .)
    RESTA           reduce using rule 50 (statement -> block .)
    UMAS            reduce using rule 50 (statement -> block .)
    UMENOS          reduce using rule 50 (statement -> block .)
    NOT             reduce using rule 50 (statement -> block .)
    NOT_BIT         reduce using rule 50 (statement -> block .)
    THIS            reduce using rule 50 (statement -> block .)
    SUPER           reduce using rule 50 (statement -> block .)
    PARENTESIS_ABIERTO reduce using rule 50 (statement -> block .)
    NEW             reduce using rule 50 (statement -> block .)
    NUMERO          reduce using rule 50 (statement -> block .)
    CADENA          reduce using rule 50 (statement -> block .)
    TRUE            reduce using rule 50 (statement -> block .)
    FALSE           reduce using rule 50 (statement -> block .)
    NULL            reduce using rule 50 (statement -> block .)
    OCTAL_NUMERO    reduce using rule 50 (statement -> block .)
    HEX_NUMERO      reduce using rule 50 (statement -> block .)
    BINARIO_NUMERO  reduce using rule 50 (statement -> block .)
    LLAVE_CERRADA   reduce using rule 50 (statement -> block .)
    CASE            reduce using rule 50 (statement -> block .)
    DEFAULT         reduce using rule 50 (statement -> block .)
    ELSE            reduce using rule 50 (statement -> block .)


state 89

    (51) statement -> WHILE . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement

    PARENTESIS_ABIERTO shift and go to state 159


state 90

    (161) primary -> PARENTESIS_ABIERTO . expression PARENTESIS_CERRADO
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 160
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 91

    (63) statement -> expression . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 162


state 92

    (52) statement -> DO . statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    statement                      shift and go to state 163
    expression                     shift and go to state 91
    block                          shift and go to state 88
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 93

    (65) statement -> PUNTO_Y_COMA .

    WHILE           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    DO              reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    FOR             reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    SWITCH          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    RETURN          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    BREAK           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    THROW           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    TRY             reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    ASSERT          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    IF              reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    ID              reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    INT             reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    FLOAT           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    CHAR            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    SHORT           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    LONG            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    STRING          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    BYTE            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    SUMA            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    RESTA           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    UMAS            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    UMENOS          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    NOT             reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    THIS            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    SUPER           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    NEW             reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    NUMERO          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    CADENA          reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    TRUE            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    FALSE           reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    NULL            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    CASE            reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 65 (statement -> PUNTO_Y_COMA .)
    ELSE            reduce using rule 65 (statement -> PUNTO_Y_COMA .)


state 94

    (53) statement -> FOR . PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement

    PARENTESIS_ABIERTO shift and go to state 164


state 95

    (54) statement -> SWITCH . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA

    PARENTESIS_ABIERTO shift and go to state 165


state 96

    (55) statement -> RETURN . expression PUNTO_Y_COMA
    (56) statement -> RETURN . PUNTO_Y_COMA
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PUNTO_Y_COMA    shift and go to state 167
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 166
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 97

    (57) statement -> BREAK . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 168


state 98

    (58) statement -> CONTINUE . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 169


state 99

    (59) statement -> THROW . expression PUNTO_Y_COMA
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 170
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 100

    (60) statement -> TRY . block catches
    (62) statement -> TRY . block catches FINALLY block
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 73

    block                          shift and go to state 171

state 101

    (61) statement -> ASSERT . expression PUNTO_Y_COMA
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 172
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 102

    (64) statement -> local_var_decl . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 173


state 103

    (146) statement -> IF . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> IF . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement

    PARENTESIS_ABIERTO shift and go to state 174


state 104

    (95) expression -> assignment_expression .

    PUNTO_Y_COMA    reduce using rule 95 (expression -> assignment_expression .)
    PARENTESIS_CERRADO reduce using rule 95 (expression -> assignment_expression .)
    COMA            reduce using rule 95 (expression -> assignment_expression .)
    DOSPUNTOS       reduce using rule 95 (expression -> assignment_expression .)
    CORCHETE_CERRADO reduce using rule 95 (expression -> assignment_expression .)


state 105

    (78) local_var_decl -> type . variables
    (25) variables -> . variable COMA variables
    (26) variables -> . variable
    (27) variable -> . ID
    (28) variable -> . ID ASIGNACION expression

    ID              shift and go to state 176

    variables                      shift and go to state 175
    variable                       shift and go to state 81

state 106

    (96) assignment_expression -> conditional_expression .

    PUNTO_Y_COMA    reduce using rule 96 (assignment_expression -> conditional_expression .)
    PARENTESIS_CERRADO reduce using rule 96 (assignment_expression -> conditional_expression .)
    COMA            reduce using rule 96 (assignment_expression -> conditional_expression .)
    DOSPUNTOS       reduce using rule 96 (assignment_expression -> conditional_expression .)
    CORCHETE_CERRADO reduce using rule 96 (assignment_expression -> conditional_expression .)


state 107

    (97) assignment_expression -> ID . assignment_operator expression
    (91) qualified_id -> ID . PUNTO ID
    (92) qualified_id -> ID .
    (98) assignment_operator -> . ASIGNACION
    (99) assignment_operator -> . ASIGNACION_SUMA
    (100) assignment_operator -> . ASIGNACION_RESTA
    (101) assignment_operator -> . ASIGNACION_MULTIPLICACION
    (102) assignment_operator -> . ASIGNACION_DIVISION
    (103) assignment_operator -> . ASIGNACION_MODULO
    (104) assignment_operator -> . DESPLAZAMIENTO_IZQUIERDO_ASIGNACION
    (105) assignment_operator -> . DESPLAZAMIENTO_DERECHO_ASIGNACION

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 38
    ID              reduce using rule 92 (qualified_id -> ID .)
    INCREMENTO      reduce using rule 92 (qualified_id -> ID .)
    DECREMENTO      reduce using rule 92 (qualified_id -> ID .)
    CORCHETE_ABIERTO reduce using rule 92 (qualified_id -> ID .)
    MULTIPLICACION  reduce using rule 92 (qualified_id -> ID .)
    DIVISION        reduce using rule 92 (qualified_id -> ID .)
    MODULO          reduce using rule 92 (qualified_id -> ID .)
    SUMA            reduce using rule 92 (qualified_id -> ID .)
    RESTA           reduce using rule 92 (qualified_id -> ID .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 92 (qualified_id -> ID .)
    DESPLAZAMIENTO_DERECHO reduce using rule 92 (qualified_id -> ID .)
    MENOR           reduce using rule 92 (qualified_id -> ID .)
    MAYOR           reduce using rule 92 (qualified_id -> ID .)
    MENOR_IGUAL     reduce using rule 92 (qualified_id -> ID .)
    MAYOR_IGUAL     reduce using rule 92 (qualified_id -> ID .)
    INSTANCEOF      reduce using rule 92 (qualified_id -> ID .)
    IGUAL           reduce using rule 92 (qualified_id -> ID .)
    DISTINTO        reduce using rule 92 (qualified_id -> ID .)
    AND_BIT         reduce using rule 92 (qualified_id -> ID .)
    XOR_BIT         reduce using rule 92 (qualified_id -> ID .)
    OR_BIT          reduce using rule 92 (qualified_id -> ID .)
    AND_LOGICO      reduce using rule 92 (qualified_id -> ID .)
    TERNARIO        reduce using rule 92 (qualified_id -> ID .)
    OR_LOGICO       reduce using rule 92 (qualified_id -> ID .)
    PUNTO_Y_COMA    reduce using rule 92 (qualified_id -> ID .)
    PARENTESIS_CERRADO reduce using rule 92 (qualified_id -> ID .)
    COMA            reduce using rule 92 (qualified_id -> ID .)
    DOSPUNTOS       reduce using rule 92 (qualified_id -> ID .)
    CORCHETE_CERRADO reduce using rule 92 (qualified_id -> ID .)
    ASIGNACION      shift and go to state 178
    ASIGNACION_SUMA shift and go to state 179
    ASIGNACION_RESTA shift and go to state 180
    ASIGNACION_MULTIPLICACION shift and go to state 181
    ASIGNACION_DIVISION shift and go to state 182
    ASIGNACION_MODULO shift and go to state 183
    DESPLAZAMIENTO_IZQUIERDO_ASIGNACION shift and go to state 184
    DESPLAZAMIENTO_DERECHO_ASIGNACION shift and go to state 185

  ! PUNTO           [ reduce using rule 92 (qualified_id -> ID .) ]

    assignment_operator            shift and go to state 177

state 108

    (106) conditional_expression -> logical_or_expression .
    (107) conditional_expression -> logical_or_expression . TERNARIO expression DOSPUNTOS conditional_expression
    (109) logical_or_expression -> logical_or_expression . OR_LOGICO logical_and_expression

    PUNTO_Y_COMA    reduce using rule 106 (conditional_expression -> logical_or_expression .)
    PARENTESIS_CERRADO reduce using rule 106 (conditional_expression -> logical_or_expression .)
    COMA            reduce using rule 106 (conditional_expression -> logical_or_expression .)
    DOSPUNTOS       reduce using rule 106 (conditional_expression -> logical_or_expression .)
    CORCHETE_CERRADO reduce using rule 106 (conditional_expression -> logical_or_expression .)
    TERNARIO        shift and go to state 186
    OR_LOGICO       shift and go to state 187


state 109

    (90) reference_type -> qualified_id .
    (163) primary -> qualified_id .

    ID              reduce using rule 90 (reference_type -> qualified_id .)
    INCREMENTO      reduce using rule 163 (primary -> qualified_id .)
    DECREMENTO      reduce using rule 163 (primary -> qualified_id .)
    PUNTO           reduce using rule 163 (primary -> qualified_id .)
    CORCHETE_ABIERTO reduce using rule 163 (primary -> qualified_id .)
    MULTIPLICACION  reduce using rule 163 (primary -> qualified_id .)
    DIVISION        reduce using rule 163 (primary -> qualified_id .)
    MODULO          reduce using rule 163 (primary -> qualified_id .)
    SUMA            reduce using rule 163 (primary -> qualified_id .)
    RESTA           reduce using rule 163 (primary -> qualified_id .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 163 (primary -> qualified_id .)
    DESPLAZAMIENTO_DERECHO reduce using rule 163 (primary -> qualified_id .)
    MENOR           reduce using rule 163 (primary -> qualified_id .)
    MAYOR           reduce using rule 163 (primary -> qualified_id .)
    MENOR_IGUAL     reduce using rule 163 (primary -> qualified_id .)
    MAYOR_IGUAL     reduce using rule 163 (primary -> qualified_id .)
    INSTANCEOF      reduce using rule 163 (primary -> qualified_id .)
    IGUAL           reduce using rule 163 (primary -> qualified_id .)
    DISTINTO        reduce using rule 163 (primary -> qualified_id .)
    AND_BIT         reduce using rule 163 (primary -> qualified_id .)
    XOR_BIT         reduce using rule 163 (primary -> qualified_id .)
    OR_BIT          reduce using rule 163 (primary -> qualified_id .)
    AND_LOGICO      reduce using rule 163 (primary -> qualified_id .)
    TERNARIO        reduce using rule 163 (primary -> qualified_id .)
    OR_LOGICO       reduce using rule 163 (primary -> qualified_id .)
    PUNTO_Y_COMA    reduce using rule 163 (primary -> qualified_id .)
    COMA            reduce using rule 163 (primary -> qualified_id .)


state 110

    (108) logical_or_expression -> logical_and_expression .
    (111) logical_and_expression -> logical_and_expression . AND_LOGICO inclusive_or_expression

    TERNARIO        reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    OR_LOGICO       reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    PUNTO_Y_COMA    reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    PARENTESIS_CERRADO reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    COMA            reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    DOSPUNTOS       reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    CORCHETE_CERRADO reduce using rule 108 (logical_or_expression -> logical_and_expression .)
    AND_LOGICO      shift and go to state 188


state 111

    (110) logical_and_expression -> inclusive_or_expression .
    (113) inclusive_or_expression -> inclusive_or_expression . OR_BIT exclusive_or_expression

    AND_LOGICO      reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    TERNARIO        reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    OR_LOGICO       reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    PUNTO_Y_COMA    reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    PARENTESIS_CERRADO reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    COMA            reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    DOSPUNTOS       reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    CORCHETE_CERRADO reduce using rule 110 (logical_and_expression -> inclusive_or_expression .)
    OR_BIT          shift and go to state 189


state 112

    (112) inclusive_or_expression -> exclusive_or_expression .
    (115) exclusive_or_expression -> exclusive_or_expression . XOR_BIT and_expression

    OR_BIT          reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    AND_LOGICO      reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    TERNARIO        reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    OR_LOGICO       reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    PUNTO_Y_COMA    reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    PARENTESIS_CERRADO reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    COMA            reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    DOSPUNTOS       reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    CORCHETE_CERRADO reduce using rule 112 (inclusive_or_expression -> exclusive_or_expression .)
    XOR_BIT         shift and go to state 190


state 113

    (114) exclusive_or_expression -> and_expression .
    (117) and_expression -> and_expression . AND_BIT equality_expression

    XOR_BIT         reduce using rule 114 (exclusive_or_expression -> and_expression .)
    OR_BIT          reduce using rule 114 (exclusive_or_expression -> and_expression .)
    AND_LOGICO      reduce using rule 114 (exclusive_or_expression -> and_expression .)
    TERNARIO        reduce using rule 114 (exclusive_or_expression -> and_expression .)
    OR_LOGICO       reduce using rule 114 (exclusive_or_expression -> and_expression .)
    PUNTO_Y_COMA    reduce using rule 114 (exclusive_or_expression -> and_expression .)
    PARENTESIS_CERRADO reduce using rule 114 (exclusive_or_expression -> and_expression .)
    COMA            reduce using rule 114 (exclusive_or_expression -> and_expression .)
    DOSPUNTOS       reduce using rule 114 (exclusive_or_expression -> and_expression .)
    CORCHETE_CERRADO reduce using rule 114 (exclusive_or_expression -> and_expression .)
    AND_BIT         shift and go to state 191


state 114

    (116) and_expression -> equality_expression .
    (119) equality_expression -> equality_expression . IGUAL relational_expression
    (120) equality_expression -> equality_expression . DISTINTO relational_expression

    AND_BIT         reduce using rule 116 (and_expression -> equality_expression .)
    XOR_BIT         reduce using rule 116 (and_expression -> equality_expression .)
    OR_BIT          reduce using rule 116 (and_expression -> equality_expression .)
    AND_LOGICO      reduce using rule 116 (and_expression -> equality_expression .)
    TERNARIO        reduce using rule 116 (and_expression -> equality_expression .)
    OR_LOGICO       reduce using rule 116 (and_expression -> equality_expression .)
    PUNTO_Y_COMA    reduce using rule 116 (and_expression -> equality_expression .)
    PARENTESIS_CERRADO reduce using rule 116 (and_expression -> equality_expression .)
    COMA            reduce using rule 116 (and_expression -> equality_expression .)
    DOSPUNTOS       reduce using rule 116 (and_expression -> equality_expression .)
    CORCHETE_CERRADO reduce using rule 116 (and_expression -> equality_expression .)
    IGUAL           shift and go to state 192
    DISTINTO        shift and go to state 193


state 115

    (118) equality_expression -> relational_expression .
    (122) relational_expression -> relational_expression . MENOR shift_expression
    (123) relational_expression -> relational_expression . MAYOR shift_expression
    (124) relational_expression -> relational_expression . MENOR_IGUAL shift_expression
    (125) relational_expression -> relational_expression . MAYOR_IGUAL shift_expression
    (126) relational_expression -> relational_expression . INSTANCEOF reference_type

    IGUAL           reduce using rule 118 (equality_expression -> relational_expression .)
    DISTINTO        reduce using rule 118 (equality_expression -> relational_expression .)
    AND_BIT         reduce using rule 118 (equality_expression -> relational_expression .)
    XOR_BIT         reduce using rule 118 (equality_expression -> relational_expression .)
    OR_BIT          reduce using rule 118 (equality_expression -> relational_expression .)
    AND_LOGICO      reduce using rule 118 (equality_expression -> relational_expression .)
    TERNARIO        reduce using rule 118 (equality_expression -> relational_expression .)
    OR_LOGICO       reduce using rule 118 (equality_expression -> relational_expression .)
    PUNTO_Y_COMA    reduce using rule 118 (equality_expression -> relational_expression .)
    PARENTESIS_CERRADO reduce using rule 118 (equality_expression -> relational_expression .)
    COMA            reduce using rule 118 (equality_expression -> relational_expression .)
    DOSPUNTOS       reduce using rule 118 (equality_expression -> relational_expression .)
    CORCHETE_CERRADO reduce using rule 118 (equality_expression -> relational_expression .)
    MENOR           shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR_IGUAL     shift and go to state 196
    MAYOR_IGUAL     shift and go to state 197
    INSTANCEOF      shift and go to state 198


state 116

    (121) relational_expression -> shift_expression .
    (128) shift_expression -> shift_expression . DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> shift_expression . DESPLAZAMIENTO_DERECHO additive_expression

    MENOR           reduce using rule 121 (relational_expression -> shift_expression .)
    MAYOR           reduce using rule 121 (relational_expression -> shift_expression .)
    MENOR_IGUAL     reduce using rule 121 (relational_expression -> shift_expression .)
    MAYOR_IGUAL     reduce using rule 121 (relational_expression -> shift_expression .)
    INSTANCEOF      reduce using rule 121 (relational_expression -> shift_expression .)
    IGUAL           reduce using rule 121 (relational_expression -> shift_expression .)
    DISTINTO        reduce using rule 121 (relational_expression -> shift_expression .)
    AND_BIT         reduce using rule 121 (relational_expression -> shift_expression .)
    XOR_BIT         reduce using rule 121 (relational_expression -> shift_expression .)
    OR_BIT          reduce using rule 121 (relational_expression -> shift_expression .)
    AND_LOGICO      reduce using rule 121 (relational_expression -> shift_expression .)
    TERNARIO        reduce using rule 121 (relational_expression -> shift_expression .)
    OR_LOGICO       reduce using rule 121 (relational_expression -> shift_expression .)
    PUNTO_Y_COMA    reduce using rule 121 (relational_expression -> shift_expression .)
    PARENTESIS_CERRADO reduce using rule 121 (relational_expression -> shift_expression .)
    COMA            reduce using rule 121 (relational_expression -> shift_expression .)
    DOSPUNTOS       reduce using rule 121 (relational_expression -> shift_expression .)
    CORCHETE_CERRADO reduce using rule 121 (relational_expression -> shift_expression .)
    DESPLAZAMIENTO_IZQUIERDO shift and go to state 199
    DESPLAZAMIENTO_DERECHO shift and go to state 200


state 117

    (127) shift_expression -> additive_expression .
    (131) additive_expression -> additive_expression . SUMA multiplicative_expression
    (132) additive_expression -> additive_expression . RESTA multiplicative_expression

    DESPLAZAMIENTO_IZQUIERDO reduce using rule 127 (shift_expression -> additive_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 127 (shift_expression -> additive_expression .)
    MENOR           reduce using rule 127 (shift_expression -> additive_expression .)
    MAYOR           reduce using rule 127 (shift_expression -> additive_expression .)
    MENOR_IGUAL     reduce using rule 127 (shift_expression -> additive_expression .)
    MAYOR_IGUAL     reduce using rule 127 (shift_expression -> additive_expression .)
    INSTANCEOF      reduce using rule 127 (shift_expression -> additive_expression .)
    IGUAL           reduce using rule 127 (shift_expression -> additive_expression .)
    DISTINTO        reduce using rule 127 (shift_expression -> additive_expression .)
    AND_BIT         reduce using rule 127 (shift_expression -> additive_expression .)
    XOR_BIT         reduce using rule 127 (shift_expression -> additive_expression .)
    OR_BIT          reduce using rule 127 (shift_expression -> additive_expression .)
    AND_LOGICO      reduce using rule 127 (shift_expression -> additive_expression .)
    TERNARIO        reduce using rule 127 (shift_expression -> additive_expression .)
    OR_LOGICO       reduce using rule 127 (shift_expression -> additive_expression .)
    PUNTO_Y_COMA    reduce using rule 127 (shift_expression -> additive_expression .)
    PARENTESIS_CERRADO reduce using rule 127 (shift_expression -> additive_expression .)
    COMA            reduce using rule 127 (shift_expression -> additive_expression .)
    DOSPUNTOS       reduce using rule 127 (shift_expression -> additive_expression .)
    CORCHETE_CERRADO reduce using rule 127 (shift_expression -> additive_expression .)
    SUMA            shift and go to state 201
    RESTA           shift and go to state 202


state 118

    (130) additive_expression -> multiplicative_expression .
    (134) multiplicative_expression -> multiplicative_expression . MULTIPLICACION unary_expression
    (135) multiplicative_expression -> multiplicative_expression . DIVISION unary_expression
    (136) multiplicative_expression -> multiplicative_expression . MODULO unary_expression

    SUMA            reduce using rule 130 (additive_expression -> multiplicative_expression .)
    RESTA           reduce using rule 130 (additive_expression -> multiplicative_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 130 (additive_expression -> multiplicative_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 130 (additive_expression -> multiplicative_expression .)
    MENOR           reduce using rule 130 (additive_expression -> multiplicative_expression .)
    MAYOR           reduce using rule 130 (additive_expression -> multiplicative_expression .)
    MENOR_IGUAL     reduce using rule 130 (additive_expression -> multiplicative_expression .)
    MAYOR_IGUAL     reduce using rule 130 (additive_expression -> multiplicative_expression .)
    INSTANCEOF      reduce using rule 130 (additive_expression -> multiplicative_expression .)
    IGUAL           reduce using rule 130 (additive_expression -> multiplicative_expression .)
    DISTINTO        reduce using rule 130 (additive_expression -> multiplicative_expression .)
    AND_BIT         reduce using rule 130 (additive_expression -> multiplicative_expression .)
    XOR_BIT         reduce using rule 130 (additive_expression -> multiplicative_expression .)
    OR_BIT          reduce using rule 130 (additive_expression -> multiplicative_expression .)
    AND_LOGICO      reduce using rule 130 (additive_expression -> multiplicative_expression .)
    TERNARIO        reduce using rule 130 (additive_expression -> multiplicative_expression .)
    OR_LOGICO       reduce using rule 130 (additive_expression -> multiplicative_expression .)
    PUNTO_Y_COMA    reduce using rule 130 (additive_expression -> multiplicative_expression .)
    PARENTESIS_CERRADO reduce using rule 130 (additive_expression -> multiplicative_expression .)
    COMA            reduce using rule 130 (additive_expression -> multiplicative_expression .)
    DOSPUNTOS       reduce using rule 130 (additive_expression -> multiplicative_expression .)
    CORCHETE_CERRADO reduce using rule 130 (additive_expression -> multiplicative_expression .)
    MULTIPLICACION  shift and go to state 203
    DIVISION        shift and go to state 204
    MODULO          shift and go to state 205


state 119

    (140) unary_expression -> SUMA . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 206
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 120

    (141) unary_expression -> RESTA . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 207
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 121

    (133) multiplicative_expression -> unary_expression .

    MULTIPLICACION  reduce using rule 133 (multiplicative_expression -> unary_expression .)
    DIVISION        reduce using rule 133 (multiplicative_expression -> unary_expression .)
    MODULO          reduce using rule 133 (multiplicative_expression -> unary_expression .)
    SUMA            reduce using rule 133 (multiplicative_expression -> unary_expression .)
    RESTA           reduce using rule 133 (multiplicative_expression -> unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 133 (multiplicative_expression -> unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 133 (multiplicative_expression -> unary_expression .)
    MENOR           reduce using rule 133 (multiplicative_expression -> unary_expression .)
    MAYOR           reduce using rule 133 (multiplicative_expression -> unary_expression .)
    MENOR_IGUAL     reduce using rule 133 (multiplicative_expression -> unary_expression .)
    MAYOR_IGUAL     reduce using rule 133 (multiplicative_expression -> unary_expression .)
    INSTANCEOF      reduce using rule 133 (multiplicative_expression -> unary_expression .)
    IGUAL           reduce using rule 133 (multiplicative_expression -> unary_expression .)
    DISTINTO        reduce using rule 133 (multiplicative_expression -> unary_expression .)
    AND_BIT         reduce using rule 133 (multiplicative_expression -> unary_expression .)
    XOR_BIT         reduce using rule 133 (multiplicative_expression -> unary_expression .)
    OR_BIT          reduce using rule 133 (multiplicative_expression -> unary_expression .)
    AND_LOGICO      reduce using rule 133 (multiplicative_expression -> unary_expression .)
    TERNARIO        reduce using rule 133 (multiplicative_expression -> unary_expression .)
    OR_LOGICO       reduce using rule 133 (multiplicative_expression -> unary_expression .)
    PUNTO_Y_COMA    reduce using rule 133 (multiplicative_expression -> unary_expression .)
    PARENTESIS_CERRADO reduce using rule 133 (multiplicative_expression -> unary_expression .)
    COMA            reduce using rule 133 (multiplicative_expression -> unary_expression .)
    DOSPUNTOS       reduce using rule 133 (multiplicative_expression -> unary_expression .)
    CORCHETE_CERRADO reduce using rule 133 (multiplicative_expression -> unary_expression .)


state 122

    (137) unary_expression -> postfix_expression .
    (149) postfix_expression -> postfix_expression . INCREMENTO
    (150) postfix_expression -> postfix_expression . DECREMENTO
    (151) postfix_expression -> postfix_expression . PUNTO member_access
    (152) postfix_expression -> postfix_expression . CORCHETE_ABIERTO expression CORCHETE_CERRADO

    MULTIPLICACION  reduce using rule 137 (unary_expression -> postfix_expression .)
    DIVISION        reduce using rule 137 (unary_expression -> postfix_expression .)
    MODULO          reduce using rule 137 (unary_expression -> postfix_expression .)
    SUMA            reduce using rule 137 (unary_expression -> postfix_expression .)
    RESTA           reduce using rule 137 (unary_expression -> postfix_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 137 (unary_expression -> postfix_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 137 (unary_expression -> postfix_expression .)
    MENOR           reduce using rule 137 (unary_expression -> postfix_expression .)
    MAYOR           reduce using rule 137 (unary_expression -> postfix_expression .)
    MENOR_IGUAL     reduce using rule 137 (unary_expression -> postfix_expression .)
    MAYOR_IGUAL     reduce using rule 137 (unary_expression -> postfix_expression .)
    INSTANCEOF      reduce using rule 137 (unary_expression -> postfix_expression .)
    IGUAL           reduce using rule 137 (unary_expression -> postfix_expression .)
    DISTINTO        reduce using rule 137 (unary_expression -> postfix_expression .)
    AND_BIT         reduce using rule 137 (unary_expression -> postfix_expression .)
    XOR_BIT         reduce using rule 137 (unary_expression -> postfix_expression .)
    OR_BIT          reduce using rule 137 (unary_expression -> postfix_expression .)
    AND_LOGICO      reduce using rule 137 (unary_expression -> postfix_expression .)
    TERNARIO        reduce using rule 137 (unary_expression -> postfix_expression .)
    OR_LOGICO       reduce using rule 137 (unary_expression -> postfix_expression .)
    PUNTO_Y_COMA    reduce using rule 137 (unary_expression -> postfix_expression .)
    PARENTESIS_CERRADO reduce using rule 137 (unary_expression -> postfix_expression .)
    COMA            reduce using rule 137 (unary_expression -> postfix_expression .)
    DOSPUNTOS       reduce using rule 137 (unary_expression -> postfix_expression .)
    CORCHETE_CERRADO reduce using rule 137 (unary_expression -> postfix_expression .)
    INCREMENTO      shift and go to state 208
    DECREMENTO      shift and go to state 209
    PUNTO           shift and go to state 210
    CORCHETE_ABIERTO shift and go to state 211


state 123

    (138) unary_expression -> INCREMENTO . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 212
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 124

    (139) unary_expression -> DECREMENTO . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 213
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 125

    (142) unary_expression -> UMAS . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 214
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 126

    (143) unary_expression -> UMENOS . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 215
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 127

    (144) unary_expression -> NOT . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 216
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 128

    (145) unary_expression -> NOT_BIT . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 217
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 129

    (148) postfix_expression -> primary .

    INCREMENTO      reduce using rule 148 (postfix_expression -> primary .)
    DECREMENTO      reduce using rule 148 (postfix_expression -> primary .)
    PUNTO           reduce using rule 148 (postfix_expression -> primary .)
    CORCHETE_ABIERTO reduce using rule 148 (postfix_expression -> primary .)
    MULTIPLICACION  reduce using rule 148 (postfix_expression -> primary .)
    DIVISION        reduce using rule 148 (postfix_expression -> primary .)
    MODULO          reduce using rule 148 (postfix_expression -> primary .)
    SUMA            reduce using rule 148 (postfix_expression -> primary .)
    RESTA           reduce using rule 148 (postfix_expression -> primary .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 148 (postfix_expression -> primary .)
    DESPLAZAMIENTO_DERECHO reduce using rule 148 (postfix_expression -> primary .)
    MENOR           reduce using rule 148 (postfix_expression -> primary .)
    MAYOR           reduce using rule 148 (postfix_expression -> primary .)
    MENOR_IGUAL     reduce using rule 148 (postfix_expression -> primary .)
    MAYOR_IGUAL     reduce using rule 148 (postfix_expression -> primary .)
    INSTANCEOF      reduce using rule 148 (postfix_expression -> primary .)
    IGUAL           reduce using rule 148 (postfix_expression -> primary .)
    DISTINTO        reduce using rule 148 (postfix_expression -> primary .)
    AND_BIT         reduce using rule 148 (postfix_expression -> primary .)
    XOR_BIT         reduce using rule 148 (postfix_expression -> primary .)
    OR_BIT          reduce using rule 148 (postfix_expression -> primary .)
    AND_LOGICO      reduce using rule 148 (postfix_expression -> primary .)
    TERNARIO        reduce using rule 148 (postfix_expression -> primary .)
    OR_LOGICO       reduce using rule 148 (postfix_expression -> primary .)
    PUNTO_Y_COMA    reduce using rule 148 (postfix_expression -> primary .)
    PARENTESIS_CERRADO reduce using rule 148 (postfix_expression -> primary .)
    COMA            reduce using rule 148 (postfix_expression -> primary .)
    DOSPUNTOS       reduce using rule 148 (postfix_expression -> primary .)
    CORCHETE_CERRADO reduce using rule 148 (postfix_expression -> primary .)


state 130

    (158) primary -> literal .

    INCREMENTO      reduce using rule 158 (primary -> literal .)
    DECREMENTO      reduce using rule 158 (primary -> literal .)
    PUNTO           reduce using rule 158 (primary -> literal .)
    CORCHETE_ABIERTO reduce using rule 158 (primary -> literal .)
    MULTIPLICACION  reduce using rule 158 (primary -> literal .)
    DIVISION        reduce using rule 158 (primary -> literal .)
    MODULO          reduce using rule 158 (primary -> literal .)
    SUMA            reduce using rule 158 (primary -> literal .)
    RESTA           reduce using rule 158 (primary -> literal .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 158 (primary -> literal .)
    DESPLAZAMIENTO_DERECHO reduce using rule 158 (primary -> literal .)
    MENOR           reduce using rule 158 (primary -> literal .)
    MAYOR           reduce using rule 158 (primary -> literal .)
    MENOR_IGUAL     reduce using rule 158 (primary -> literal .)
    MAYOR_IGUAL     reduce using rule 158 (primary -> literal .)
    INSTANCEOF      reduce using rule 158 (primary -> literal .)
    IGUAL           reduce using rule 158 (primary -> literal .)
    DISTINTO        reduce using rule 158 (primary -> literal .)
    AND_BIT         reduce using rule 158 (primary -> literal .)
    XOR_BIT         reduce using rule 158 (primary -> literal .)
    OR_BIT          reduce using rule 158 (primary -> literal .)
    AND_LOGICO      reduce using rule 158 (primary -> literal .)
    TERNARIO        reduce using rule 158 (primary -> literal .)
    OR_LOGICO       reduce using rule 158 (primary -> literal .)
    PUNTO_Y_COMA    reduce using rule 158 (primary -> literal .)
    PARENTESIS_CERRADO reduce using rule 158 (primary -> literal .)
    COMA            reduce using rule 158 (primary -> literal .)
    DOSPUNTOS       reduce using rule 158 (primary -> literal .)
    CORCHETE_CERRADO reduce using rule 158 (primary -> literal .)


state 131

    (159) primary -> THIS .

    INCREMENTO      reduce using rule 159 (primary -> THIS .)
    DECREMENTO      reduce using rule 159 (primary -> THIS .)
    PUNTO           reduce using rule 159 (primary -> THIS .)
    CORCHETE_ABIERTO reduce using rule 159 (primary -> THIS .)
    MULTIPLICACION  reduce using rule 159 (primary -> THIS .)
    DIVISION        reduce using rule 159 (primary -> THIS .)
    MODULO          reduce using rule 159 (primary -> THIS .)
    SUMA            reduce using rule 159 (primary -> THIS .)
    RESTA           reduce using rule 159 (primary -> THIS .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 159 (primary -> THIS .)
    DESPLAZAMIENTO_DERECHO reduce using rule 159 (primary -> THIS .)
    MENOR           reduce using rule 159 (primary -> THIS .)
    MAYOR           reduce using rule 159 (primary -> THIS .)
    MENOR_IGUAL     reduce using rule 159 (primary -> THIS .)
    MAYOR_IGUAL     reduce using rule 159 (primary -> THIS .)
    INSTANCEOF      reduce using rule 159 (primary -> THIS .)
    IGUAL           reduce using rule 159 (primary -> THIS .)
    DISTINTO        reduce using rule 159 (primary -> THIS .)
    AND_BIT         reduce using rule 159 (primary -> THIS .)
    XOR_BIT         reduce using rule 159 (primary -> THIS .)
    OR_BIT          reduce using rule 159 (primary -> THIS .)
    AND_LOGICO      reduce using rule 159 (primary -> THIS .)
    TERNARIO        reduce using rule 159 (primary -> THIS .)
    OR_LOGICO       reduce using rule 159 (primary -> THIS .)
    PUNTO_Y_COMA    reduce using rule 159 (primary -> THIS .)
    PARENTESIS_CERRADO reduce using rule 159 (primary -> THIS .)
    COMA            reduce using rule 159 (primary -> THIS .)
    DOSPUNTOS       reduce using rule 159 (primary -> THIS .)
    CORCHETE_CERRADO reduce using rule 159 (primary -> THIS .)


state 132

    (160) primary -> SUPER .

    INCREMENTO      reduce using rule 160 (primary -> SUPER .)
    DECREMENTO      reduce using rule 160 (primary -> SUPER .)
    PUNTO           reduce using rule 160 (primary -> SUPER .)
    CORCHETE_ABIERTO reduce using rule 160 (primary -> SUPER .)
    MULTIPLICACION  reduce using rule 160 (primary -> SUPER .)
    DIVISION        reduce using rule 160 (primary -> SUPER .)
    MODULO          reduce using rule 160 (primary -> SUPER .)
    SUMA            reduce using rule 160 (primary -> SUPER .)
    RESTA           reduce using rule 160 (primary -> SUPER .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 160 (primary -> SUPER .)
    DESPLAZAMIENTO_DERECHO reduce using rule 160 (primary -> SUPER .)
    MENOR           reduce using rule 160 (primary -> SUPER .)
    MAYOR           reduce using rule 160 (primary -> SUPER .)
    MENOR_IGUAL     reduce using rule 160 (primary -> SUPER .)
    MAYOR_IGUAL     reduce using rule 160 (primary -> SUPER .)
    INSTANCEOF      reduce using rule 160 (primary -> SUPER .)
    IGUAL           reduce using rule 160 (primary -> SUPER .)
    DISTINTO        reduce using rule 160 (primary -> SUPER .)
    AND_BIT         reduce using rule 160 (primary -> SUPER .)
    XOR_BIT         reduce using rule 160 (primary -> SUPER .)
    OR_BIT          reduce using rule 160 (primary -> SUPER .)
    AND_LOGICO      reduce using rule 160 (primary -> SUPER .)
    TERNARIO        reduce using rule 160 (primary -> SUPER .)
    OR_LOGICO       reduce using rule 160 (primary -> SUPER .)
    PUNTO_Y_COMA    reduce using rule 160 (primary -> SUPER .)
    PARENTESIS_CERRADO reduce using rule 160 (primary -> SUPER .)
    COMA            reduce using rule 160 (primary -> SUPER .)
    DOSPUNTOS       reduce using rule 160 (primary -> SUPER .)
    CORCHETE_CERRADO reduce using rule 160 (primary -> SUPER .)


state 133

    (162) primary -> NEW . creator
    (172) creator -> . qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (173) creator -> . qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (174) creator -> . qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO
    (175) creator -> . primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (176) creator -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE

    ID              shift and go to state 28
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70

    creator                        shift and go to state 218
    qualified_id                   shift and go to state 219
    primitive_type                 shift and go to state 220

state 134

    (164) literal -> NUMERO .

    INCREMENTO      reduce using rule 164 (literal -> NUMERO .)
    DECREMENTO      reduce using rule 164 (literal -> NUMERO .)
    PUNTO           reduce using rule 164 (literal -> NUMERO .)
    CORCHETE_ABIERTO reduce using rule 164 (literal -> NUMERO .)
    MULTIPLICACION  reduce using rule 164 (literal -> NUMERO .)
    DIVISION        reduce using rule 164 (literal -> NUMERO .)
    MODULO          reduce using rule 164 (literal -> NUMERO .)
    SUMA            reduce using rule 164 (literal -> NUMERO .)
    RESTA           reduce using rule 164 (literal -> NUMERO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 164 (literal -> NUMERO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 164 (literal -> NUMERO .)
    MENOR           reduce using rule 164 (literal -> NUMERO .)
    MAYOR           reduce using rule 164 (literal -> NUMERO .)
    MENOR_IGUAL     reduce using rule 164 (literal -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 164 (literal -> NUMERO .)
    INSTANCEOF      reduce using rule 164 (literal -> NUMERO .)
    IGUAL           reduce using rule 164 (literal -> NUMERO .)
    DISTINTO        reduce using rule 164 (literal -> NUMERO .)
    AND_BIT         reduce using rule 164 (literal -> NUMERO .)
    XOR_BIT         reduce using rule 164 (literal -> NUMERO .)
    OR_BIT          reduce using rule 164 (literal -> NUMERO .)
    AND_LOGICO      reduce using rule 164 (literal -> NUMERO .)
    TERNARIO        reduce using rule 164 (literal -> NUMERO .)
    OR_LOGICO       reduce using rule 164 (literal -> NUMERO .)
    PUNTO_Y_COMA    reduce using rule 164 (literal -> NUMERO .)
    PARENTESIS_CERRADO reduce using rule 164 (literal -> NUMERO .)
    COMA            reduce using rule 164 (literal -> NUMERO .)
    DOSPUNTOS       reduce using rule 164 (literal -> NUMERO .)
    CORCHETE_CERRADO reduce using rule 164 (literal -> NUMERO .)


state 135

    (165) literal -> CADENA .

    INCREMENTO      reduce using rule 165 (literal -> CADENA .)
    DECREMENTO      reduce using rule 165 (literal -> CADENA .)
    PUNTO           reduce using rule 165 (literal -> CADENA .)
    CORCHETE_ABIERTO reduce using rule 165 (literal -> CADENA .)
    MULTIPLICACION  reduce using rule 165 (literal -> CADENA .)
    DIVISION        reduce using rule 165 (literal -> CADENA .)
    MODULO          reduce using rule 165 (literal -> CADENA .)
    SUMA            reduce using rule 165 (literal -> CADENA .)
    RESTA           reduce using rule 165 (literal -> CADENA .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 165 (literal -> CADENA .)
    DESPLAZAMIENTO_DERECHO reduce using rule 165 (literal -> CADENA .)
    MENOR           reduce using rule 165 (literal -> CADENA .)
    MAYOR           reduce using rule 165 (literal -> CADENA .)
    MENOR_IGUAL     reduce using rule 165 (literal -> CADENA .)
    MAYOR_IGUAL     reduce using rule 165 (literal -> CADENA .)
    INSTANCEOF      reduce using rule 165 (literal -> CADENA .)
    IGUAL           reduce using rule 165 (literal -> CADENA .)
    DISTINTO        reduce using rule 165 (literal -> CADENA .)
    AND_BIT         reduce using rule 165 (literal -> CADENA .)
    XOR_BIT         reduce using rule 165 (literal -> CADENA .)
    OR_BIT          reduce using rule 165 (literal -> CADENA .)
    AND_LOGICO      reduce using rule 165 (literal -> CADENA .)
    TERNARIO        reduce using rule 165 (literal -> CADENA .)
    OR_LOGICO       reduce using rule 165 (literal -> CADENA .)
    PUNTO_Y_COMA    reduce using rule 165 (literal -> CADENA .)
    PARENTESIS_CERRADO reduce using rule 165 (literal -> CADENA .)
    COMA            reduce using rule 165 (literal -> CADENA .)
    DOSPUNTOS       reduce using rule 165 (literal -> CADENA .)
    CORCHETE_CERRADO reduce using rule 165 (literal -> CADENA .)


state 136

    (166) literal -> TRUE .

    INCREMENTO      reduce using rule 166 (literal -> TRUE .)
    DECREMENTO      reduce using rule 166 (literal -> TRUE .)
    PUNTO           reduce using rule 166 (literal -> TRUE .)
    CORCHETE_ABIERTO reduce using rule 166 (literal -> TRUE .)
    MULTIPLICACION  reduce using rule 166 (literal -> TRUE .)
    DIVISION        reduce using rule 166 (literal -> TRUE .)
    MODULO          reduce using rule 166 (literal -> TRUE .)
    SUMA            reduce using rule 166 (literal -> TRUE .)
    RESTA           reduce using rule 166 (literal -> TRUE .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 166 (literal -> TRUE .)
    DESPLAZAMIENTO_DERECHO reduce using rule 166 (literal -> TRUE .)
    MENOR           reduce using rule 166 (literal -> TRUE .)
    MAYOR           reduce using rule 166 (literal -> TRUE .)
    MENOR_IGUAL     reduce using rule 166 (literal -> TRUE .)
    MAYOR_IGUAL     reduce using rule 166 (literal -> TRUE .)
    INSTANCEOF      reduce using rule 166 (literal -> TRUE .)
    IGUAL           reduce using rule 166 (literal -> TRUE .)
    DISTINTO        reduce using rule 166 (literal -> TRUE .)
    AND_BIT         reduce using rule 166 (literal -> TRUE .)
    XOR_BIT         reduce using rule 166 (literal -> TRUE .)
    OR_BIT          reduce using rule 166 (literal -> TRUE .)
    AND_LOGICO      reduce using rule 166 (literal -> TRUE .)
    TERNARIO        reduce using rule 166 (literal -> TRUE .)
    OR_LOGICO       reduce using rule 166 (literal -> TRUE .)
    PUNTO_Y_COMA    reduce using rule 166 (literal -> TRUE .)
    PARENTESIS_CERRADO reduce using rule 166 (literal -> TRUE .)
    COMA            reduce using rule 166 (literal -> TRUE .)
    DOSPUNTOS       reduce using rule 166 (literal -> TRUE .)
    CORCHETE_CERRADO reduce using rule 166 (literal -> TRUE .)


state 137

    (167) literal -> FALSE .

    INCREMENTO      reduce using rule 167 (literal -> FALSE .)
    DECREMENTO      reduce using rule 167 (literal -> FALSE .)
    PUNTO           reduce using rule 167 (literal -> FALSE .)
    CORCHETE_ABIERTO reduce using rule 167 (literal -> FALSE .)
    MULTIPLICACION  reduce using rule 167 (literal -> FALSE .)
    DIVISION        reduce using rule 167 (literal -> FALSE .)
    MODULO          reduce using rule 167 (literal -> FALSE .)
    SUMA            reduce using rule 167 (literal -> FALSE .)
    RESTA           reduce using rule 167 (literal -> FALSE .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 167 (literal -> FALSE .)
    DESPLAZAMIENTO_DERECHO reduce using rule 167 (literal -> FALSE .)
    MENOR           reduce using rule 167 (literal -> FALSE .)
    MAYOR           reduce using rule 167 (literal -> FALSE .)
    MENOR_IGUAL     reduce using rule 167 (literal -> FALSE .)
    MAYOR_IGUAL     reduce using rule 167 (literal -> FALSE .)
    INSTANCEOF      reduce using rule 167 (literal -> FALSE .)
    IGUAL           reduce using rule 167 (literal -> FALSE .)
    DISTINTO        reduce using rule 167 (literal -> FALSE .)
    AND_BIT         reduce using rule 167 (literal -> FALSE .)
    XOR_BIT         reduce using rule 167 (literal -> FALSE .)
    OR_BIT          reduce using rule 167 (literal -> FALSE .)
    AND_LOGICO      reduce using rule 167 (literal -> FALSE .)
    TERNARIO        reduce using rule 167 (literal -> FALSE .)
    OR_LOGICO       reduce using rule 167 (literal -> FALSE .)
    PUNTO_Y_COMA    reduce using rule 167 (literal -> FALSE .)
    PARENTESIS_CERRADO reduce using rule 167 (literal -> FALSE .)
    COMA            reduce using rule 167 (literal -> FALSE .)
    DOSPUNTOS       reduce using rule 167 (literal -> FALSE .)
    CORCHETE_CERRADO reduce using rule 167 (literal -> FALSE .)


state 138

    (168) literal -> NULL .

    INCREMENTO      reduce using rule 168 (literal -> NULL .)
    DECREMENTO      reduce using rule 168 (literal -> NULL .)
    PUNTO           reduce using rule 168 (literal -> NULL .)
    CORCHETE_ABIERTO reduce using rule 168 (literal -> NULL .)
    MULTIPLICACION  reduce using rule 168 (literal -> NULL .)
    DIVISION        reduce using rule 168 (literal -> NULL .)
    MODULO          reduce using rule 168 (literal -> NULL .)
    SUMA            reduce using rule 168 (literal -> NULL .)
    RESTA           reduce using rule 168 (literal -> NULL .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 168 (literal -> NULL .)
    DESPLAZAMIENTO_DERECHO reduce using rule 168 (literal -> NULL .)
    MENOR           reduce using rule 168 (literal -> NULL .)
    MAYOR           reduce using rule 168 (literal -> NULL .)
    MENOR_IGUAL     reduce using rule 168 (literal -> NULL .)
    MAYOR_IGUAL     reduce using rule 168 (literal -> NULL .)
    INSTANCEOF      reduce using rule 168 (literal -> NULL .)
    IGUAL           reduce using rule 168 (literal -> NULL .)
    DISTINTO        reduce using rule 168 (literal -> NULL .)
    AND_BIT         reduce using rule 168 (literal -> NULL .)
    XOR_BIT         reduce using rule 168 (literal -> NULL .)
    OR_BIT          reduce using rule 168 (literal -> NULL .)
    AND_LOGICO      reduce using rule 168 (literal -> NULL .)
    TERNARIO        reduce using rule 168 (literal -> NULL .)
    OR_LOGICO       reduce using rule 168 (literal -> NULL .)
    PUNTO_Y_COMA    reduce using rule 168 (literal -> NULL .)
    PARENTESIS_CERRADO reduce using rule 168 (literal -> NULL .)
    COMA            reduce using rule 168 (literal -> NULL .)
    DOSPUNTOS       reduce using rule 168 (literal -> NULL .)
    CORCHETE_CERRADO reduce using rule 168 (literal -> NULL .)


state 139

    (169) literal -> OCTAL_NUMERO .

    INCREMENTO      reduce using rule 169 (literal -> OCTAL_NUMERO .)
    DECREMENTO      reduce using rule 169 (literal -> OCTAL_NUMERO .)
    PUNTO           reduce using rule 169 (literal -> OCTAL_NUMERO .)
    CORCHETE_ABIERTO reduce using rule 169 (literal -> OCTAL_NUMERO .)
    MULTIPLICACION  reduce using rule 169 (literal -> OCTAL_NUMERO .)
    DIVISION        reduce using rule 169 (literal -> OCTAL_NUMERO .)
    MODULO          reduce using rule 169 (literal -> OCTAL_NUMERO .)
    SUMA            reduce using rule 169 (literal -> OCTAL_NUMERO .)
    RESTA           reduce using rule 169 (literal -> OCTAL_NUMERO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 169 (literal -> OCTAL_NUMERO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 169 (literal -> OCTAL_NUMERO .)
    MENOR           reduce using rule 169 (literal -> OCTAL_NUMERO .)
    MAYOR           reduce using rule 169 (literal -> OCTAL_NUMERO .)
    MENOR_IGUAL     reduce using rule 169 (literal -> OCTAL_NUMERO .)
    MAYOR_IGUAL     reduce using rule 169 (literal -> OCTAL_NUMERO .)
    INSTANCEOF      reduce using rule 169 (literal -> OCTAL_NUMERO .)
    IGUAL           reduce using rule 169 (literal -> OCTAL_NUMERO .)
    DISTINTO        reduce using rule 169 (literal -> OCTAL_NUMERO .)
    AND_BIT         reduce using rule 169 (literal -> OCTAL_NUMERO .)
    XOR_BIT         reduce using rule 169 (literal -> OCTAL_NUMERO .)
    OR_BIT          reduce using rule 169 (literal -> OCTAL_NUMERO .)
    AND_LOGICO      reduce using rule 169 (literal -> OCTAL_NUMERO .)
    TERNARIO        reduce using rule 169 (literal -> OCTAL_NUMERO .)
    OR_LOGICO       reduce using rule 169 (literal -> OCTAL_NUMERO .)
    PUNTO_Y_COMA    reduce using rule 169 (literal -> OCTAL_NUMERO .)
    PARENTESIS_CERRADO reduce using rule 169 (literal -> OCTAL_NUMERO .)
    COMA            reduce using rule 169 (literal -> OCTAL_NUMERO .)
    DOSPUNTOS       reduce using rule 169 (literal -> OCTAL_NUMERO .)
    CORCHETE_CERRADO reduce using rule 169 (literal -> OCTAL_NUMERO .)


state 140

    (170) literal -> HEX_NUMERO .

    INCREMENTO      reduce using rule 170 (literal -> HEX_NUMERO .)
    DECREMENTO      reduce using rule 170 (literal -> HEX_NUMERO .)
    PUNTO           reduce using rule 170 (literal -> HEX_NUMERO .)
    CORCHETE_ABIERTO reduce using rule 170 (literal -> HEX_NUMERO .)
    MULTIPLICACION  reduce using rule 170 (literal -> HEX_NUMERO .)
    DIVISION        reduce using rule 170 (literal -> HEX_NUMERO .)
    MODULO          reduce using rule 170 (literal -> HEX_NUMERO .)
    SUMA            reduce using rule 170 (literal -> HEX_NUMERO .)
    RESTA           reduce using rule 170 (literal -> HEX_NUMERO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 170 (literal -> HEX_NUMERO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 170 (literal -> HEX_NUMERO .)
    MENOR           reduce using rule 170 (literal -> HEX_NUMERO .)
    MAYOR           reduce using rule 170 (literal -> HEX_NUMERO .)
    MENOR_IGUAL     reduce using rule 170 (literal -> HEX_NUMERO .)
    MAYOR_IGUAL     reduce using rule 170 (literal -> HEX_NUMERO .)
    INSTANCEOF      reduce using rule 170 (literal -> HEX_NUMERO .)
    IGUAL           reduce using rule 170 (literal -> HEX_NUMERO .)
    DISTINTO        reduce using rule 170 (literal -> HEX_NUMERO .)
    AND_BIT         reduce using rule 170 (literal -> HEX_NUMERO .)
    XOR_BIT         reduce using rule 170 (literal -> HEX_NUMERO .)
    OR_BIT          reduce using rule 170 (literal -> HEX_NUMERO .)
    AND_LOGICO      reduce using rule 170 (literal -> HEX_NUMERO .)
    TERNARIO        reduce using rule 170 (literal -> HEX_NUMERO .)
    OR_LOGICO       reduce using rule 170 (literal -> HEX_NUMERO .)
    PUNTO_Y_COMA    reduce using rule 170 (literal -> HEX_NUMERO .)
    PARENTESIS_CERRADO reduce using rule 170 (literal -> HEX_NUMERO .)
    COMA            reduce using rule 170 (literal -> HEX_NUMERO .)
    DOSPUNTOS       reduce using rule 170 (literal -> HEX_NUMERO .)
    CORCHETE_CERRADO reduce using rule 170 (literal -> HEX_NUMERO .)


state 141

    (171) literal -> BINARIO_NUMERO .

    INCREMENTO      reduce using rule 171 (literal -> BINARIO_NUMERO .)
    DECREMENTO      reduce using rule 171 (literal -> BINARIO_NUMERO .)
    PUNTO           reduce using rule 171 (literal -> BINARIO_NUMERO .)
    CORCHETE_ABIERTO reduce using rule 171 (literal -> BINARIO_NUMERO .)
    MULTIPLICACION  reduce using rule 171 (literal -> BINARIO_NUMERO .)
    DIVISION        reduce using rule 171 (literal -> BINARIO_NUMERO .)
    MODULO          reduce using rule 171 (literal -> BINARIO_NUMERO .)
    SUMA            reduce using rule 171 (literal -> BINARIO_NUMERO .)
    RESTA           reduce using rule 171 (literal -> BINARIO_NUMERO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 171 (literal -> BINARIO_NUMERO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 171 (literal -> BINARIO_NUMERO .)
    MENOR           reduce using rule 171 (literal -> BINARIO_NUMERO .)
    MAYOR           reduce using rule 171 (literal -> BINARIO_NUMERO .)
    MENOR_IGUAL     reduce using rule 171 (literal -> BINARIO_NUMERO .)
    MAYOR_IGUAL     reduce using rule 171 (literal -> BINARIO_NUMERO .)
    INSTANCEOF      reduce using rule 171 (literal -> BINARIO_NUMERO .)
    IGUAL           reduce using rule 171 (literal -> BINARIO_NUMERO .)
    DISTINTO        reduce using rule 171 (literal -> BINARIO_NUMERO .)
    AND_BIT         reduce using rule 171 (literal -> BINARIO_NUMERO .)
    XOR_BIT         reduce using rule 171 (literal -> BINARIO_NUMERO .)
    OR_BIT          reduce using rule 171 (literal -> BINARIO_NUMERO .)
    AND_LOGICO      reduce using rule 171 (literal -> BINARIO_NUMERO .)
    TERNARIO        reduce using rule 171 (literal -> BINARIO_NUMERO .)
    OR_LOGICO       reduce using rule 171 (literal -> BINARIO_NUMERO .)
    PUNTO_Y_COMA    reduce using rule 171 (literal -> BINARIO_NUMERO .)
    PARENTESIS_CERRADO reduce using rule 171 (literal -> BINARIO_NUMERO .)
    COMA            reduce using rule 171 (literal -> BINARIO_NUMERO .)
    DOSPUNTOS       reduce using rule 171 (literal -> BINARIO_NUMERO .)
    CORCHETE_CERRADO reduce using rule 171 (literal -> BINARIO_NUMERO .)


state 142

    (11) class_header -> modifiers CLASS ID extends_clause implements_clause .

    LLAVE_ABIERTA   reduce using rule 11 (class_header -> modifiers CLASS ID extends_clause implements_clause .)


state 143

    (15) implements_clause -> IMPLEMENTS qualified_id_list .

    LLAVE_ABIERTA   reduce using rule 15 (implements_clause -> IMPLEMENTS qualified_id_list .)


state 144

    (93) qualified_id_list -> qualified_id . COMA qualified_id_list
    (94) qualified_id_list -> qualified_id .

    COMA            shift and go to state 221
    LLAVE_ABIERTA   reduce using rule 94 (qualified_id_list -> qualified_id .)


state 145

    (24) field_decl -> modifiers type variables PUNTO_Y_COMA .

    CLASS           reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    PUBLIC          reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    STATIC          reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    FINAL           reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    ABSTRACT        reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    NATIVE          reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    SYNCHRONIZED    reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    VOLATILE        reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    EXPORT          reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    INTERFACE       reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    TRANSIENT       reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 24 (field_decl -> modifiers type variables PUNTO_Y_COMA .)


state 146

    (30) method_header -> modifiers type ID PARENTESIS_ABIERTO . formal_params PARENTESIS_CERRADO
    (32) method_header -> modifiers type ID PARENTESIS_ABIERTO . PARENTESIS_CERRADO
    (38) formal_params -> . formal_param COMA formal_params
    (39) formal_params -> . formal_param
    (40) formal_params -> . empty
    (41) formal_param -> . type ID
    (42) formal_param -> . array_type ID
    (193) empty -> .
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (43) array_type -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (44) array_type -> . reference_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

  ! shift/reduce conflict for PARENTESIS_CERRADO resolved as shift
    PARENTESIS_CERRADO shift and go to state 223
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    ID              shift and go to state 28

  ! PARENTESIS_CERRADO [ reduce using rule 193 (empty -> .) ]

    type                           shift and go to state 152
    formal_params                  shift and go to state 222
    formal_param                   shift and go to state 150
    empty                          shift and go to state 151
    array_type                     shift and go to state 153
    primitive_type                 shift and go to state 154
    reference_type                 shift and go to state 155
    qualified_id                   shift and go to state 71

state 147

    (28) variable -> ID ASIGNACION . expression
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 224
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 148

    (25) variables -> variable COMA . variables
    (25) variables -> . variable COMA variables
    (26) variables -> . variable
    (27) variable -> . ID
    (28) variable -> . ID ASIGNACION expression

    ID              shift and go to state 176

    variable                       shift and go to state 81
    variables                      shift and go to state 225

state 149

    (45) constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params . PARENTESIS_CERRADO block

    PARENTESIS_CERRADO shift and go to state 226


state 150

    (38) formal_params -> formal_param . COMA formal_params
    (39) formal_params -> formal_param .

    COMA            shift and go to state 227
    PARENTESIS_CERRADO reduce using rule 39 (formal_params -> formal_param .)


state 151

    (40) formal_params -> empty .

    PARENTESIS_CERRADO reduce using rule 40 (formal_params -> empty .)


state 152

    (41) formal_param -> type . ID

    ID              shift and go to state 228


state 153

    (42) formal_param -> array_type . ID

    ID              shift and go to state 229


state 154

    (79) type -> primitive_type .
    (43) array_type -> primitive_type . CORCHETE_ABIERTO CORCHETE_CERRADO

    ID              reduce using rule 79 (type -> primitive_type .)
    CORCHETE_ABIERTO shift and go to state 230


state 155

    (80) type -> reference_type .
    (44) array_type -> reference_type . CORCHETE_ABIERTO CORCHETE_CERRADO

    ID              reduce using rule 80 (type -> reference_type .)
    CORCHETE_ABIERTO shift and go to state 231


state 156

    (31) method_header -> modifiers VOID ID PARENTESIS_ABIERTO . formal_params PARENTESIS_CERRADO
    (33) method_header -> modifiers VOID ID PARENTESIS_ABIERTO . PARENTESIS_CERRADO
    (38) formal_params -> . formal_param COMA formal_params
    (39) formal_params -> . formal_param
    (40) formal_params -> . empty
    (41) formal_param -> . type ID
    (42) formal_param -> . array_type ID
    (193) empty -> .
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (43) array_type -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (44) array_type -> . reference_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

  ! shift/reduce conflict for PARENTESIS_CERRADO resolved as shift
    PARENTESIS_CERRADO shift and go to state 233
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    ID              shift and go to state 28

  ! PARENTESIS_CERRADO [ reduce using rule 193 (empty -> .) ]

    formal_params                  shift and go to state 232
    formal_param                   shift and go to state 150
    empty                          shift and go to state 151
    type                           shift and go to state 152
    array_type                     shift and go to state 153
    primitive_type                 shift and go to state 154
    reference_type                 shift and go to state 155
    qualified_id                   shift and go to state 71

state 157

    (46) block -> LLAVE_ABIERTA statements LLAVE_CERRADA .

    CLASS           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    PUBLIC          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    PRIVATE         reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    PROTECTED       reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    STATIC          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    FINAL           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    ABSTRACT        reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    NATIVE          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    SYNCHRONIZED    reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    VOLATILE        reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    EXPORT          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    INTERFACE       reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    TRANSIENT       reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    LLAVE_CERRADA   reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    WHILE           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    DO              reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    FOR             reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    SWITCH          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    RETURN          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    BREAK           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    CONTINUE        reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    THROW           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    TRY             reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    ASSERT          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    PUNTO_Y_COMA    reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    IF              reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    LLAVE_ABIERTA   reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    ID              reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    INT             reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    FLOAT           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    DOUBLE          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    CHAR            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    BOOLEAN         reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    SHORT           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    LONG            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    STRING          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    BYTE            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    INCREMENTO      reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    DECREMENTO      reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    SUMA            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    RESTA           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    UMAS            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    UMENOS          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    NOT             reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    NOT_BIT         reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    THIS            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    SUPER           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    PARENTESIS_ABIERTO reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    NEW             reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    NUMERO          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    CADENA          reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    TRUE            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    FALSE           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    NULL            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    OCTAL_NUMERO    reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    HEX_NUMERO      reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    BINARIO_NUMERO  reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    CASE            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    DEFAULT         reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    CATCH           reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    ELSE            reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)
    FINALLY         reduce using rule 46 (block -> LLAVE_ABIERTA statements LLAVE_CERRADA .)


state 158

    (48) statements -> statement statements .

    LLAVE_CERRADA   reduce using rule 48 (statements -> statement statements .)
    CASE            reduce using rule 48 (statements -> statement statements .)
    DEFAULT         reduce using rule 48 (statements -> statement statements .)


state 159

    (51) statement -> WHILE PARENTESIS_ABIERTO . expression PARENTESIS_CERRADO statement
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 234
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 160

    (161) primary -> PARENTESIS_ABIERTO expression . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 235


state 161

    (163) primary -> qualified_id .

    INCREMENTO      reduce using rule 163 (primary -> qualified_id .)
    DECREMENTO      reduce using rule 163 (primary -> qualified_id .)
    PUNTO           reduce using rule 163 (primary -> qualified_id .)
    CORCHETE_ABIERTO reduce using rule 163 (primary -> qualified_id .)
    MULTIPLICACION  reduce using rule 163 (primary -> qualified_id .)
    DIVISION        reduce using rule 163 (primary -> qualified_id .)
    MODULO          reduce using rule 163 (primary -> qualified_id .)
    SUMA            reduce using rule 163 (primary -> qualified_id .)
    RESTA           reduce using rule 163 (primary -> qualified_id .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 163 (primary -> qualified_id .)
    DESPLAZAMIENTO_DERECHO reduce using rule 163 (primary -> qualified_id .)
    MENOR           reduce using rule 163 (primary -> qualified_id .)
    MAYOR           reduce using rule 163 (primary -> qualified_id .)
    MENOR_IGUAL     reduce using rule 163 (primary -> qualified_id .)
    MAYOR_IGUAL     reduce using rule 163 (primary -> qualified_id .)
    INSTANCEOF      reduce using rule 163 (primary -> qualified_id .)
    IGUAL           reduce using rule 163 (primary -> qualified_id .)
    DISTINTO        reduce using rule 163 (primary -> qualified_id .)
    AND_BIT         reduce using rule 163 (primary -> qualified_id .)
    XOR_BIT         reduce using rule 163 (primary -> qualified_id .)
    OR_BIT          reduce using rule 163 (primary -> qualified_id .)
    AND_LOGICO      reduce using rule 163 (primary -> qualified_id .)
    TERNARIO        reduce using rule 163 (primary -> qualified_id .)
    OR_LOGICO       reduce using rule 163 (primary -> qualified_id .)
    PARENTESIS_CERRADO reduce using rule 163 (primary -> qualified_id .)
    PUNTO_Y_COMA    reduce using rule 163 (primary -> qualified_id .)
    COMA            reduce using rule 163 (primary -> qualified_id .)
    DOSPUNTOS       reduce using rule 163 (primary -> qualified_id .)
    CORCHETE_CERRADO reduce using rule 163 (primary -> qualified_id .)


state 162

    (63) statement -> expression PUNTO_Y_COMA .

    WHILE           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    DO              reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    FOR             reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    SWITCH          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    BREAK           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    THROW           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    TRY             reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    ASSERT          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    IF              reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    ID              reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    INT             reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    SHORT           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    LONG            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    STRING          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    BYTE            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    SUMA            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    RESTA           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    UMAS            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    UMENOS          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    NOT             reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    THIS            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    SUPER           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    NEW             reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    TRUE            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    FALSE           reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    NULL            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    CASE            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)
    ELSE            reduce using rule 63 (statement -> expression PUNTO_Y_COMA .)


state 163

    (52) statement -> DO statement . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA

    WHILE           shift and go to state 236


state 164

    (53) statement -> FOR PARENTESIS_ABIERTO . for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (66) for_init -> . local_var_decl
    (67) for_init -> . expression_list
    (78) local_var_decl -> . type variables
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (95) expression -> . assignment_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    for_init                       shift and go to state 237
    expression                     shift and go to state 238
    local_var_decl                 shift and go to state 239
    expression_list                shift and go to state 240
    type                           shift and go to state 105
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    assignment_expression          shift and go to state 104
    qualified_id                   shift and go to state 109
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 165

    (54) statement -> SWITCH PARENTESIS_ABIERTO . expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 241
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 166

    (55) statement -> RETURN expression . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 242


state 167

    (56) statement -> RETURN PUNTO_Y_COMA .

    WHILE           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    DO              reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    FOR             reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    SWITCH          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    RETURN          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    BREAK           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    THROW           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    TRY             reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    ASSERT          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    IF              reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    ID              reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    INT             reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    FLOAT           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    CHAR            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    SHORT           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    LONG            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    STRING          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    BYTE            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    SUMA            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    RESTA           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    UMAS            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    UMENOS          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    NOT             reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    THIS            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    SUPER           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    NEW             reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    NUMERO          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    CADENA          reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    TRUE            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    FALSE           reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    NULL            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    CASE            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)
    ELSE            reduce using rule 56 (statement -> RETURN PUNTO_Y_COMA .)


state 168

    (57) statement -> BREAK PUNTO_Y_COMA .

    WHILE           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    DO              reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    FOR             reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    SWITCH          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    RETURN          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    BREAK           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    THROW           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    TRY             reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    ASSERT          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    IF              reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    ID              reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    INT             reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    FLOAT           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    CHAR            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    SHORT           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    LONG            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    STRING          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    BYTE            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    SUMA            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    RESTA           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    UMAS            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    UMENOS          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    NOT             reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    THIS            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    SUPER           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    NEW             reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    NUMERO          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    CADENA          reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    TRUE            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    FALSE           reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    NULL            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    CASE            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)
    ELSE            reduce using rule 57 (statement -> BREAK PUNTO_Y_COMA .)


state 169

    (58) statement -> CONTINUE PUNTO_Y_COMA .

    WHILE           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    DO              reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    FOR             reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    SWITCH          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    RETURN          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    BREAK           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    THROW           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    TRY             reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    ASSERT          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    IF              reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    ID              reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    INT             reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    FLOAT           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    CHAR            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    SHORT           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    LONG            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    STRING          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    BYTE            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    SUMA            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    RESTA           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    UMAS            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    UMENOS          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    NOT             reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    THIS            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    SUPER           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    NEW             reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    NUMERO          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    CADENA          reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    TRUE            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    FALSE           reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    NULL            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    CASE            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)
    ELSE            reduce using rule 58 (statement -> CONTINUE PUNTO_Y_COMA .)


state 170

    (59) statement -> THROW expression . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 243


state 171

    (60) statement -> TRY block . catches
    (62) statement -> TRY block . catches FINALLY block
    (75) catches -> . catch catches
    (76) catches -> . catch
    (77) catch -> . CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block

    CATCH           shift and go to state 246

    catches                        shift and go to state 244
    catch                          shift and go to state 245

state 172

    (61) statement -> ASSERT expression . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 247


state 173

    (64) statement -> local_var_decl PUNTO_Y_COMA .

    WHILE           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    DO              reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    FOR             reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    SWITCH          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    RETURN          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    BREAK           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    THROW           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    TRY             reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    ASSERT          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    IF              reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    ID              reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    INT             reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    FLOAT           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    CHAR            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    SHORT           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    LONG            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    STRING          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    BYTE            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    SUMA            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    RESTA           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    UMAS            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    UMENOS          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    NOT             reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    THIS            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    SUPER           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    NEW             reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    NUMERO          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    CADENA          reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    TRUE            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    FALSE           reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    NULL            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    CASE            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)
    ELSE            reduce using rule 64 (statement -> local_var_decl PUNTO_Y_COMA .)


state 174

    (146) statement -> IF PARENTESIS_ABIERTO . expression PARENTESIS_CERRADO statement
    (147) statement -> IF PARENTESIS_ABIERTO . expression PARENTESIS_CERRADO statement ELSE statement
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 248
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 175

    (78) local_var_decl -> type variables .

    PUNTO_Y_COMA    reduce using rule 78 (local_var_decl -> type variables .)


state 176

    (27) variable -> ID .
    (28) variable -> ID . ASIGNACION expression

    COMA            reduce using rule 27 (variable -> ID .)
    PUNTO_Y_COMA    reduce using rule 27 (variable -> ID .)
    ASIGNACION      shift and go to state 147


state 177

    (97) assignment_expression -> ID assignment_operator . expression
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 249
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 178

    (98) assignment_operator -> ASIGNACION .

    ID              reduce using rule 98 (assignment_operator -> ASIGNACION .)
    INCREMENTO      reduce using rule 98 (assignment_operator -> ASIGNACION .)
    DECREMENTO      reduce using rule 98 (assignment_operator -> ASIGNACION .)
    SUMA            reduce using rule 98 (assignment_operator -> ASIGNACION .)
    RESTA           reduce using rule 98 (assignment_operator -> ASIGNACION .)
    UMAS            reduce using rule 98 (assignment_operator -> ASIGNACION .)
    UMENOS          reduce using rule 98 (assignment_operator -> ASIGNACION .)
    NOT             reduce using rule 98 (assignment_operator -> ASIGNACION .)
    NOT_BIT         reduce using rule 98 (assignment_operator -> ASIGNACION .)
    THIS            reduce using rule 98 (assignment_operator -> ASIGNACION .)
    SUPER           reduce using rule 98 (assignment_operator -> ASIGNACION .)
    PARENTESIS_ABIERTO reduce using rule 98 (assignment_operator -> ASIGNACION .)
    NEW             reduce using rule 98 (assignment_operator -> ASIGNACION .)
    NUMERO          reduce using rule 98 (assignment_operator -> ASIGNACION .)
    CADENA          reduce using rule 98 (assignment_operator -> ASIGNACION .)
    TRUE            reduce using rule 98 (assignment_operator -> ASIGNACION .)
    FALSE           reduce using rule 98 (assignment_operator -> ASIGNACION .)
    NULL            reduce using rule 98 (assignment_operator -> ASIGNACION .)
    OCTAL_NUMERO    reduce using rule 98 (assignment_operator -> ASIGNACION .)
    HEX_NUMERO      reduce using rule 98 (assignment_operator -> ASIGNACION .)
    BINARIO_NUMERO  reduce using rule 98 (assignment_operator -> ASIGNACION .)


state 179

    (99) assignment_operator -> ASIGNACION_SUMA .

    ID              reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    INCREMENTO      reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    DECREMENTO      reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    SUMA            reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    RESTA           reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    UMAS            reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    UMENOS          reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    NOT             reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    NOT_BIT         reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    THIS            reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    SUPER           reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    PARENTESIS_ABIERTO reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    NEW             reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    NUMERO          reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    CADENA          reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    TRUE            reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    FALSE           reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    NULL            reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    OCTAL_NUMERO    reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    HEX_NUMERO      reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)
    BINARIO_NUMERO  reduce using rule 99 (assignment_operator -> ASIGNACION_SUMA .)


state 180

    (100) assignment_operator -> ASIGNACION_RESTA .

    ID              reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    INCREMENTO      reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    DECREMENTO      reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    SUMA            reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    RESTA           reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    UMAS            reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    UMENOS          reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    NOT             reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    NOT_BIT         reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    THIS            reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    SUPER           reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    PARENTESIS_ABIERTO reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    NEW             reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    NUMERO          reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    CADENA          reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    TRUE            reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    FALSE           reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    NULL            reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    OCTAL_NUMERO    reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    HEX_NUMERO      reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)
    BINARIO_NUMERO  reduce using rule 100 (assignment_operator -> ASIGNACION_RESTA .)


state 181

    (101) assignment_operator -> ASIGNACION_MULTIPLICACION .

    ID              reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    INCREMENTO      reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    DECREMENTO      reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    SUMA            reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    RESTA           reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    UMAS            reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    UMENOS          reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    NOT             reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    NOT_BIT         reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    THIS            reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    SUPER           reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    PARENTESIS_ABIERTO reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    NEW             reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    NUMERO          reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    CADENA          reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    TRUE            reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    FALSE           reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    NULL            reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    OCTAL_NUMERO    reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    HEX_NUMERO      reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)
    BINARIO_NUMERO  reduce using rule 101 (assignment_operator -> ASIGNACION_MULTIPLICACION .)


state 182

    (102) assignment_operator -> ASIGNACION_DIVISION .

    ID              reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    INCREMENTO      reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    DECREMENTO      reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    SUMA            reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    RESTA           reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    UMAS            reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    UMENOS          reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    NOT             reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    NOT_BIT         reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    THIS            reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    SUPER           reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    PARENTESIS_ABIERTO reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    NEW             reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    NUMERO          reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    CADENA          reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    TRUE            reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    FALSE           reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    NULL            reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    OCTAL_NUMERO    reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    HEX_NUMERO      reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)
    BINARIO_NUMERO  reduce using rule 102 (assignment_operator -> ASIGNACION_DIVISION .)


state 183

    (103) assignment_operator -> ASIGNACION_MODULO .

    ID              reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    INCREMENTO      reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    DECREMENTO      reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    SUMA            reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    RESTA           reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    UMAS            reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    UMENOS          reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    NOT             reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    NOT_BIT         reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    THIS            reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    SUPER           reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    PARENTESIS_ABIERTO reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    NEW             reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    NUMERO          reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    CADENA          reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    TRUE            reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    FALSE           reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    NULL            reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    OCTAL_NUMERO    reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    HEX_NUMERO      reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)
    BINARIO_NUMERO  reduce using rule 103 (assignment_operator -> ASIGNACION_MODULO .)


state 184

    (104) assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .

    ID              reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    INCREMENTO      reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    DECREMENTO      reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    SUMA            reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    RESTA           reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    UMAS            reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    UMENOS          reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    NOT             reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    NOT_BIT         reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    THIS            reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    SUPER           reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    PARENTESIS_ABIERTO reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    NEW             reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    NUMERO          reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    CADENA          reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    TRUE            reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    FALSE           reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    NULL            reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    OCTAL_NUMERO    reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    HEX_NUMERO      reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)
    BINARIO_NUMERO  reduce using rule 104 (assignment_operator -> DESPLAZAMIENTO_IZQUIERDO_ASIGNACION .)


state 185

    (105) assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .

    ID              reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    INCREMENTO      reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    DECREMENTO      reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    SUMA            reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    RESTA           reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    UMAS            reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    UMENOS          reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    NOT             reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    NOT_BIT         reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    THIS            reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    SUPER           reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    PARENTESIS_ABIERTO reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    NEW             reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    NUMERO          reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    CADENA          reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    TRUE            reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    FALSE           reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    NULL            reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    OCTAL_NUMERO    reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    HEX_NUMERO      reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)
    BINARIO_NUMERO  reduce using rule 105 (assignment_operator -> DESPLAZAMIENTO_DERECHO_ASIGNACION .)


state 186

    (107) conditional_expression -> logical_or_expression TERNARIO . expression DOSPUNTOS conditional_expression
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    logical_or_expression          shift and go to state 108
    expression                     shift and go to state 250
    conditional_expression         shift and go to state 106
    assignment_expression          shift and go to state 104
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 187

    (109) logical_or_expression -> logical_or_expression OR_LOGICO . logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    logical_and_expression         shift and go to state 251
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 188

    (111) logical_and_expression -> logical_and_expression AND_LOGICO . inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    inclusive_or_expression        shift and go to state 252
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 189

    (113) inclusive_or_expression -> inclusive_or_expression OR_BIT . exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    exclusive_or_expression        shift and go to state 253
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 190

    (115) exclusive_or_expression -> exclusive_or_expression XOR_BIT . and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    and_expression                 shift and go to state 254
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 191

    (117) and_expression -> and_expression AND_BIT . equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    equality_expression            shift and go to state 255
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 192

    (119) equality_expression -> equality_expression IGUAL . relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    relational_expression          shift and go to state 256
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 193

    (120) equality_expression -> equality_expression DISTINTO . relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    relational_expression          shift and go to state 257
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 194

    (122) relational_expression -> relational_expression MENOR . shift_expression
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    shift_expression               shift and go to state 258
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 195

    (123) relational_expression -> relational_expression MAYOR . shift_expression
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    shift_expression               shift and go to state 259
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 196

    (124) relational_expression -> relational_expression MENOR_IGUAL . shift_expression
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    shift_expression               shift and go to state 260
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 197

    (125) relational_expression -> relational_expression MAYOR_IGUAL . shift_expression
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    shift_expression               shift and go to state 261
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 198

    (126) relational_expression -> relational_expression INSTANCEOF . reference_type
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 28

    reference_type                 shift and go to state 262
    qualified_id                   shift and go to state 71

state 199

    (128) shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO . additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    additive_expression            shift and go to state 263
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 200

    (129) shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO . additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    additive_expression            shift and go to state 264
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 201

    (131) additive_expression -> additive_expression SUMA . multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    multiplicative_expression      shift and go to state 265
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 202

    (132) additive_expression -> additive_expression RESTA . multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    multiplicative_expression      shift and go to state 266
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 203

    (134) multiplicative_expression -> multiplicative_expression MULTIPLICACION . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 267
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 204

    (135) multiplicative_expression -> multiplicative_expression DIVISION . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 268
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 205

    (136) multiplicative_expression -> multiplicative_expression MODULO . unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    unary_expression               shift and go to state 269
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 206

    (140) unary_expression -> SUMA unary_expression .

    MULTIPLICACION  reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    DIVISION        reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    MODULO          reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    SUMA            reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    RESTA           reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    MENOR           reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    MAYOR           reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    MENOR_IGUAL     reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    MAYOR_IGUAL     reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    INSTANCEOF      reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    IGUAL           reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    DISTINTO        reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    AND_BIT         reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    XOR_BIT         reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    OR_BIT          reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    AND_LOGICO      reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    TERNARIO        reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    OR_LOGICO       reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    PUNTO_Y_COMA    reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    PARENTESIS_CERRADO reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    COMA            reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    DOSPUNTOS       reduce using rule 140 (unary_expression -> SUMA unary_expression .)
    CORCHETE_CERRADO reduce using rule 140 (unary_expression -> SUMA unary_expression .)


state 207

    (141) unary_expression -> RESTA unary_expression .

    MULTIPLICACION  reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    DIVISION        reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    MODULO          reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    SUMA            reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    RESTA           reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    MENOR           reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    MAYOR           reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    MENOR_IGUAL     reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    MAYOR_IGUAL     reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    INSTANCEOF      reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    IGUAL           reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    DISTINTO        reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    AND_BIT         reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    XOR_BIT         reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    OR_BIT          reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    AND_LOGICO      reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    TERNARIO        reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    OR_LOGICO       reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    PUNTO_Y_COMA    reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    PARENTESIS_CERRADO reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    COMA            reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    DOSPUNTOS       reduce using rule 141 (unary_expression -> RESTA unary_expression .)
    CORCHETE_CERRADO reduce using rule 141 (unary_expression -> RESTA unary_expression .)


state 208

    (149) postfix_expression -> postfix_expression INCREMENTO .

    INCREMENTO      reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    DECREMENTO      reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    PUNTO           reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    CORCHETE_ABIERTO reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    MULTIPLICACION  reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    DIVISION        reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    MODULO          reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    SUMA            reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    RESTA           reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    MENOR           reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    MAYOR           reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    MENOR_IGUAL     reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    MAYOR_IGUAL     reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    INSTANCEOF      reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    IGUAL           reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    DISTINTO        reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    AND_BIT         reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    XOR_BIT         reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    OR_BIT          reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    AND_LOGICO      reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    TERNARIO        reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    OR_LOGICO       reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    PUNTO_Y_COMA    reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    PARENTESIS_CERRADO reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    COMA            reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    DOSPUNTOS       reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)
    CORCHETE_CERRADO reduce using rule 149 (postfix_expression -> postfix_expression INCREMENTO .)


state 209

    (150) postfix_expression -> postfix_expression DECREMENTO .

    INCREMENTO      reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    DECREMENTO      reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    PUNTO           reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    CORCHETE_ABIERTO reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    MULTIPLICACION  reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    DIVISION        reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    MODULO          reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    SUMA            reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    RESTA           reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    MENOR           reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    MAYOR           reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    MENOR_IGUAL     reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    MAYOR_IGUAL     reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    INSTANCEOF      reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    IGUAL           reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    DISTINTO        reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    AND_BIT         reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    XOR_BIT         reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    OR_BIT          reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    AND_LOGICO      reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    TERNARIO        reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    OR_LOGICO       reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    PUNTO_Y_COMA    reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    PARENTESIS_CERRADO reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    COMA            reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    DOSPUNTOS       reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)
    CORCHETE_CERRADO reduce using rule 150 (postfix_expression -> postfix_expression DECREMENTO .)


state 210

    (151) postfix_expression -> postfix_expression PUNTO . member_access
    (153) member_access -> . ID
    (154) member_access -> . THIS
    (155) member_access -> . SUPER
    (156) member_access -> . NEW creator
    (157) member_access -> . method_call
    (34) method_call -> . ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (35) method_call -> . THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (36) method_call -> . SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (37) method_call -> . NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO

    ID              shift and go to state 271
    THIS            shift and go to state 272
    SUPER           shift and go to state 273
    NEW             shift and go to state 274

    member_access                  shift and go to state 270
    method_call                    shift and go to state 275

state 211

    (152) postfix_expression -> postfix_expression CORCHETE_ABIERTO . expression CORCHETE_CERRADO
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    postfix_expression             shift and go to state 122
    expression                     shift and go to state 276
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 212

    (138) unary_expression -> INCREMENTO unary_expression .

    MULTIPLICACION  reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    DIVISION        reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    MODULO          reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    SUMA            reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    RESTA           reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    MENOR           reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    MAYOR           reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    MENOR_IGUAL     reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    MAYOR_IGUAL     reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    INSTANCEOF      reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    IGUAL           reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    DISTINTO        reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    AND_BIT         reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    XOR_BIT         reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    OR_BIT          reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    AND_LOGICO      reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    TERNARIO        reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    OR_LOGICO       reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    PUNTO_Y_COMA    reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    PARENTESIS_CERRADO reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    COMA            reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    DOSPUNTOS       reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)
    CORCHETE_CERRADO reduce using rule 138 (unary_expression -> INCREMENTO unary_expression .)


state 213

    (139) unary_expression -> DECREMENTO unary_expression .

    MULTIPLICACION  reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    DIVISION        reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    MODULO          reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    SUMA            reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    RESTA           reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    MENOR           reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    MAYOR           reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    MENOR_IGUAL     reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    MAYOR_IGUAL     reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    INSTANCEOF      reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    IGUAL           reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    DISTINTO        reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    AND_BIT         reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    XOR_BIT         reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    OR_BIT          reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    AND_LOGICO      reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    TERNARIO        reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    OR_LOGICO       reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    PUNTO_Y_COMA    reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    PARENTESIS_CERRADO reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    COMA            reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    DOSPUNTOS       reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)
    CORCHETE_CERRADO reduce using rule 139 (unary_expression -> DECREMENTO unary_expression .)


state 214

    (142) unary_expression -> UMAS unary_expression .

    MULTIPLICACION  reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    DIVISION        reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    MODULO          reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    SUMA            reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    RESTA           reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    MENOR           reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    MAYOR           reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    MENOR_IGUAL     reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    MAYOR_IGUAL     reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    INSTANCEOF      reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    IGUAL           reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    DISTINTO        reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    AND_BIT         reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    XOR_BIT         reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    OR_BIT          reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    AND_LOGICO      reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    TERNARIO        reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    OR_LOGICO       reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    PUNTO_Y_COMA    reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    PARENTESIS_CERRADO reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    COMA            reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    DOSPUNTOS       reduce using rule 142 (unary_expression -> UMAS unary_expression .)
    CORCHETE_CERRADO reduce using rule 142 (unary_expression -> UMAS unary_expression .)


state 215

    (143) unary_expression -> UMENOS unary_expression .

    MULTIPLICACION  reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    DIVISION        reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    MODULO          reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    SUMA            reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    RESTA           reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    MENOR           reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    MAYOR           reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    MENOR_IGUAL     reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    MAYOR_IGUAL     reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    INSTANCEOF      reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    IGUAL           reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    DISTINTO        reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    AND_BIT         reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    XOR_BIT         reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    OR_BIT          reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    AND_LOGICO      reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    TERNARIO        reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    OR_LOGICO       reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    PUNTO_Y_COMA    reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    PARENTESIS_CERRADO reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    COMA            reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    DOSPUNTOS       reduce using rule 143 (unary_expression -> UMENOS unary_expression .)
    CORCHETE_CERRADO reduce using rule 143 (unary_expression -> UMENOS unary_expression .)


state 216

    (144) unary_expression -> NOT unary_expression .

    MULTIPLICACION  reduce using rule 144 (unary_expression -> NOT unary_expression .)
    DIVISION        reduce using rule 144 (unary_expression -> NOT unary_expression .)
    MODULO          reduce using rule 144 (unary_expression -> NOT unary_expression .)
    SUMA            reduce using rule 144 (unary_expression -> NOT unary_expression .)
    RESTA           reduce using rule 144 (unary_expression -> NOT unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 144 (unary_expression -> NOT unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 144 (unary_expression -> NOT unary_expression .)
    MENOR           reduce using rule 144 (unary_expression -> NOT unary_expression .)
    MAYOR           reduce using rule 144 (unary_expression -> NOT unary_expression .)
    MENOR_IGUAL     reduce using rule 144 (unary_expression -> NOT unary_expression .)
    MAYOR_IGUAL     reduce using rule 144 (unary_expression -> NOT unary_expression .)
    INSTANCEOF      reduce using rule 144 (unary_expression -> NOT unary_expression .)
    IGUAL           reduce using rule 144 (unary_expression -> NOT unary_expression .)
    DISTINTO        reduce using rule 144 (unary_expression -> NOT unary_expression .)
    AND_BIT         reduce using rule 144 (unary_expression -> NOT unary_expression .)
    XOR_BIT         reduce using rule 144 (unary_expression -> NOT unary_expression .)
    OR_BIT          reduce using rule 144 (unary_expression -> NOT unary_expression .)
    AND_LOGICO      reduce using rule 144 (unary_expression -> NOT unary_expression .)
    TERNARIO        reduce using rule 144 (unary_expression -> NOT unary_expression .)
    OR_LOGICO       reduce using rule 144 (unary_expression -> NOT unary_expression .)
    PUNTO_Y_COMA    reduce using rule 144 (unary_expression -> NOT unary_expression .)
    PARENTESIS_CERRADO reduce using rule 144 (unary_expression -> NOT unary_expression .)
    COMA            reduce using rule 144 (unary_expression -> NOT unary_expression .)
    DOSPUNTOS       reduce using rule 144 (unary_expression -> NOT unary_expression .)
    CORCHETE_CERRADO reduce using rule 144 (unary_expression -> NOT unary_expression .)


state 217

    (145) unary_expression -> NOT_BIT unary_expression .

    MULTIPLICACION  reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    DIVISION        reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    MODULO          reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    SUMA            reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    RESTA           reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    MENOR           reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    MAYOR           reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    MENOR_IGUAL     reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    MAYOR_IGUAL     reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    INSTANCEOF      reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    IGUAL           reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    DISTINTO        reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    AND_BIT         reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    XOR_BIT         reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    OR_BIT          reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    AND_LOGICO      reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    TERNARIO        reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    OR_LOGICO       reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    PUNTO_Y_COMA    reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    PARENTESIS_CERRADO reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    COMA            reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    DOSPUNTOS       reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)
    CORCHETE_CERRADO reduce using rule 145 (unary_expression -> NOT_BIT unary_expression .)


state 218

    (162) primary -> NEW creator .

    INCREMENTO      reduce using rule 162 (primary -> NEW creator .)
    DECREMENTO      reduce using rule 162 (primary -> NEW creator .)
    PUNTO           reduce using rule 162 (primary -> NEW creator .)
    CORCHETE_ABIERTO reduce using rule 162 (primary -> NEW creator .)
    MULTIPLICACION  reduce using rule 162 (primary -> NEW creator .)
    DIVISION        reduce using rule 162 (primary -> NEW creator .)
    MODULO          reduce using rule 162 (primary -> NEW creator .)
    SUMA            reduce using rule 162 (primary -> NEW creator .)
    RESTA           reduce using rule 162 (primary -> NEW creator .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 162 (primary -> NEW creator .)
    DESPLAZAMIENTO_DERECHO reduce using rule 162 (primary -> NEW creator .)
    MENOR           reduce using rule 162 (primary -> NEW creator .)
    MAYOR           reduce using rule 162 (primary -> NEW creator .)
    MENOR_IGUAL     reduce using rule 162 (primary -> NEW creator .)
    MAYOR_IGUAL     reduce using rule 162 (primary -> NEW creator .)
    INSTANCEOF      reduce using rule 162 (primary -> NEW creator .)
    IGUAL           reduce using rule 162 (primary -> NEW creator .)
    DISTINTO        reduce using rule 162 (primary -> NEW creator .)
    AND_BIT         reduce using rule 162 (primary -> NEW creator .)
    XOR_BIT         reduce using rule 162 (primary -> NEW creator .)
    OR_BIT          reduce using rule 162 (primary -> NEW creator .)
    AND_LOGICO      reduce using rule 162 (primary -> NEW creator .)
    TERNARIO        reduce using rule 162 (primary -> NEW creator .)
    OR_LOGICO       reduce using rule 162 (primary -> NEW creator .)
    PUNTO_Y_COMA    reduce using rule 162 (primary -> NEW creator .)
    PARENTESIS_CERRADO reduce using rule 162 (primary -> NEW creator .)
    COMA            reduce using rule 162 (primary -> NEW creator .)
    DOSPUNTOS       reduce using rule 162 (primary -> NEW creator .)
    CORCHETE_CERRADO reduce using rule 162 (primary -> NEW creator .)


state 219

    (172) creator -> qualified_id . PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (173) creator -> qualified_id . CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (174) creator -> qualified_id . CORCHETE_ABIERTO CORCHETE_CERRADO

    PARENTESIS_ABIERTO shift and go to state 277
    CORCHETE_ABIERTO shift and go to state 278


state 220

    (175) creator -> primitive_type . CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (176) creator -> primitive_type . CORCHETE_ABIERTO CORCHETE_CERRADO

    CORCHETE_ABIERTO shift and go to state 279


state 221

    (93) qualified_id_list -> qualified_id COMA . qualified_id_list
    (93) qualified_id_list -> . qualified_id COMA qualified_id_list
    (94) qualified_id_list -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 28

    qualified_id                   shift and go to state 144
    qualified_id_list              shift and go to state 280

state 222

    (30) method_header -> modifiers type ID PARENTESIS_ABIERTO formal_params . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 281


state 223

    (32) method_header -> modifiers type ID PARENTESIS_ABIERTO PARENTESIS_CERRADO .

    LLAVE_ABIERTA   reduce using rule 32 (method_header -> modifiers type ID PARENTESIS_ABIERTO PARENTESIS_CERRADO .)


state 224

    (28) variable -> ID ASIGNACION expression .

    COMA            reduce using rule 28 (variable -> ID ASIGNACION expression .)
    PUNTO_Y_COMA    reduce using rule 28 (variable -> ID ASIGNACION expression .)


state 225

    (25) variables -> variable COMA variables .

    PUNTO_Y_COMA    reduce using rule 25 (variables -> variable COMA variables .)


state 226

    (45) constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO . block
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 73

    block                          shift and go to state 282

state 227

    (38) formal_params -> formal_param COMA . formal_params
    (38) formal_params -> . formal_param COMA formal_params
    (39) formal_params -> . formal_param
    (40) formal_params -> . empty
    (41) formal_param -> . type ID
    (42) formal_param -> . array_type ID
    (193) empty -> .
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (43) array_type -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (44) array_type -> . reference_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    ID              shift and go to state 28

    formal_param                   shift and go to state 150
    formal_params                  shift and go to state 283
    empty                          shift and go to state 151
    type                           shift and go to state 152
    array_type                     shift and go to state 153
    primitive_type                 shift and go to state 154
    reference_type                 shift and go to state 155
    qualified_id                   shift and go to state 71

state 228

    (41) formal_param -> type ID .

    COMA            reduce using rule 41 (formal_param -> type ID .)
    PARENTESIS_CERRADO reduce using rule 41 (formal_param -> type ID .)


state 229

    (42) formal_param -> array_type ID .

    COMA            reduce using rule 42 (formal_param -> array_type ID .)
    PARENTESIS_CERRADO reduce using rule 42 (formal_param -> array_type ID .)


state 230

    (43) array_type -> primitive_type CORCHETE_ABIERTO . CORCHETE_CERRADO

    CORCHETE_CERRADO shift and go to state 284


state 231

    (44) array_type -> reference_type CORCHETE_ABIERTO . CORCHETE_CERRADO

    CORCHETE_CERRADO shift and go to state 285


state 232

    (31) method_header -> modifiers VOID ID PARENTESIS_ABIERTO formal_params . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 286


state 233

    (33) method_header -> modifiers VOID ID PARENTESIS_ABIERTO PARENTESIS_CERRADO .

    LLAVE_ABIERTA   reduce using rule 33 (method_header -> modifiers VOID ID PARENTESIS_ABIERTO PARENTESIS_CERRADO .)


state 234

    (51) statement -> WHILE PARENTESIS_ABIERTO expression . PARENTESIS_CERRADO statement

    PARENTESIS_CERRADO shift and go to state 287


state 235

    (161) primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .

    INCREMENTO      reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    DECREMENTO      reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    PUNTO           reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    MULTIPLICACION  reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    DIVISION        reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    MODULO          reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    SUMA            reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    RESTA           reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    MENOR           reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    MAYOR           reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    MENOR_IGUAL     reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    MAYOR_IGUAL     reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    INSTANCEOF      reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    IGUAL           reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    DISTINTO        reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    AND_BIT         reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    XOR_BIT         reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    OR_BIT          reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    AND_LOGICO      reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    TERNARIO        reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    OR_LOGICO       reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    COMA            reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    DOSPUNTOS       reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)
    CORCHETE_CERRADO reduce using rule 161 (primary -> PARENTESIS_ABIERTO expression PARENTESIS_CERRADO .)


state 236

    (52) statement -> DO statement WHILE . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA

    PARENTESIS_ABIERTO shift and go to state 288


state 237

    (53) statement -> FOR PARENTESIS_ABIERTO for_init . PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement

    PUNTO_Y_COMA    shift and go to state 289


state 238

    (69) expression_list -> expression .
    (70) expression_list -> expression . COMA expression_list

    PUNTO_Y_COMA    reduce using rule 69 (expression_list -> expression .)
    PARENTESIS_CERRADO reduce using rule 69 (expression_list -> expression .)
    COMA            shift and go to state 290


state 239

    (66) for_init -> local_var_decl .

    PUNTO_Y_COMA    reduce using rule 66 (for_init -> local_var_decl .)


state 240

    (67) for_init -> expression_list .

    PUNTO_Y_COMA    reduce using rule 67 (for_init -> expression_list .)


state 241

    (54) statement -> SWITCH PARENTESIS_ABIERTO expression . PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA

    PARENTESIS_CERRADO shift and go to state 291


state 242

    (55) statement -> RETURN expression PUNTO_Y_COMA .

    WHILE           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    DO              reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    FOR             reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    SWITCH          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    BREAK           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    THROW           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    TRY             reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    ASSERT          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    IF              reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    ID              reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    INT             reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    SHORT           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    LONG            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    STRING          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    BYTE            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    SUMA            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    RESTA           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    UMAS            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    UMENOS          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    NOT             reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    THIS            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    SUPER           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    NEW             reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    TRUE            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    FALSE           reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    NULL            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    CASE            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)
    ELSE            reduce using rule 55 (statement -> RETURN expression PUNTO_Y_COMA .)


state 243

    (59) statement -> THROW expression PUNTO_Y_COMA .

    WHILE           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    DO              reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    FOR             reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    SWITCH          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    BREAK           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    THROW           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    TRY             reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    ASSERT          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    IF              reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    ID              reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    INT             reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    SHORT           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    LONG            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    STRING          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    BYTE            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    SUMA            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    RESTA           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    UMAS            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    UMENOS          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    NOT             reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    THIS            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    SUPER           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    NEW             reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    TRUE            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    FALSE           reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    NULL            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    CASE            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)
    ELSE            reduce using rule 59 (statement -> THROW expression PUNTO_Y_COMA .)


state 244

    (60) statement -> TRY block catches .
    (62) statement -> TRY block catches . FINALLY block

    WHILE           reduce using rule 60 (statement -> TRY block catches .)
    DO              reduce using rule 60 (statement -> TRY block catches .)
    FOR             reduce using rule 60 (statement -> TRY block catches .)
    SWITCH          reduce using rule 60 (statement -> TRY block catches .)
    RETURN          reduce using rule 60 (statement -> TRY block catches .)
    BREAK           reduce using rule 60 (statement -> TRY block catches .)
    CONTINUE        reduce using rule 60 (statement -> TRY block catches .)
    THROW           reduce using rule 60 (statement -> TRY block catches .)
    TRY             reduce using rule 60 (statement -> TRY block catches .)
    ASSERT          reduce using rule 60 (statement -> TRY block catches .)
    PUNTO_Y_COMA    reduce using rule 60 (statement -> TRY block catches .)
    IF              reduce using rule 60 (statement -> TRY block catches .)
    LLAVE_ABIERTA   reduce using rule 60 (statement -> TRY block catches .)
    ID              reduce using rule 60 (statement -> TRY block catches .)
    INT             reduce using rule 60 (statement -> TRY block catches .)
    FLOAT           reduce using rule 60 (statement -> TRY block catches .)
    DOUBLE          reduce using rule 60 (statement -> TRY block catches .)
    CHAR            reduce using rule 60 (statement -> TRY block catches .)
    BOOLEAN         reduce using rule 60 (statement -> TRY block catches .)
    SHORT           reduce using rule 60 (statement -> TRY block catches .)
    LONG            reduce using rule 60 (statement -> TRY block catches .)
    STRING          reduce using rule 60 (statement -> TRY block catches .)
    BYTE            reduce using rule 60 (statement -> TRY block catches .)
    INCREMENTO      reduce using rule 60 (statement -> TRY block catches .)
    DECREMENTO      reduce using rule 60 (statement -> TRY block catches .)
    SUMA            reduce using rule 60 (statement -> TRY block catches .)
    RESTA           reduce using rule 60 (statement -> TRY block catches .)
    UMAS            reduce using rule 60 (statement -> TRY block catches .)
    UMENOS          reduce using rule 60 (statement -> TRY block catches .)
    NOT             reduce using rule 60 (statement -> TRY block catches .)
    NOT_BIT         reduce using rule 60 (statement -> TRY block catches .)
    THIS            reduce using rule 60 (statement -> TRY block catches .)
    SUPER           reduce using rule 60 (statement -> TRY block catches .)
    PARENTESIS_ABIERTO reduce using rule 60 (statement -> TRY block catches .)
    NEW             reduce using rule 60 (statement -> TRY block catches .)
    NUMERO          reduce using rule 60 (statement -> TRY block catches .)
    CADENA          reduce using rule 60 (statement -> TRY block catches .)
    TRUE            reduce using rule 60 (statement -> TRY block catches .)
    FALSE           reduce using rule 60 (statement -> TRY block catches .)
    NULL            reduce using rule 60 (statement -> TRY block catches .)
    OCTAL_NUMERO    reduce using rule 60 (statement -> TRY block catches .)
    HEX_NUMERO      reduce using rule 60 (statement -> TRY block catches .)
    BINARIO_NUMERO  reduce using rule 60 (statement -> TRY block catches .)
    LLAVE_CERRADA   reduce using rule 60 (statement -> TRY block catches .)
    CASE            reduce using rule 60 (statement -> TRY block catches .)
    DEFAULT         reduce using rule 60 (statement -> TRY block catches .)
    ELSE            reduce using rule 60 (statement -> TRY block catches .)
    FINALLY         shift and go to state 292


state 245

    (75) catches -> catch . catches
    (76) catches -> catch .
    (75) catches -> . catch catches
    (76) catches -> . catch
    (77) catch -> . CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block

    FINALLY         reduce using rule 76 (catches -> catch .)
    WHILE           reduce using rule 76 (catches -> catch .)
    DO              reduce using rule 76 (catches -> catch .)
    FOR             reduce using rule 76 (catches -> catch .)
    SWITCH          reduce using rule 76 (catches -> catch .)
    RETURN          reduce using rule 76 (catches -> catch .)
    BREAK           reduce using rule 76 (catches -> catch .)
    CONTINUE        reduce using rule 76 (catches -> catch .)
    THROW           reduce using rule 76 (catches -> catch .)
    TRY             reduce using rule 76 (catches -> catch .)
    ASSERT          reduce using rule 76 (catches -> catch .)
    PUNTO_Y_COMA    reduce using rule 76 (catches -> catch .)
    IF              reduce using rule 76 (catches -> catch .)
    LLAVE_ABIERTA   reduce using rule 76 (catches -> catch .)
    ID              reduce using rule 76 (catches -> catch .)
    INT             reduce using rule 76 (catches -> catch .)
    FLOAT           reduce using rule 76 (catches -> catch .)
    DOUBLE          reduce using rule 76 (catches -> catch .)
    CHAR            reduce using rule 76 (catches -> catch .)
    BOOLEAN         reduce using rule 76 (catches -> catch .)
    SHORT           reduce using rule 76 (catches -> catch .)
    LONG            reduce using rule 76 (catches -> catch .)
    STRING          reduce using rule 76 (catches -> catch .)
    BYTE            reduce using rule 76 (catches -> catch .)
    INCREMENTO      reduce using rule 76 (catches -> catch .)
    DECREMENTO      reduce using rule 76 (catches -> catch .)
    SUMA            reduce using rule 76 (catches -> catch .)
    RESTA           reduce using rule 76 (catches -> catch .)
    UMAS            reduce using rule 76 (catches -> catch .)
    UMENOS          reduce using rule 76 (catches -> catch .)
    NOT             reduce using rule 76 (catches -> catch .)
    NOT_BIT         reduce using rule 76 (catches -> catch .)
    THIS            reduce using rule 76 (catches -> catch .)
    SUPER           reduce using rule 76 (catches -> catch .)
    PARENTESIS_ABIERTO reduce using rule 76 (catches -> catch .)
    NEW             reduce using rule 76 (catches -> catch .)
    NUMERO          reduce using rule 76 (catches -> catch .)
    CADENA          reduce using rule 76 (catches -> catch .)
    TRUE            reduce using rule 76 (catches -> catch .)
    FALSE           reduce using rule 76 (catches -> catch .)
    NULL            reduce using rule 76 (catches -> catch .)
    OCTAL_NUMERO    reduce using rule 76 (catches -> catch .)
    HEX_NUMERO      reduce using rule 76 (catches -> catch .)
    BINARIO_NUMERO  reduce using rule 76 (catches -> catch .)
    LLAVE_CERRADA   reduce using rule 76 (catches -> catch .)
    CASE            reduce using rule 76 (catches -> catch .)
    DEFAULT         reduce using rule 76 (catches -> catch .)
    ELSE            reduce using rule 76 (catches -> catch .)
    CATCH           shift and go to state 246

    catch                          shift and go to state 245
    catches                        shift and go to state 293

state 246

    (77) catch -> CATCH . PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block

    PARENTESIS_ABIERTO shift and go to state 294


state 247

    (61) statement -> ASSERT expression PUNTO_Y_COMA .

    WHILE           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    DO              reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    FOR             reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    SWITCH          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    BREAK           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    THROW           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    TRY             reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    ASSERT          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    IF              reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    ID              reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    INT             reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    SHORT           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    LONG            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    STRING          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    BYTE            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    SUMA            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    RESTA           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    UMAS            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    UMENOS          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    NOT             reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    THIS            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    SUPER           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    NEW             reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    TRUE            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    FALSE           reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    NULL            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    CASE            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)
    ELSE            reduce using rule 61 (statement -> ASSERT expression PUNTO_Y_COMA .)


state 248

    (146) statement -> IF PARENTESIS_ABIERTO expression . PARENTESIS_CERRADO statement
    (147) statement -> IF PARENTESIS_ABIERTO expression . PARENTESIS_CERRADO statement ELSE statement

    PARENTESIS_CERRADO shift and go to state 295


state 249

    (97) assignment_expression -> ID assignment_operator expression .

    PUNTO_Y_COMA    reduce using rule 97 (assignment_expression -> ID assignment_operator expression .)
    PARENTESIS_CERRADO reduce using rule 97 (assignment_expression -> ID assignment_operator expression .)
    COMA            reduce using rule 97 (assignment_expression -> ID assignment_operator expression .)
    DOSPUNTOS       reduce using rule 97 (assignment_expression -> ID assignment_operator expression .)
    CORCHETE_CERRADO reduce using rule 97 (assignment_expression -> ID assignment_operator expression .)


state 250

    (107) conditional_expression -> logical_or_expression TERNARIO expression . DOSPUNTOS conditional_expression

    DOSPUNTOS       shift and go to state 296


state 251

    (109) logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .
    (111) logical_and_expression -> logical_and_expression . AND_LOGICO inclusive_or_expression

    TERNARIO        reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    OR_LOGICO       reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    PUNTO_Y_COMA    reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    PARENTESIS_CERRADO reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    COMA            reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    DOSPUNTOS       reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    CORCHETE_CERRADO reduce using rule 109 (logical_or_expression -> logical_or_expression OR_LOGICO logical_and_expression .)
    AND_LOGICO      shift and go to state 188


state 252

    (111) logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .
    (113) inclusive_or_expression -> inclusive_or_expression . OR_BIT exclusive_or_expression

    AND_LOGICO      reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    TERNARIO        reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    OR_LOGICO       reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    PUNTO_Y_COMA    reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    PARENTESIS_CERRADO reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    COMA            reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    DOSPUNTOS       reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    CORCHETE_CERRADO reduce using rule 111 (logical_and_expression -> logical_and_expression AND_LOGICO inclusive_or_expression .)
    OR_BIT          shift and go to state 189


state 253

    (113) inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .
    (115) exclusive_or_expression -> exclusive_or_expression . XOR_BIT and_expression

    OR_BIT          reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    AND_LOGICO      reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    TERNARIO        reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    OR_LOGICO       reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    PUNTO_Y_COMA    reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    PARENTESIS_CERRADO reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    COMA            reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    DOSPUNTOS       reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    CORCHETE_CERRADO reduce using rule 113 (inclusive_or_expression -> inclusive_or_expression OR_BIT exclusive_or_expression .)
    XOR_BIT         shift and go to state 190


state 254

    (115) exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .
    (117) and_expression -> and_expression . AND_BIT equality_expression

    XOR_BIT         reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    OR_BIT          reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    AND_LOGICO      reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    TERNARIO        reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    OR_LOGICO       reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    PUNTO_Y_COMA    reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    PARENTESIS_CERRADO reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    COMA            reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    DOSPUNTOS       reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    CORCHETE_CERRADO reduce using rule 115 (exclusive_or_expression -> exclusive_or_expression XOR_BIT and_expression .)
    AND_BIT         shift and go to state 191


state 255

    (117) and_expression -> and_expression AND_BIT equality_expression .
    (119) equality_expression -> equality_expression . IGUAL relational_expression
    (120) equality_expression -> equality_expression . DISTINTO relational_expression

    AND_BIT         reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    XOR_BIT         reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    OR_BIT          reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    AND_LOGICO      reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    TERNARIO        reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    OR_LOGICO       reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    PUNTO_Y_COMA    reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    PARENTESIS_CERRADO reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    COMA            reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    DOSPUNTOS       reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    CORCHETE_CERRADO reduce using rule 117 (and_expression -> and_expression AND_BIT equality_expression .)
    IGUAL           shift and go to state 192
    DISTINTO        shift and go to state 193


state 256

    (119) equality_expression -> equality_expression IGUAL relational_expression .
    (122) relational_expression -> relational_expression . MENOR shift_expression
    (123) relational_expression -> relational_expression . MAYOR shift_expression
    (124) relational_expression -> relational_expression . MENOR_IGUAL shift_expression
    (125) relational_expression -> relational_expression . MAYOR_IGUAL shift_expression
    (126) relational_expression -> relational_expression . INSTANCEOF reference_type

    IGUAL           reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    DISTINTO        reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    AND_BIT         reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    XOR_BIT         reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    OR_BIT          reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    AND_LOGICO      reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    TERNARIO        reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    OR_LOGICO       reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    PUNTO_Y_COMA    reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    PARENTESIS_CERRADO reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    COMA            reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    DOSPUNTOS       reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    CORCHETE_CERRADO reduce using rule 119 (equality_expression -> equality_expression IGUAL relational_expression .)
    MENOR           shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR_IGUAL     shift and go to state 196
    MAYOR_IGUAL     shift and go to state 197
    INSTANCEOF      shift and go to state 198


state 257

    (120) equality_expression -> equality_expression DISTINTO relational_expression .
    (122) relational_expression -> relational_expression . MENOR shift_expression
    (123) relational_expression -> relational_expression . MAYOR shift_expression
    (124) relational_expression -> relational_expression . MENOR_IGUAL shift_expression
    (125) relational_expression -> relational_expression . MAYOR_IGUAL shift_expression
    (126) relational_expression -> relational_expression . INSTANCEOF reference_type

    IGUAL           reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    DISTINTO        reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    AND_BIT         reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    XOR_BIT         reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    OR_BIT          reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    AND_LOGICO      reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    TERNARIO        reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    OR_LOGICO       reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    PUNTO_Y_COMA    reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    PARENTESIS_CERRADO reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    COMA            reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    DOSPUNTOS       reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    CORCHETE_CERRADO reduce using rule 120 (equality_expression -> equality_expression DISTINTO relational_expression .)
    MENOR           shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR_IGUAL     shift and go to state 196
    MAYOR_IGUAL     shift and go to state 197
    INSTANCEOF      shift and go to state 198


state 258

    (122) relational_expression -> relational_expression MENOR shift_expression .
    (128) shift_expression -> shift_expression . DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> shift_expression . DESPLAZAMIENTO_DERECHO additive_expression

    MENOR           reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    MAYOR           reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    MENOR_IGUAL     reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    MAYOR_IGUAL     reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    INSTANCEOF      reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    IGUAL           reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    DISTINTO        reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    AND_BIT         reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    XOR_BIT         reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    OR_BIT          reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    AND_LOGICO      reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    TERNARIO        reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    OR_LOGICO       reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    PUNTO_Y_COMA    reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    PARENTESIS_CERRADO reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    COMA            reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    DOSPUNTOS       reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    CORCHETE_CERRADO reduce using rule 122 (relational_expression -> relational_expression MENOR shift_expression .)
    DESPLAZAMIENTO_IZQUIERDO shift and go to state 199
    DESPLAZAMIENTO_DERECHO shift and go to state 200


state 259

    (123) relational_expression -> relational_expression MAYOR shift_expression .
    (128) shift_expression -> shift_expression . DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> shift_expression . DESPLAZAMIENTO_DERECHO additive_expression

    MENOR           reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    MAYOR           reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    MENOR_IGUAL     reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    MAYOR_IGUAL     reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    INSTANCEOF      reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    IGUAL           reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    DISTINTO        reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    AND_BIT         reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    XOR_BIT         reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    OR_BIT          reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    AND_LOGICO      reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    TERNARIO        reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    OR_LOGICO       reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    PUNTO_Y_COMA    reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    PARENTESIS_CERRADO reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    COMA            reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    DOSPUNTOS       reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    CORCHETE_CERRADO reduce using rule 123 (relational_expression -> relational_expression MAYOR shift_expression .)
    DESPLAZAMIENTO_IZQUIERDO shift and go to state 199
    DESPLAZAMIENTO_DERECHO shift and go to state 200


state 260

    (124) relational_expression -> relational_expression MENOR_IGUAL shift_expression .
    (128) shift_expression -> shift_expression . DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> shift_expression . DESPLAZAMIENTO_DERECHO additive_expression

    MENOR           reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    MAYOR           reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    MENOR_IGUAL     reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    MAYOR_IGUAL     reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    INSTANCEOF      reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    IGUAL           reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    DISTINTO        reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    AND_BIT         reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    XOR_BIT         reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    OR_BIT          reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    AND_LOGICO      reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    TERNARIO        reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    OR_LOGICO       reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    PUNTO_Y_COMA    reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    PARENTESIS_CERRADO reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    COMA            reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    DOSPUNTOS       reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    CORCHETE_CERRADO reduce using rule 124 (relational_expression -> relational_expression MENOR_IGUAL shift_expression .)
    DESPLAZAMIENTO_IZQUIERDO shift and go to state 199
    DESPLAZAMIENTO_DERECHO shift and go to state 200


state 261

    (125) relational_expression -> relational_expression MAYOR_IGUAL shift_expression .
    (128) shift_expression -> shift_expression . DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> shift_expression . DESPLAZAMIENTO_DERECHO additive_expression

    MENOR           reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    MAYOR           reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    MENOR_IGUAL     reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    MAYOR_IGUAL     reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    INSTANCEOF      reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    IGUAL           reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    DISTINTO        reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    AND_BIT         reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    XOR_BIT         reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    OR_BIT          reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    AND_LOGICO      reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    TERNARIO        reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    OR_LOGICO       reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    PUNTO_Y_COMA    reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    PARENTESIS_CERRADO reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    COMA            reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    DOSPUNTOS       reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    CORCHETE_CERRADO reduce using rule 125 (relational_expression -> relational_expression MAYOR_IGUAL shift_expression .)
    DESPLAZAMIENTO_IZQUIERDO shift and go to state 199
    DESPLAZAMIENTO_DERECHO shift and go to state 200


state 262

    (126) relational_expression -> relational_expression INSTANCEOF reference_type .

    MENOR           reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    MAYOR           reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    MENOR_IGUAL     reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    MAYOR_IGUAL     reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    INSTANCEOF      reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    IGUAL           reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    DISTINTO        reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    AND_BIT         reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    XOR_BIT         reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    OR_BIT          reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    AND_LOGICO      reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    TERNARIO        reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    OR_LOGICO       reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    PUNTO_Y_COMA    reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    PARENTESIS_CERRADO reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    COMA            reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    DOSPUNTOS       reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)
    CORCHETE_CERRADO reduce using rule 126 (relational_expression -> relational_expression INSTANCEOF reference_type .)


state 263

    (128) shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .
    (131) additive_expression -> additive_expression . SUMA multiplicative_expression
    (132) additive_expression -> additive_expression . RESTA multiplicative_expression

    DESPLAZAMIENTO_IZQUIERDO reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    MENOR           reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    MAYOR           reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    MENOR_IGUAL     reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    MAYOR_IGUAL     reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    INSTANCEOF      reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    IGUAL           reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    DISTINTO        reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    AND_BIT         reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    XOR_BIT         reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    OR_BIT          reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    AND_LOGICO      reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    TERNARIO        reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    OR_LOGICO       reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    PUNTO_Y_COMA    reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    PARENTESIS_CERRADO reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    COMA            reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    DOSPUNTOS       reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    CORCHETE_CERRADO reduce using rule 128 (shift_expression -> shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression .)
    SUMA            shift and go to state 201
    RESTA           shift and go to state 202


state 264

    (129) shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .
    (131) additive_expression -> additive_expression . SUMA multiplicative_expression
    (132) additive_expression -> additive_expression . RESTA multiplicative_expression

    DESPLAZAMIENTO_IZQUIERDO reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    MENOR           reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    MAYOR           reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    MENOR_IGUAL     reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    MAYOR_IGUAL     reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    INSTANCEOF      reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    IGUAL           reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    DISTINTO        reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    AND_BIT         reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    XOR_BIT         reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    OR_BIT          reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    AND_LOGICO      reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    TERNARIO        reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    OR_LOGICO       reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    PUNTO_Y_COMA    reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    PARENTESIS_CERRADO reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    COMA            reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    DOSPUNTOS       reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    CORCHETE_CERRADO reduce using rule 129 (shift_expression -> shift_expression DESPLAZAMIENTO_DERECHO additive_expression .)
    SUMA            shift and go to state 201
    RESTA           shift and go to state 202


state 265

    (131) additive_expression -> additive_expression SUMA multiplicative_expression .
    (134) multiplicative_expression -> multiplicative_expression . MULTIPLICACION unary_expression
    (135) multiplicative_expression -> multiplicative_expression . DIVISION unary_expression
    (136) multiplicative_expression -> multiplicative_expression . MODULO unary_expression

    SUMA            reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    RESTA           reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    MENOR           reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    MAYOR           reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    MENOR_IGUAL     reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    MAYOR_IGUAL     reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    INSTANCEOF      reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    IGUAL           reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    DISTINTO        reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    AND_BIT         reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    XOR_BIT         reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    OR_BIT          reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    AND_LOGICO      reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    TERNARIO        reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    OR_LOGICO       reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    PUNTO_Y_COMA    reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    PARENTESIS_CERRADO reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    COMA            reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    DOSPUNTOS       reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    CORCHETE_CERRADO reduce using rule 131 (additive_expression -> additive_expression SUMA multiplicative_expression .)
    MULTIPLICACION  shift and go to state 203
    DIVISION        shift and go to state 204
    MODULO          shift and go to state 205


state 266

    (132) additive_expression -> additive_expression RESTA multiplicative_expression .
    (134) multiplicative_expression -> multiplicative_expression . MULTIPLICACION unary_expression
    (135) multiplicative_expression -> multiplicative_expression . DIVISION unary_expression
    (136) multiplicative_expression -> multiplicative_expression . MODULO unary_expression

    SUMA            reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    RESTA           reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    MENOR           reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    MAYOR           reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    MENOR_IGUAL     reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    MAYOR_IGUAL     reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    INSTANCEOF      reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    IGUAL           reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    DISTINTO        reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    AND_BIT         reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    XOR_BIT         reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    OR_BIT          reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    AND_LOGICO      reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    TERNARIO        reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    OR_LOGICO       reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    PUNTO_Y_COMA    reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    PARENTESIS_CERRADO reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    COMA            reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    DOSPUNTOS       reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    CORCHETE_CERRADO reduce using rule 132 (additive_expression -> additive_expression RESTA multiplicative_expression .)
    MULTIPLICACION  shift and go to state 203
    DIVISION        shift and go to state 204
    MODULO          shift and go to state 205


state 267

    (134) multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .

    MULTIPLICACION  reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    DIVISION        reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    MODULO          reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    SUMA            reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    RESTA           reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    MENOR           reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    MAYOR           reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    MENOR_IGUAL     reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    MAYOR_IGUAL     reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    INSTANCEOF      reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    IGUAL           reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    DISTINTO        reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    AND_BIT         reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    XOR_BIT         reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    OR_BIT          reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    AND_LOGICO      reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    TERNARIO        reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    OR_LOGICO       reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    PUNTO_Y_COMA    reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    PARENTESIS_CERRADO reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    COMA            reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    DOSPUNTOS       reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)
    CORCHETE_CERRADO reduce using rule 134 (multiplicative_expression -> multiplicative_expression MULTIPLICACION unary_expression .)


state 268

    (135) multiplicative_expression -> multiplicative_expression DIVISION unary_expression .

    MULTIPLICACION  reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    DIVISION        reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    MODULO          reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    SUMA            reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    RESTA           reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    MENOR           reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    MAYOR           reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    MENOR_IGUAL     reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    MAYOR_IGUAL     reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    INSTANCEOF      reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    IGUAL           reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    DISTINTO        reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    AND_BIT         reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    XOR_BIT         reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    OR_BIT          reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    AND_LOGICO      reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    TERNARIO        reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    OR_LOGICO       reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    PUNTO_Y_COMA    reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    PARENTESIS_CERRADO reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    COMA            reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    DOSPUNTOS       reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)
    CORCHETE_CERRADO reduce using rule 135 (multiplicative_expression -> multiplicative_expression DIVISION unary_expression .)


state 269

    (136) multiplicative_expression -> multiplicative_expression MODULO unary_expression .

    MULTIPLICACION  reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    DIVISION        reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    MODULO          reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    SUMA            reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    RESTA           reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    DESPLAZAMIENTO_DERECHO reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    MENOR           reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    MAYOR           reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    MENOR_IGUAL     reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    MAYOR_IGUAL     reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    INSTANCEOF      reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    IGUAL           reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    DISTINTO        reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    AND_BIT         reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    XOR_BIT         reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    OR_BIT          reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    AND_LOGICO      reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    TERNARIO        reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    OR_LOGICO       reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    PUNTO_Y_COMA    reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    PARENTESIS_CERRADO reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    COMA            reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    DOSPUNTOS       reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)
    CORCHETE_CERRADO reduce using rule 136 (multiplicative_expression -> multiplicative_expression MODULO unary_expression .)


state 270

    (151) postfix_expression -> postfix_expression PUNTO member_access .

    INCREMENTO      reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    DECREMENTO      reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    PUNTO           reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    CORCHETE_ABIERTO reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    MULTIPLICACION  reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    DIVISION        reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    MODULO          reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    SUMA            reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    RESTA           reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    DESPLAZAMIENTO_DERECHO reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    MENOR           reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    MAYOR           reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    MENOR_IGUAL     reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    MAYOR_IGUAL     reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    INSTANCEOF      reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    IGUAL           reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    DISTINTO        reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    AND_BIT         reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    XOR_BIT         reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    OR_BIT          reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    AND_LOGICO      reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    TERNARIO        reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    OR_LOGICO       reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    PUNTO_Y_COMA    reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    PARENTESIS_CERRADO reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    COMA            reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    DOSPUNTOS       reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)
    CORCHETE_CERRADO reduce using rule 151 (postfix_expression -> postfix_expression PUNTO member_access .)


state 271

    (153) member_access -> ID .
    (34) method_call -> ID . PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO

    INCREMENTO      reduce using rule 153 (member_access -> ID .)
    DECREMENTO      reduce using rule 153 (member_access -> ID .)
    PUNTO           reduce using rule 153 (member_access -> ID .)
    CORCHETE_ABIERTO reduce using rule 153 (member_access -> ID .)
    MULTIPLICACION  reduce using rule 153 (member_access -> ID .)
    DIVISION        reduce using rule 153 (member_access -> ID .)
    MODULO          reduce using rule 153 (member_access -> ID .)
    SUMA            reduce using rule 153 (member_access -> ID .)
    RESTA           reduce using rule 153 (member_access -> ID .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 153 (member_access -> ID .)
    DESPLAZAMIENTO_DERECHO reduce using rule 153 (member_access -> ID .)
    MENOR           reduce using rule 153 (member_access -> ID .)
    MAYOR           reduce using rule 153 (member_access -> ID .)
    MENOR_IGUAL     reduce using rule 153 (member_access -> ID .)
    MAYOR_IGUAL     reduce using rule 153 (member_access -> ID .)
    INSTANCEOF      reduce using rule 153 (member_access -> ID .)
    IGUAL           reduce using rule 153 (member_access -> ID .)
    DISTINTO        reduce using rule 153 (member_access -> ID .)
    AND_BIT         reduce using rule 153 (member_access -> ID .)
    XOR_BIT         reduce using rule 153 (member_access -> ID .)
    OR_BIT          reduce using rule 153 (member_access -> ID .)
    AND_LOGICO      reduce using rule 153 (member_access -> ID .)
    TERNARIO        reduce using rule 153 (member_access -> ID .)
    OR_LOGICO       reduce using rule 153 (member_access -> ID .)
    PUNTO_Y_COMA    reduce using rule 153 (member_access -> ID .)
    PARENTESIS_CERRADO reduce using rule 153 (member_access -> ID .)
    COMA            reduce using rule 153 (member_access -> ID .)
    DOSPUNTOS       reduce using rule 153 (member_access -> ID .)
    CORCHETE_CERRADO reduce using rule 153 (member_access -> ID .)
    PARENTESIS_ABIERTO shift and go to state 297


state 272

    (154) member_access -> THIS .
    (35) method_call -> THIS . PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO

    INCREMENTO      reduce using rule 154 (member_access -> THIS .)
    DECREMENTO      reduce using rule 154 (member_access -> THIS .)
    PUNTO           reduce using rule 154 (member_access -> THIS .)
    CORCHETE_ABIERTO reduce using rule 154 (member_access -> THIS .)
    MULTIPLICACION  reduce using rule 154 (member_access -> THIS .)
    DIVISION        reduce using rule 154 (member_access -> THIS .)
    MODULO          reduce using rule 154 (member_access -> THIS .)
    SUMA            reduce using rule 154 (member_access -> THIS .)
    RESTA           reduce using rule 154 (member_access -> THIS .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 154 (member_access -> THIS .)
    DESPLAZAMIENTO_DERECHO reduce using rule 154 (member_access -> THIS .)
    MENOR           reduce using rule 154 (member_access -> THIS .)
    MAYOR           reduce using rule 154 (member_access -> THIS .)
    MENOR_IGUAL     reduce using rule 154 (member_access -> THIS .)
    MAYOR_IGUAL     reduce using rule 154 (member_access -> THIS .)
    INSTANCEOF      reduce using rule 154 (member_access -> THIS .)
    IGUAL           reduce using rule 154 (member_access -> THIS .)
    DISTINTO        reduce using rule 154 (member_access -> THIS .)
    AND_BIT         reduce using rule 154 (member_access -> THIS .)
    XOR_BIT         reduce using rule 154 (member_access -> THIS .)
    OR_BIT          reduce using rule 154 (member_access -> THIS .)
    AND_LOGICO      reduce using rule 154 (member_access -> THIS .)
    TERNARIO        reduce using rule 154 (member_access -> THIS .)
    OR_LOGICO       reduce using rule 154 (member_access -> THIS .)
    PUNTO_Y_COMA    reduce using rule 154 (member_access -> THIS .)
    PARENTESIS_CERRADO reduce using rule 154 (member_access -> THIS .)
    COMA            reduce using rule 154 (member_access -> THIS .)
    DOSPUNTOS       reduce using rule 154 (member_access -> THIS .)
    CORCHETE_CERRADO reduce using rule 154 (member_access -> THIS .)
    PARENTESIS_ABIERTO shift and go to state 298


state 273

    (155) member_access -> SUPER .
    (36) method_call -> SUPER . PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO

    INCREMENTO      reduce using rule 155 (member_access -> SUPER .)
    DECREMENTO      reduce using rule 155 (member_access -> SUPER .)
    PUNTO           reduce using rule 155 (member_access -> SUPER .)
    CORCHETE_ABIERTO reduce using rule 155 (member_access -> SUPER .)
    MULTIPLICACION  reduce using rule 155 (member_access -> SUPER .)
    DIVISION        reduce using rule 155 (member_access -> SUPER .)
    MODULO          reduce using rule 155 (member_access -> SUPER .)
    SUMA            reduce using rule 155 (member_access -> SUPER .)
    RESTA           reduce using rule 155 (member_access -> SUPER .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 155 (member_access -> SUPER .)
    DESPLAZAMIENTO_DERECHO reduce using rule 155 (member_access -> SUPER .)
    MENOR           reduce using rule 155 (member_access -> SUPER .)
    MAYOR           reduce using rule 155 (member_access -> SUPER .)
    MENOR_IGUAL     reduce using rule 155 (member_access -> SUPER .)
    MAYOR_IGUAL     reduce using rule 155 (member_access -> SUPER .)
    INSTANCEOF      reduce using rule 155 (member_access -> SUPER .)
    IGUAL           reduce using rule 155 (member_access -> SUPER .)
    DISTINTO        reduce using rule 155 (member_access -> SUPER .)
    AND_BIT         reduce using rule 155 (member_access -> SUPER .)
    XOR_BIT         reduce using rule 155 (member_access -> SUPER .)
    OR_BIT          reduce using rule 155 (member_access -> SUPER .)
    AND_LOGICO      reduce using rule 155 (member_access -> SUPER .)
    TERNARIO        reduce using rule 155 (member_access -> SUPER .)
    OR_LOGICO       reduce using rule 155 (member_access -> SUPER .)
    PUNTO_Y_COMA    reduce using rule 155 (member_access -> SUPER .)
    PARENTESIS_CERRADO reduce using rule 155 (member_access -> SUPER .)
    COMA            reduce using rule 155 (member_access -> SUPER .)
    DOSPUNTOS       reduce using rule 155 (member_access -> SUPER .)
    CORCHETE_CERRADO reduce using rule 155 (member_access -> SUPER .)
    PARENTESIS_ABIERTO shift and go to state 299


state 274

    (156) member_access -> NEW . creator
    (37) method_call -> NEW . creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (172) creator -> . qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO
    (173) creator -> . qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (174) creator -> . qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO
    (175) creator -> . primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (176) creator -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE

    ID              shift and go to state 28
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70

    creator                        shift and go to state 300
    qualified_id                   shift and go to state 219
    primitive_type                 shift and go to state 220

state 275

    (157) member_access -> method_call .

    INCREMENTO      reduce using rule 157 (member_access -> method_call .)
    DECREMENTO      reduce using rule 157 (member_access -> method_call .)
    PUNTO           reduce using rule 157 (member_access -> method_call .)
    CORCHETE_ABIERTO reduce using rule 157 (member_access -> method_call .)
    MULTIPLICACION  reduce using rule 157 (member_access -> method_call .)
    DIVISION        reduce using rule 157 (member_access -> method_call .)
    MODULO          reduce using rule 157 (member_access -> method_call .)
    SUMA            reduce using rule 157 (member_access -> method_call .)
    RESTA           reduce using rule 157 (member_access -> method_call .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 157 (member_access -> method_call .)
    DESPLAZAMIENTO_DERECHO reduce using rule 157 (member_access -> method_call .)
    MENOR           reduce using rule 157 (member_access -> method_call .)
    MAYOR           reduce using rule 157 (member_access -> method_call .)
    MENOR_IGUAL     reduce using rule 157 (member_access -> method_call .)
    MAYOR_IGUAL     reduce using rule 157 (member_access -> method_call .)
    INSTANCEOF      reduce using rule 157 (member_access -> method_call .)
    IGUAL           reduce using rule 157 (member_access -> method_call .)
    DISTINTO        reduce using rule 157 (member_access -> method_call .)
    AND_BIT         reduce using rule 157 (member_access -> method_call .)
    XOR_BIT         reduce using rule 157 (member_access -> method_call .)
    OR_BIT          reduce using rule 157 (member_access -> method_call .)
    AND_LOGICO      reduce using rule 157 (member_access -> method_call .)
    TERNARIO        reduce using rule 157 (member_access -> method_call .)
    OR_LOGICO       reduce using rule 157 (member_access -> method_call .)
    PUNTO_Y_COMA    reduce using rule 157 (member_access -> method_call .)
    PARENTESIS_CERRADO reduce using rule 157 (member_access -> method_call .)
    COMA            reduce using rule 157 (member_access -> method_call .)
    DOSPUNTOS       reduce using rule 157 (member_access -> method_call .)
    CORCHETE_CERRADO reduce using rule 157 (member_access -> method_call .)


state 276

    (152) postfix_expression -> postfix_expression CORCHETE_ABIERTO expression . CORCHETE_CERRADO

    CORCHETE_CERRADO shift and go to state 301


state 277

    (172) creator -> qualified_id PARENTESIS_ABIERTO . arguments PARENTESIS_CERRADO
    (177) arguments -> . expression_list
    (178) arguments -> . empty
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (193) empty -> .
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    qualified_id                   shift and go to state 161
    arguments                      shift and go to state 302
    expression_list                shift and go to state 303
    empty                          shift and go to state 304
    expression                     shift and go to state 238
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 278

    (173) creator -> qualified_id CORCHETE_ABIERTO . expression CORCHETE_CERRADO
    (174) creator -> qualified_id CORCHETE_ABIERTO . CORCHETE_CERRADO
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    CORCHETE_CERRADO shift and go to state 306
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    qualified_id                   shift and go to state 161
    expression                     shift and go to state 305
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 279

    (175) creator -> primitive_type CORCHETE_ABIERTO . expression CORCHETE_CERRADO
    (176) creator -> primitive_type CORCHETE_ABIERTO . CORCHETE_CERRADO
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    CORCHETE_CERRADO shift and go to state 308
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 307
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 280

    (93) qualified_id_list -> qualified_id COMA qualified_id_list .

    LLAVE_ABIERTA   reduce using rule 93 (qualified_id_list -> qualified_id COMA qualified_id_list .)


state 281

    (30) method_header -> modifiers type ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO .

    LLAVE_ABIERTA   reduce using rule 30 (method_header -> modifiers type ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO .)


state 282

    (45) constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .

    CLASS           reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    PUBLIC          reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    PRIVATE         reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    PROTECTED       reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    STATIC          reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    FINAL           reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    ABSTRACT        reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    NATIVE          reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    SYNCHRONIZED    reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    VOLATILE        reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    EXPORT          reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    INTERFACE       reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    TRANSIENT       reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)
    LLAVE_CERRADA   reduce using rule 45 (constructor_decl -> modifiers ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO block .)


state 283

    (38) formal_params -> formal_param COMA formal_params .

    PARENTESIS_CERRADO reduce using rule 38 (formal_params -> formal_param COMA formal_params .)


state 284

    (43) array_type -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .

    ID              reduce using rule 43 (array_type -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)


state 285

    (44) array_type -> reference_type CORCHETE_ABIERTO CORCHETE_CERRADO .

    ID              reduce using rule 44 (array_type -> reference_type CORCHETE_ABIERTO CORCHETE_CERRADO .)


state 286

    (31) method_header -> modifiers VOID ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO .

    LLAVE_ABIERTA   reduce using rule 31 (method_header -> modifiers VOID ID PARENTESIS_ABIERTO formal_params PARENTESIS_CERRADO .)


state 287

    (51) statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO . statement
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 91
    statement                      shift and go to state 309
    block                          shift and go to state 88
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 288

    (52) statement -> DO statement WHILE PARENTESIS_ABIERTO . expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 310
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 289

    (53) statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA . expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 311
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 290

    (70) expression_list -> expression COMA . expression_list
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 238
    expression_list                shift and go to state 312
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 291

    (54) statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO . LLAVE_ABIERTA switch_cases LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 313


state 292

    (62) statement -> TRY block catches FINALLY . block
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 73

    block                          shift and go to state 314

state 293

    (75) catches -> catch catches .

    FINALLY         reduce using rule 75 (catches -> catch catches .)
    WHILE           reduce using rule 75 (catches -> catch catches .)
    DO              reduce using rule 75 (catches -> catch catches .)
    FOR             reduce using rule 75 (catches -> catch catches .)
    SWITCH          reduce using rule 75 (catches -> catch catches .)
    RETURN          reduce using rule 75 (catches -> catch catches .)
    BREAK           reduce using rule 75 (catches -> catch catches .)
    CONTINUE        reduce using rule 75 (catches -> catch catches .)
    THROW           reduce using rule 75 (catches -> catch catches .)
    TRY             reduce using rule 75 (catches -> catch catches .)
    ASSERT          reduce using rule 75 (catches -> catch catches .)
    PUNTO_Y_COMA    reduce using rule 75 (catches -> catch catches .)
    IF              reduce using rule 75 (catches -> catch catches .)
    LLAVE_ABIERTA   reduce using rule 75 (catches -> catch catches .)
    ID              reduce using rule 75 (catches -> catch catches .)
    INT             reduce using rule 75 (catches -> catch catches .)
    FLOAT           reduce using rule 75 (catches -> catch catches .)
    DOUBLE          reduce using rule 75 (catches -> catch catches .)
    CHAR            reduce using rule 75 (catches -> catch catches .)
    BOOLEAN         reduce using rule 75 (catches -> catch catches .)
    SHORT           reduce using rule 75 (catches -> catch catches .)
    LONG            reduce using rule 75 (catches -> catch catches .)
    STRING          reduce using rule 75 (catches -> catch catches .)
    BYTE            reduce using rule 75 (catches -> catch catches .)
    INCREMENTO      reduce using rule 75 (catches -> catch catches .)
    DECREMENTO      reduce using rule 75 (catches -> catch catches .)
    SUMA            reduce using rule 75 (catches -> catch catches .)
    RESTA           reduce using rule 75 (catches -> catch catches .)
    UMAS            reduce using rule 75 (catches -> catch catches .)
    UMENOS          reduce using rule 75 (catches -> catch catches .)
    NOT             reduce using rule 75 (catches -> catch catches .)
    NOT_BIT         reduce using rule 75 (catches -> catch catches .)
    THIS            reduce using rule 75 (catches -> catch catches .)
    SUPER           reduce using rule 75 (catches -> catch catches .)
    PARENTESIS_ABIERTO reduce using rule 75 (catches -> catch catches .)
    NEW             reduce using rule 75 (catches -> catch catches .)
    NUMERO          reduce using rule 75 (catches -> catch catches .)
    CADENA          reduce using rule 75 (catches -> catch catches .)
    TRUE            reduce using rule 75 (catches -> catch catches .)
    FALSE           reduce using rule 75 (catches -> catch catches .)
    NULL            reduce using rule 75 (catches -> catch catches .)
    OCTAL_NUMERO    reduce using rule 75 (catches -> catch catches .)
    HEX_NUMERO      reduce using rule 75 (catches -> catch catches .)
    BINARIO_NUMERO  reduce using rule 75 (catches -> catch catches .)
    LLAVE_CERRADA   reduce using rule 75 (catches -> catch catches .)
    CASE            reduce using rule 75 (catches -> catch catches .)
    DEFAULT         reduce using rule 75 (catches -> catch catches .)
    ELSE            reduce using rule 75 (catches -> catch catches .)


state 294

    (77) catch -> CATCH PARENTESIS_ABIERTO . formal_param PARENTESIS_CERRADO block
    (41) formal_param -> . type ID
    (42) formal_param -> . array_type ID
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (43) array_type -> . primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (44) array_type -> . reference_type CORCHETE_ABIERTO CORCHETE_CERRADO
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    ID              shift and go to state 28

    formal_param                   shift and go to state 315
    type                           shift and go to state 152
    array_type                     shift and go to state 153
    primitive_type                 shift and go to state 154
    reference_type                 shift and go to state 155
    qualified_id                   shift and go to state 71

state 295

    (146) statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO . statement
    (147) statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO . statement ELSE statement
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 91
    statement                      shift and go to state 316
    block                          shift and go to state 88
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 296

    (107) conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS . conditional_expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141
    ID              shift and go to state 28

    logical_or_expression          shift and go to state 108
    conditional_expression         shift and go to state 317
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 297

    (34) method_call -> ID PARENTESIS_ABIERTO . arguments PARENTESIS_CERRADO
    (177) arguments -> . expression_list
    (178) arguments -> . empty
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (193) empty -> .
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    arguments                      shift and go to state 318
    expression_list                shift and go to state 303
    empty                          shift and go to state 304
    expression                     shift and go to state 238
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 298

    (35) method_call -> THIS PARENTESIS_ABIERTO . arguments PARENTESIS_CERRADO
    (177) arguments -> . expression_list
    (178) arguments -> . empty
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (193) empty -> .
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    arguments                      shift and go to state 319
    expression_list                shift and go to state 303
    empty                          shift and go to state 304
    expression                     shift and go to state 238
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 299

    (36) method_call -> SUPER PARENTESIS_ABIERTO . arguments PARENTESIS_CERRADO
    (177) arguments -> . expression_list
    (178) arguments -> . empty
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (193) empty -> .
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    arguments                      shift and go to state 320
    expression_list                shift and go to state 303
    empty                          shift and go to state 304
    expression                     shift and go to state 238
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 300

    (156) member_access -> NEW creator .
    (37) method_call -> NEW creator . PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO

    INCREMENTO      reduce using rule 156 (member_access -> NEW creator .)
    DECREMENTO      reduce using rule 156 (member_access -> NEW creator .)
    PUNTO           reduce using rule 156 (member_access -> NEW creator .)
    CORCHETE_ABIERTO reduce using rule 156 (member_access -> NEW creator .)
    MULTIPLICACION  reduce using rule 156 (member_access -> NEW creator .)
    DIVISION        reduce using rule 156 (member_access -> NEW creator .)
    MODULO          reduce using rule 156 (member_access -> NEW creator .)
    SUMA            reduce using rule 156 (member_access -> NEW creator .)
    RESTA           reduce using rule 156 (member_access -> NEW creator .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 156 (member_access -> NEW creator .)
    DESPLAZAMIENTO_DERECHO reduce using rule 156 (member_access -> NEW creator .)
    MENOR           reduce using rule 156 (member_access -> NEW creator .)
    MAYOR           reduce using rule 156 (member_access -> NEW creator .)
    MENOR_IGUAL     reduce using rule 156 (member_access -> NEW creator .)
    MAYOR_IGUAL     reduce using rule 156 (member_access -> NEW creator .)
    INSTANCEOF      reduce using rule 156 (member_access -> NEW creator .)
    IGUAL           reduce using rule 156 (member_access -> NEW creator .)
    DISTINTO        reduce using rule 156 (member_access -> NEW creator .)
    AND_BIT         reduce using rule 156 (member_access -> NEW creator .)
    XOR_BIT         reduce using rule 156 (member_access -> NEW creator .)
    OR_BIT          reduce using rule 156 (member_access -> NEW creator .)
    AND_LOGICO      reduce using rule 156 (member_access -> NEW creator .)
    TERNARIO        reduce using rule 156 (member_access -> NEW creator .)
    OR_LOGICO       reduce using rule 156 (member_access -> NEW creator .)
    PUNTO_Y_COMA    reduce using rule 156 (member_access -> NEW creator .)
    PARENTESIS_CERRADO reduce using rule 156 (member_access -> NEW creator .)
    COMA            reduce using rule 156 (member_access -> NEW creator .)
    DOSPUNTOS       reduce using rule 156 (member_access -> NEW creator .)
    CORCHETE_CERRADO reduce using rule 156 (member_access -> NEW creator .)
    PARENTESIS_ABIERTO shift and go to state 321


state 301

    (152) postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .

    INCREMENTO      reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DECREMENTO      reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PUNTO           reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MULTIPLICACION  reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DIVISION        reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MODULO          reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    SUMA            reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    RESTA           reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MENOR           reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MAYOR           reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MENOR_IGUAL     reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MAYOR_IGUAL     reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    INSTANCEOF      reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    IGUAL           reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DISTINTO        reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    AND_BIT         reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    XOR_BIT         reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    OR_BIT          reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    AND_LOGICO      reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    TERNARIO        reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    OR_LOGICO       reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    COMA            reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DOSPUNTOS       reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    CORCHETE_CERRADO reduce using rule 152 (postfix_expression -> postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO .)


state 302

    (172) creator -> qualified_id PARENTESIS_ABIERTO arguments . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 322


state 303

    (177) arguments -> expression_list .

    PARENTESIS_CERRADO reduce using rule 177 (arguments -> expression_list .)


state 304

    (178) arguments -> empty .

    PARENTESIS_CERRADO reduce using rule 178 (arguments -> empty .)


state 305

    (173) creator -> qualified_id CORCHETE_ABIERTO expression . CORCHETE_CERRADO

    CORCHETE_CERRADO shift and go to state 323


state 306

    (174) creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .

    INCREMENTO      reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DECREMENTO      reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PUNTO           reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MULTIPLICACION  reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DIVISION        reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MODULO          reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    SUMA            reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    RESTA           reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MENOR           reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MAYOR           reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MENOR_IGUAL     reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MAYOR_IGUAL     reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    INSTANCEOF      reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    IGUAL           reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DISTINTO        reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    AND_BIT         reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    XOR_BIT         reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    OR_BIT          reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    AND_LOGICO      reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    TERNARIO        reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    OR_LOGICO       reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    COMA            reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DOSPUNTOS       reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    CORCHETE_CERRADO reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PARENTESIS_ABIERTO reduce using rule 174 (creator -> qualified_id CORCHETE_ABIERTO CORCHETE_CERRADO .)


state 307

    (175) creator -> primitive_type CORCHETE_ABIERTO expression . CORCHETE_CERRADO

    CORCHETE_CERRADO shift and go to state 324


state 308

    (176) creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .

    INCREMENTO      reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DECREMENTO      reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PUNTO           reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MULTIPLICACION  reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DIVISION        reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MODULO          reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    SUMA            reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    RESTA           reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MENOR           reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MAYOR           reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MENOR_IGUAL     reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    MAYOR_IGUAL     reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    INSTANCEOF      reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    IGUAL           reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DISTINTO        reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    AND_BIT         reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    XOR_BIT         reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    OR_BIT          reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    AND_LOGICO      reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    TERNARIO        reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    OR_LOGICO       reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    COMA            reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    DOSPUNTOS       reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    CORCHETE_CERRADO reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)
    PARENTESIS_ABIERTO reduce using rule 176 (creator -> primitive_type CORCHETE_ABIERTO CORCHETE_CERRADO .)


state 309

    (51) statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .

    WHILE           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DO              reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    FOR             reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SWITCH          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    RETURN          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BREAK           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CONTINUE        reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    THROW           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    TRY             reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    ASSERT          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    PUNTO_Y_COMA    reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    IF              reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    LLAVE_ABIERTA   reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    ID              reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    INT             reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    FLOAT           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DOUBLE          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CHAR            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BOOLEAN         reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SHORT           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    LONG            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    STRING          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BYTE            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    INCREMENTO      reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DECREMENTO      reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SUMA            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    RESTA           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    UMAS            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    UMENOS          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NOT             reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NOT_BIT         reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    THIS            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SUPER           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    PARENTESIS_ABIERTO reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NEW             reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NUMERO          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CADENA          reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    TRUE            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    FALSE           reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NULL            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    OCTAL_NUMERO    reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    HEX_NUMERO      reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BINARIO_NUMERO  reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    LLAVE_CERRADA   reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CASE            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DEFAULT         reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    ELSE            reduce using rule 51 (statement -> WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)


state 310

    (52) statement -> DO statement WHILE PARENTESIS_ABIERTO expression . PARENTESIS_CERRADO PUNTO_Y_COMA

    PARENTESIS_CERRADO shift and go to state 325


state 311

    (53) statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression . PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement

    PUNTO_Y_COMA    shift and go to state 326


state 312

    (70) expression_list -> expression COMA expression_list .

    PUNTO_Y_COMA    reduce using rule 70 (expression_list -> expression COMA expression_list .)
    PARENTESIS_CERRADO reduce using rule 70 (expression_list -> expression COMA expression_list .)


state 313

    (54) statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA . switch_cases LLAVE_CERRADA
    (71) switch_cases -> . switch_case switch_cases
    (72) switch_cases -> . switch_case
    (73) switch_case -> . CASE expression DOSPUNTOS statements
    (74) switch_case -> . DEFAULT DOSPUNTOS statements

    CASE            shift and go to state 329
    DEFAULT         shift and go to state 330

    switch_cases                   shift and go to state 327
    switch_case                    shift and go to state 328

state 314

    (62) statement -> TRY block catches FINALLY block .

    WHILE           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    DO              reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    FOR             reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    SWITCH          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    RETURN          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    BREAK           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    CONTINUE        reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    THROW           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    TRY             reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    ASSERT          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    PUNTO_Y_COMA    reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    IF              reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    LLAVE_ABIERTA   reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    ID              reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    INT             reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    FLOAT           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    DOUBLE          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    CHAR            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    BOOLEAN         reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    SHORT           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    LONG            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    STRING          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    BYTE            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    INCREMENTO      reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    DECREMENTO      reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    SUMA            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    RESTA           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    UMAS            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    UMENOS          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    NOT             reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    NOT_BIT         reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    THIS            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    SUPER           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    PARENTESIS_ABIERTO reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    NEW             reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    NUMERO          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    CADENA          reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    TRUE            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    FALSE           reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    NULL            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    OCTAL_NUMERO    reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    HEX_NUMERO      reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    BINARIO_NUMERO  reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    LLAVE_CERRADA   reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    CASE            reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    DEFAULT         reduce using rule 62 (statement -> TRY block catches FINALLY block .)
    ELSE            reduce using rule 62 (statement -> TRY block catches FINALLY block .)


state 315

    (77) catch -> CATCH PARENTESIS_ABIERTO formal_param . PARENTESIS_CERRADO block

    PARENTESIS_CERRADO shift and go to state 331


state 316

    (146) statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .
    (147) statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement . ELSE statement

    WHILE           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DO              reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    FOR             reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SWITCH          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    RETURN          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BREAK           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CONTINUE        reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    THROW           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    TRY             reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    ASSERT          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    PUNTO_Y_COMA    reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    IF              reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    LLAVE_ABIERTA   reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    ID              reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    INT             reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    FLOAT           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DOUBLE          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CHAR            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BOOLEAN         reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SHORT           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    LONG            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    STRING          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BYTE            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    INCREMENTO      reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DECREMENTO      reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SUMA            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    RESTA           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    UMAS            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    UMENOS          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NOT             reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NOT_BIT         reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    THIS            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    SUPER           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    PARENTESIS_ABIERTO reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NEW             reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NUMERO          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CADENA          reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    TRUE            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    FALSE           reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    NULL            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    OCTAL_NUMERO    reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    HEX_NUMERO      reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    BINARIO_NUMERO  reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    LLAVE_CERRADA   reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    CASE            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    DEFAULT         reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)
    ELSE            reduce using rule 146 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement .)

  ! ELSE            [ shift and go to state 332 ]


state 317

    (107) conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression .

    PUNTO_Y_COMA    reduce using rule 107 (conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression .)
    PARENTESIS_CERRADO reduce using rule 107 (conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression .)
    COMA            reduce using rule 107 (conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression .)
    DOSPUNTOS       reduce using rule 107 (conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression .)
    CORCHETE_CERRADO reduce using rule 107 (conditional_expression -> logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression .)


state 318

    (34) method_call -> ID PARENTESIS_ABIERTO arguments . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 333


state 319

    (35) method_call -> THIS PARENTESIS_ABIERTO arguments . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 334


state 320

    (36) method_call -> SUPER PARENTESIS_ABIERTO arguments . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 335


state 321

    (37) method_call -> NEW creator PARENTESIS_ABIERTO . arguments PARENTESIS_CERRADO
    (177) arguments -> . expression_list
    (178) arguments -> . empty
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (193) empty -> .
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    PARENTESIS_CERRADO reduce using rule 193 (empty -> .)
    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    arguments                      shift and go to state 336
    expression_list                shift and go to state 303
    empty                          shift and go to state 304
    expression                     shift and go to state 238
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 322

    (172) creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .

    INCREMENTO      reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DECREMENTO      reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO           reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MULTIPLICACION  reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DIVISION        reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MODULO          reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    SUMA            reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    RESTA           reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR           reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR           reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR_IGUAL     reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR_IGUAL     reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    INSTANCEOF      reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    IGUAL           reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DISTINTO        reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_BIT         reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    XOR_BIT         reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_BIT          reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_LOGICO      reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    TERNARIO        reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_LOGICO       reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    COMA            reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DOSPUNTOS       reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_CERRADO reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PARENTESIS_ABIERTO reduce using rule 172 (creator -> qualified_id PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)


state 323

    (173) creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .

    INCREMENTO      reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DECREMENTO      reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PUNTO           reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MULTIPLICACION  reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DIVISION        reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MODULO          reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    SUMA            reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    RESTA           reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MENOR           reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MAYOR           reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MENOR_IGUAL     reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MAYOR_IGUAL     reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    INSTANCEOF      reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    IGUAL           reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DISTINTO        reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    AND_BIT         reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    XOR_BIT         reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    OR_BIT          reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    AND_LOGICO      reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    TERNARIO        reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    OR_LOGICO       reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    COMA            reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DOSPUNTOS       reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    CORCHETE_CERRADO reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PARENTESIS_ABIERTO reduce using rule 173 (creator -> qualified_id CORCHETE_ABIERTO expression CORCHETE_CERRADO .)


state 324

    (175) creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .

    INCREMENTO      reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DECREMENTO      reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PUNTO           reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MULTIPLICACION  reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DIVISION        reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MODULO          reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    SUMA            reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    RESTA           reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MENOR           reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MAYOR           reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MENOR_IGUAL     reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    MAYOR_IGUAL     reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    INSTANCEOF      reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    IGUAL           reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DISTINTO        reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    AND_BIT         reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    XOR_BIT         reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    OR_BIT          reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    AND_LOGICO      reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    TERNARIO        reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    OR_LOGICO       reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    COMA            reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    DOSPUNTOS       reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    CORCHETE_CERRADO reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)
    PARENTESIS_ABIERTO reduce using rule 175 (creator -> primitive_type CORCHETE_ABIERTO expression CORCHETE_CERRADO .)


state 325

    (52) statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 337


state 326

    (53) statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA . for_update PARENTESIS_CERRADO statement
    (68) for_update -> . expression_list
    (69) expression_list -> . expression
    (70) expression_list -> . expression COMA expression_list
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 238
    for_update                     shift and go to state 338
    expression_list                shift and go to state 339
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 327

    (54) statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases . LLAVE_CERRADA

    LLAVE_CERRADA   shift and go to state 340


state 328

    (71) switch_cases -> switch_case . switch_cases
    (72) switch_cases -> switch_case .
    (71) switch_cases -> . switch_case switch_cases
    (72) switch_cases -> . switch_case
    (73) switch_case -> . CASE expression DOSPUNTOS statements
    (74) switch_case -> . DEFAULT DOSPUNTOS statements

    LLAVE_CERRADA   reduce using rule 72 (switch_cases -> switch_case .)
    CASE            shift and go to state 329
    DEFAULT         shift and go to state 330

    switch_case                    shift and go to state 328
    switch_cases                   shift and go to state 341

state 329

    (73) switch_case -> CASE . expression DOSPUNTOS statements
    (95) expression -> . assignment_expression
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID

    ID              shift and go to state 107
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 342
    assignment_expression          shift and go to state 104
    conditional_expression         shift and go to state 106
    logical_or_expression          shift and go to state 108
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130
    qualified_id                   shift and go to state 161

state 330

    (74) switch_case -> DEFAULT . DOSPUNTOS statements

    DOSPUNTOS       shift and go to state 343


state 331

    (77) catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO . block
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 73

    block                          shift and go to state 344

state 332

    (147) statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE . statement
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 91
    statement                      shift and go to state 345
    block                          shift and go to state 88
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 333

    (34) method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .

    INCREMENTO      reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DECREMENTO      reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO           reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MULTIPLICACION  reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DIVISION        reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MODULO          reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    SUMA            reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    RESTA           reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR           reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR           reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR_IGUAL     reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR_IGUAL     reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    INSTANCEOF      reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    IGUAL           reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DISTINTO        reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_BIT         reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    XOR_BIT         reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_BIT          reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_LOGICO      reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    TERNARIO        reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_LOGICO       reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    COMA            reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DOSPUNTOS       reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_CERRADO reduce using rule 34 (method_call -> ID PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)


state 334

    (35) method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .

    INCREMENTO      reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DECREMENTO      reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO           reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MULTIPLICACION  reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DIVISION        reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MODULO          reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    SUMA            reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    RESTA           reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR           reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR           reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR_IGUAL     reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR_IGUAL     reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    INSTANCEOF      reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    IGUAL           reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DISTINTO        reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_BIT         reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    XOR_BIT         reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_BIT          reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_LOGICO      reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    TERNARIO        reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_LOGICO       reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    COMA            reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DOSPUNTOS       reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_CERRADO reduce using rule 35 (method_call -> THIS PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)


state 335

    (36) method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .

    INCREMENTO      reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DECREMENTO      reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO           reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MULTIPLICACION  reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DIVISION        reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MODULO          reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    SUMA            reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    RESTA           reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR           reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR           reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR_IGUAL     reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR_IGUAL     reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    INSTANCEOF      reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    IGUAL           reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DISTINTO        reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_BIT         reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    XOR_BIT         reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_BIT          reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_LOGICO      reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    TERNARIO        reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_LOGICO       reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    COMA            reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DOSPUNTOS       reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_CERRADO reduce using rule 36 (method_call -> SUPER PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)


state 336

    (37) method_call -> NEW creator PARENTESIS_ABIERTO arguments . PARENTESIS_CERRADO

    PARENTESIS_CERRADO shift and go to state 346


state 337

    (52) statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .

    WHILE           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    DO              reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    FOR             reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    SWITCH          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    RETURN          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    BREAK           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    CONTINUE        reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    THROW           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    TRY             reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    ASSERT          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    PUNTO_Y_COMA    reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    IF              reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    LLAVE_ABIERTA   reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    ID              reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    INT             reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    FLOAT           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    CHAR            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    SHORT           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    LONG            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    STRING          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    BYTE            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    INCREMENTO      reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    DECREMENTO      reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    SUMA            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    RESTA           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    UMAS            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    UMENOS          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    NOT             reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    NOT_BIT         reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    THIS            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    SUPER           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    PARENTESIS_ABIERTO reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    NEW             reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    NUMERO          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    CADENA          reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    TRUE            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    FALSE           reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    NULL            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    OCTAL_NUMERO    reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    HEX_NUMERO      reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    BINARIO_NUMERO  reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    LLAVE_CERRADA   reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    CASE            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    DEFAULT         reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)
    ELSE            reduce using rule 52 (statement -> DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA .)


state 338

    (53) statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update . PARENTESIS_CERRADO statement

    PARENTESIS_CERRADO shift and go to state 347


state 339

    (68) for_update -> expression_list .

    PARENTESIS_CERRADO reduce using rule 68 (for_update -> expression_list .)


state 340

    (54) statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .

    WHILE           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    DO              reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    FOR             reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    SWITCH          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    RETURN          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    BREAK           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    CONTINUE        reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    THROW           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    TRY             reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    ASSERT          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    PUNTO_Y_COMA    reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    IF              reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    LLAVE_ABIERTA   reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    ID              reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    INT             reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    FLOAT           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    DOUBLE          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    CHAR            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    BOOLEAN         reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    SHORT           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    LONG            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    STRING          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    BYTE            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    INCREMENTO      reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    DECREMENTO      reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    SUMA            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    RESTA           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    UMAS            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    UMENOS          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    NOT             reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    NOT_BIT         reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    THIS            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    SUPER           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    PARENTESIS_ABIERTO reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    NEW             reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    NUMERO          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    CADENA          reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    TRUE            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    FALSE           reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    NULL            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    OCTAL_NUMERO    reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    HEX_NUMERO      reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    BINARIO_NUMERO  reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    LLAVE_CERRADA   reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    CASE            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    DEFAULT         reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)
    ELSE            reduce using rule 54 (statement -> SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA .)


state 341

    (71) switch_cases -> switch_case switch_cases .

    LLAVE_CERRADA   reduce using rule 71 (switch_cases -> switch_case switch_cases .)


state 342

    (73) switch_case -> CASE expression . DOSPUNTOS statements

    DOSPUNTOS       shift and go to state 348


state 343

    (74) switch_case -> DEFAULT DOSPUNTOS . statements
    (48) statements -> . statement statements
    (49) statements -> . empty
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (193) empty -> .
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    CASE            reduce using rule 193 (empty -> .)
    DEFAULT         reduce using rule 193 (empty -> .)
    LLAVE_CERRADA   reduce using rule 193 (empty -> .)
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    statements                     shift and go to state 349
    statement                      shift and go to state 86
    empty                          shift and go to state 87
    block                          shift and go to state 88
    expression                     shift and go to state 91
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 344

    (77) catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .

    CATCH           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    FINALLY         reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    WHILE           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    DO              reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    FOR             reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    SWITCH          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    RETURN          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    BREAK           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    CONTINUE        reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    THROW           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    TRY             reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    ASSERT          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    PUNTO_Y_COMA    reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    IF              reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    LLAVE_ABIERTA   reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    ID              reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    INT             reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    FLOAT           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    DOUBLE          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    CHAR            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    BOOLEAN         reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    SHORT           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    LONG            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    STRING          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    BYTE            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    INCREMENTO      reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    DECREMENTO      reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    SUMA            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    RESTA           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    UMAS            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    UMENOS          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    NOT             reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    NOT_BIT         reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    THIS            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    SUPER           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    PARENTESIS_ABIERTO reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    NEW             reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    NUMERO          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    CADENA          reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    TRUE            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    FALSE           reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    NULL            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    OCTAL_NUMERO    reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    HEX_NUMERO      reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    BINARIO_NUMERO  reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    LLAVE_CERRADA   reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    CASE            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    DEFAULT         reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)
    ELSE            reduce using rule 77 (catch -> CATCH PARENTESIS_ABIERTO formal_param PARENTESIS_CERRADO block .)


state 345

    (147) statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .

    WHILE           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    DO              reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    FOR             reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    SWITCH          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    RETURN          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    BREAK           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    CONTINUE        reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    THROW           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    TRY             reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    ASSERT          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    PUNTO_Y_COMA    reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    IF              reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    LLAVE_ABIERTA   reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    ID              reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    INT             reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    FLOAT           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    DOUBLE          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    CHAR            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    BOOLEAN         reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    SHORT           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    LONG            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    STRING          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    BYTE            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    INCREMENTO      reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    DECREMENTO      reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    SUMA            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    RESTA           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    UMAS            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    UMENOS          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    NOT             reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    NOT_BIT         reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    THIS            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    SUPER           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    PARENTESIS_ABIERTO reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    NEW             reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    NUMERO          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    CADENA          reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    TRUE            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    FALSE           reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    NULL            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    OCTAL_NUMERO    reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    HEX_NUMERO      reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    BINARIO_NUMERO  reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    LLAVE_CERRADA   reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    CASE            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    DEFAULT         reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)
    ELSE            reduce using rule 147 (statement -> IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement .)


state 346

    (37) method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .

    INCREMENTO      reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DECREMENTO      reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO           reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_ABIERTO reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MULTIPLICACION  reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DIVISION        reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MODULO          reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    SUMA            reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    RESTA           reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_IZQUIERDO reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DESPLAZAMIENTO_DERECHO reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR           reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR           reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MENOR_IGUAL     reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    MAYOR_IGUAL     reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    INSTANCEOF      reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    IGUAL           reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DISTINTO        reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_BIT         reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    XOR_BIT         reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_BIT          reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    AND_LOGICO      reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    TERNARIO        reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    OR_LOGICO       reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PUNTO_Y_COMA    reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    PARENTESIS_CERRADO reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    COMA            reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    DOSPUNTOS       reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)
    CORCHETE_CERRADO reduce using rule 37 (method_call -> NEW creator PARENTESIS_ABIERTO arguments PARENTESIS_CERRADO .)


state 347

    (53) statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO . statement
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 91
    statement                      shift and go to state 350
    block                          shift and go to state 88
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 348

    (73) switch_case -> CASE expression DOSPUNTOS . statements
    (48) statements -> . statement statements
    (49) statements -> . empty
    (50) statement -> . block
    (51) statement -> . WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (52) statement -> . DO statement WHILE PARENTESIS_ABIERTO expression PARENTESIS_CERRADO PUNTO_Y_COMA
    (53) statement -> . FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement
    (54) statement -> . SWITCH PARENTESIS_ABIERTO expression PARENTESIS_CERRADO LLAVE_ABIERTA switch_cases LLAVE_CERRADA
    (55) statement -> . RETURN expression PUNTO_Y_COMA
    (56) statement -> . RETURN PUNTO_Y_COMA
    (57) statement -> . BREAK PUNTO_Y_COMA
    (58) statement -> . CONTINUE PUNTO_Y_COMA
    (59) statement -> . THROW expression PUNTO_Y_COMA
    (60) statement -> . TRY block catches
    (61) statement -> . ASSERT expression PUNTO_Y_COMA
    (62) statement -> . TRY block catches FINALLY block
    (63) statement -> . expression PUNTO_Y_COMA
    (64) statement -> . local_var_decl PUNTO_Y_COMA
    (65) statement -> . PUNTO_Y_COMA
    (146) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement
    (147) statement -> . IF PARENTESIS_ABIERTO expression PARENTESIS_CERRADO statement ELSE statement
    (193) empty -> .
    (46) block -> . LLAVE_ABIERTA statements LLAVE_CERRADA
    (47) block -> . LLAVE_ABIERTA LLAVE_CERRADA
    (95) expression -> . assignment_expression
    (78) local_var_decl -> . type variables
    (96) assignment_expression -> . conditional_expression
    (97) assignment_expression -> . ID assignment_operator expression
    (79) type -> . primitive_type
    (80) type -> . reference_type
    (106) conditional_expression -> . logical_or_expression
    (107) conditional_expression -> . logical_or_expression TERNARIO expression DOSPUNTOS conditional_expression
    (81) primitive_type -> . INT
    (82) primitive_type -> . FLOAT
    (83) primitive_type -> . DOUBLE
    (84) primitive_type -> . CHAR
    (85) primitive_type -> . BOOLEAN
    (86) primitive_type -> . SHORT
    (87) primitive_type -> . LONG
    (88) primitive_type -> . STRING
    (89) primitive_type -> . BYTE
    (90) reference_type -> . qualified_id
    (108) logical_or_expression -> . logical_and_expression
    (109) logical_or_expression -> . logical_or_expression OR_LOGICO logical_and_expression
    (91) qualified_id -> . ID PUNTO ID
    (92) qualified_id -> . ID
    (110) logical_and_expression -> . inclusive_or_expression
    (111) logical_and_expression -> . logical_and_expression AND_LOGICO inclusive_or_expression
    (112) inclusive_or_expression -> . exclusive_or_expression
    (113) inclusive_or_expression -> . inclusive_or_expression OR_BIT exclusive_or_expression
    (114) exclusive_or_expression -> . and_expression
    (115) exclusive_or_expression -> . exclusive_or_expression XOR_BIT and_expression
    (116) and_expression -> . equality_expression
    (117) and_expression -> . and_expression AND_BIT equality_expression
    (118) equality_expression -> . relational_expression
    (119) equality_expression -> . equality_expression IGUAL relational_expression
    (120) equality_expression -> . equality_expression DISTINTO relational_expression
    (121) relational_expression -> . shift_expression
    (122) relational_expression -> . relational_expression MENOR shift_expression
    (123) relational_expression -> . relational_expression MAYOR shift_expression
    (124) relational_expression -> . relational_expression MENOR_IGUAL shift_expression
    (125) relational_expression -> . relational_expression MAYOR_IGUAL shift_expression
    (126) relational_expression -> . relational_expression INSTANCEOF reference_type
    (127) shift_expression -> . additive_expression
    (128) shift_expression -> . shift_expression DESPLAZAMIENTO_IZQUIERDO additive_expression
    (129) shift_expression -> . shift_expression DESPLAZAMIENTO_DERECHO additive_expression
    (130) additive_expression -> . multiplicative_expression
    (131) additive_expression -> . additive_expression SUMA multiplicative_expression
    (132) additive_expression -> . additive_expression RESTA multiplicative_expression
    (133) multiplicative_expression -> . unary_expression
    (134) multiplicative_expression -> . multiplicative_expression MULTIPLICACION unary_expression
    (135) multiplicative_expression -> . multiplicative_expression DIVISION unary_expression
    (136) multiplicative_expression -> . multiplicative_expression MODULO unary_expression
    (137) unary_expression -> . postfix_expression
    (138) unary_expression -> . INCREMENTO unary_expression
    (139) unary_expression -> . DECREMENTO unary_expression
    (140) unary_expression -> . SUMA unary_expression
    (141) unary_expression -> . RESTA unary_expression
    (142) unary_expression -> . UMAS unary_expression
    (143) unary_expression -> . UMENOS unary_expression
    (144) unary_expression -> . NOT unary_expression
    (145) unary_expression -> . NOT_BIT unary_expression
    (148) postfix_expression -> . primary
    (149) postfix_expression -> . postfix_expression INCREMENTO
    (150) postfix_expression -> . postfix_expression DECREMENTO
    (151) postfix_expression -> . postfix_expression PUNTO member_access
    (152) postfix_expression -> . postfix_expression CORCHETE_ABIERTO expression CORCHETE_CERRADO
    (158) primary -> . literal
    (159) primary -> . THIS
    (160) primary -> . SUPER
    (161) primary -> . PARENTESIS_ABIERTO expression PARENTESIS_CERRADO
    (162) primary -> . NEW creator
    (163) primary -> . qualified_id
    (164) literal -> . NUMERO
    (165) literal -> . CADENA
    (166) literal -> . TRUE
    (167) literal -> . FALSE
    (168) literal -> . NULL
    (169) literal -> . OCTAL_NUMERO
    (170) literal -> . HEX_NUMERO
    (171) literal -> . BINARIO_NUMERO

    WHILE           shift and go to state 89
    DO              shift and go to state 92
    FOR             shift and go to state 94
    SWITCH          shift and go to state 95
    RETURN          shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    THROW           shift and go to state 99
    TRY             shift and go to state 100
    ASSERT          shift and go to state 101
    PUNTO_Y_COMA    shift and go to state 93
    IF              shift and go to state 103
    CASE            reduce using rule 193 (empty -> .)
    DEFAULT         reduce using rule 193 (empty -> .)
    LLAVE_CERRADA   reduce using rule 193 (empty -> .)
    LLAVE_ABIERTA   shift and go to state 73
    ID              shift and go to state 107
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    DOUBLE          shift and go to state 64
    CHAR            shift and go to state 65
    BOOLEAN         shift and go to state 66
    SHORT           shift and go to state 67
    LONG            shift and go to state 68
    STRING          shift and go to state 69
    BYTE            shift and go to state 70
    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    SUMA            shift and go to state 119
    RESTA           shift and go to state 120
    UMAS            shift and go to state 125
    UMENOS          shift and go to state 126
    NOT             shift and go to state 127
    NOT_BIT         shift and go to state 128
    THIS            shift and go to state 131
    SUPER           shift and go to state 132
    PARENTESIS_ABIERTO shift and go to state 90
    NEW             shift and go to state 133
    NUMERO          shift and go to state 134
    CADENA          shift and go to state 135
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    NULL            shift and go to state 138
    OCTAL_NUMERO    shift and go to state 139
    HEX_NUMERO      shift and go to state 140
    BINARIO_NUMERO  shift and go to state 141

    expression                     shift and go to state 91
    statements                     shift and go to state 351
    statement                      shift and go to state 86
    empty                          shift and go to state 87
    block                          shift and go to state 88
    local_var_decl                 shift and go to state 102
    assignment_expression          shift and go to state 104
    type                           shift and go to state 105
    conditional_expression         shift and go to state 106
    primitive_type                 shift and go to state 60
    reference_type                 shift and go to state 61
    logical_or_expression          shift and go to state 108
    qualified_id                   shift and go to state 109
    logical_and_expression         shift and go to state 110
    inclusive_or_expression        shift and go to state 111
    exclusive_or_expression        shift and go to state 112
    and_expression                 shift and go to state 113
    equality_expression            shift and go to state 114
    relational_expression          shift and go to state 115
    shift_expression               shift and go to state 116
    additive_expression            shift and go to state 117
    multiplicative_expression      shift and go to state 118
    unary_expression               shift and go to state 121
    postfix_expression             shift and go to state 122
    primary                        shift and go to state 129
    literal                        shift and go to state 130

state 349

    (74) switch_case -> DEFAULT DOSPUNTOS statements .

    CASE            reduce using rule 74 (switch_case -> DEFAULT DOSPUNTOS statements .)
    DEFAULT         reduce using rule 74 (switch_case -> DEFAULT DOSPUNTOS statements .)
    LLAVE_CERRADA   reduce using rule 74 (switch_case -> DEFAULT DOSPUNTOS statements .)


state 350

    (53) statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .

    WHILE           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    DO              reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    FOR             reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    SWITCH          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    RETURN          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    BREAK           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    CONTINUE        reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    THROW           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    TRY             reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    ASSERT          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    PUNTO_Y_COMA    reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    IF              reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    LLAVE_ABIERTA   reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    ID              reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    INT             reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    FLOAT           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    DOUBLE          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    CHAR            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    BOOLEAN         reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    SHORT           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    LONG            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    STRING          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    BYTE            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    INCREMENTO      reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    DECREMENTO      reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    SUMA            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    RESTA           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    UMAS            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    UMENOS          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    NOT             reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    NOT_BIT         reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    THIS            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    SUPER           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    PARENTESIS_ABIERTO reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    NEW             reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    NUMERO          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    CADENA          reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    TRUE            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    FALSE           reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    NULL            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    OCTAL_NUMERO    reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    HEX_NUMERO      reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    BINARIO_NUMERO  reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    LLAVE_CERRADA   reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    CASE            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    DEFAULT         reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)
    ELSE            reduce using rule 53 (statement -> FOR PARENTESIS_ABIERTO for_init PUNTO_Y_COMA expression PUNTO_Y_COMA for_update PARENTESIS_CERRADO statement .)


state 351

    (73) switch_case -> CASE expression DOSPUNTOS statements .

    CASE            reduce using rule 73 (switch_case -> CASE expression DOSPUNTOS statements .)
    DEFAULT         reduce using rule 73 (switch_case -> CASE expression DOSPUNTOS statements .)
    LLAVE_CERRADA   reduce using rule 73 (switch_case -> CASE expression DOSPUNTOS statements .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 28 resolved as shift
WARNING: shift/reduce conflict for LLAVE_CERRADA in state 73 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 107 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_CERRADO in state 146 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_CERRADO in state 156 resolved as shift
