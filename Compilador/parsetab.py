
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALMINUS_EQTIMES_EQPLUS_EQDIVIDE_EQMOD_EQBITWISE_AND_EQBITWISE_OR_EQBITWISE_XOR_EQURSHIFT_EQLSHIFT_EQRSHIFT_EQleftORleftSTATICFINALABSTRACTPACKAGEleftANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQNEQleftLTGTLEQGEQleftLSHIFTRSHIFTURSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULEleftLINCREMENTLDECREMENTUPLUSUMINUSNOTleftRINCREMENTRDECREMENTABSTRACT AND ASSERT BIN_NUMBER BITWISE_AND BITWISE_AND_EQ BITWISE_NOT BITWISE_OR BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_EQ BREAK BYTE_NUMBER CASE CATCH CHAR CLASS COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQ DO DOT DOUBLE_NUMBER ELSE ENUM EQ EQUAL EXTENDS FINAL FINALLY FLOAT_NUMBER FOR GEQ GOTO GT HEXA_NUMBER ID IF IMPLEMENTS IMPORT INCREMENT INSTANCEOF INTERFACE INT_NUMBER LBRACKET LCHAV LEQ LONG_NUMBER LPAREN LSHIFT LSHIFT_EQ LT MINUS MINUS_EQ MODULE MOD_EQ NATIVE NEQ NEW NOT OCTAL_NUMBER OR PACKAGE PLUS PLUS_EQ POT PRIVATE PROTECTED PUBLIC RBRACKET RCHAV RETURN RPAREN RSHIFT RSHIFT_EQ SEMICOLON SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED TERNARY THIS THROW THROWS TIMES TIMES_EQ TRANSIENT TRY TYPE_BOOLEAN TYPE_BYTE TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_STRING TYPE_VOID URSHIFT URSHIFT_EQ VOID VOLATILE WHILE program : class class : visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAVclass : visibility classmodifier CLASS ID LCHAV membros RCHAV class : visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV visibility : PUBLIC visibility : PRIVATE visibility : PROTECTED visibility : classmodifier : classmodifier : ABSTRACTclassmodifier : FINALclassmodifier : PACKAGEclassmodifier : STATICclassmodifier : VOIDmembros : membromembros : membro membrosmembro : atributemembro : functionatribute : visibility atributemodifier type ID SEMICOLONatribute : visibility atributemodifier type ID EQUAL expression SEMICOLONatributemodifier : atributemodifier : STATICatributemodifier : FINALfunction : signature bodysignature : visibility atributemodifier type ID LPAREN sigparams RPAREN signature : visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN sigparams : type ID  sigparams : type ID COMMA sigparamsbody : LCHAV stms RCHAVstms : stm stms : stm stms stm : expression SEMICOLONstm : WHILE LPAREN expression RPAREN bodyorstmstm : DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON stm : FOR LPAREN expression_for SEMICOLON expression SEMICOLON expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstmstm : SEMICOLON stm : atributemodifier type ID SEMICOLONstm : atributemodifier type ID EQUAL expression SEMICOLONstm : atributemodifier type ID LBRACKET RBRACKET SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID EQUAL chav_exp SEMICOLONstm : atributemodifier type ID LBRACKET RBRACKET EQUAL expression SEMICOLONstm : atributemodifier type ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLONstm : RETURN expression SEMICOLONstm : RETURN SEMICOLONbodyorstm : body expression_for : type ID EQUAL expression   expression_for : ID EQUAL expression   expression : operator  expression : call  expression : FLOAT_NUMBER  expression : DOUBLE_NUMBER  expression : INT_NUMBER  expression : STRING  expression : ID  expression : NEW type LPAREN params_call RPAREN expression : NEW type LBRACKET expression RBRACKET operator : expression TIMES expressionoperator : expression DIVIDE expressionoperator : expression MODULE expressionoperator : expression PLUS expressionoperator : expression MINUS expressionoperator : ID EQUAL expressionoperator : ID MINUS_EQ expressionoperator : ID TIMES_EQ expressionoperator : ID PLUS_EQ expressionoperator : ID DIVIDE_EQ expressionoperator : ID MOD_EQ expressionoperator : ID BITWISE_AND_EQ expressionoperator : ID BITWISE_OR_EQ expressionoperator : ID BITWISE_XOR_EQ expressionoperator : ID URSHIFT_EQ expressionoperator : ID LSHIFT_EQ expressionoperator : ID RSHIFT_EQ expressionoperator : expression LEQ expressionoperator : expression GEQ expressionoperator : expression LT expressionoperator : expression GT expressionoperator : expression NEQ expressionoperator : expression EQ expressionoperator : expression AND expressionoperator : expression OR expressionoperator : expression BITWISE_AND expressionoperator : expression BITWISE_OR expressionoperator : expression BITWISE_XOR expressionoperator : unaryoperatorprefx IDoperator : ID unaryoperatorsufxoperator : expression operatorbittobit\n    unaryoperatorprefx : INCREMENT %prec LINCREMENT\n                        | DECREMENT %prec LDECREMENT\n                        | MINUS %prec UMINUS\n                        | PLUS %prec UPLUS\n                        | NOT\n    \n    unaryoperatorsufx : INCREMENT %prec RINCREMENT\n                        | DECREMENT %prec RDECREMENT\n    \n    operatorbittobit : URSHIFT\n                        | LSHIFT\n                        | RSHIFT\n    \n     brackets_expression : LBRACKET RBRACKET brackets_expression : LBRACKET INT_NUMBER RBRACKET brackets_expression : LBRACKET ID RBRACKET type : primitivetypes\n               primitivetypes : TYPE_INT\n                        | TYPE_FLOAT\n                        | TYPE_DOUBLE\n                        | TYPE_BYTE\n                        | TYPE_BOOLEAN\n                        | TYPE_CHAR\n                        | TYPE_STRING\n                        | TYPE_LONG\n                        | TYPE_VOID\n\n     call : ID LPAREN params_call RPAREN call : ID LPAREN RPAREN params_call : expression COMMA params_call params_call : expressionchav_exp : LCHAV RCHAVchav_exp : LCHAV expression_chav\n    expression_chav : expression COMMA expression_chavexpression_chav : expression RCHAVexpression_chav :  expression COMMA RCHAV'
    
_lr_action_items = {'PUBLIC':([0,16,21,22,23,25,26,32,76,125,194,],[4,4,4,-17,-18,4,4,-24,-29,-19,-20,]),'PRIVATE':([0,16,21,22,23,25,26,32,76,125,194,],[5,5,5,-17,-18,5,5,-24,-29,-19,-20,]),'PROTECTED':([0,16,21,22,23,25,26,32,76,125,194,],[6,6,6,-17,-18,6,6,-24,-29,-19,-20,]),'ABSTRACT':([0,3,4,5,6,],[-8,8,-5,-6,-7,]),'FINAL':([0,3,4,5,6,16,19,21,22,23,25,26,32,33,48,50,76,78,101,122,125,171,186,194,198,203,216,217,220,223,226,233,234,235,239,241,242,248,],[-8,9,-5,-6,-7,-8,29,-8,-17,-18,-8,-8,-24,29,29,-39,-29,-32,-51,-50,-19,-49,-40,-20,-33,-36,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'PACKAGE':([0,3,4,5,6,],[-8,10,-5,-6,-7,]),'STATIC':([0,3,4,5,6,16,19,21,22,23,25,26,32,33,48,50,76,78,101,122,125,171,186,194,198,203,216,217,220,223,226,233,234,235,239,241,242,248,],[-8,11,-5,-6,-7,-8,28,-8,-17,-18,-8,-8,-24,28,28,-39,-29,-32,-51,-50,-19,-49,-40,-20,-33,-36,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'VOID':([0,3,4,5,6,],[-8,12,-5,-6,-7,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,],[-8,-9,-5,-6,-7,13,-10,-11,-12,-13,-14,]),'$end':([1,2,30,71,72,],[0,-1,-3,-4,-2,]),'TYPE_INT':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,38,-22,-23,-24,-21,-21,-39,38,38,-29,-32,-51,38,-50,-19,38,-49,38,-40,-20,-33,-36,38,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_FLOAT':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,39,-22,-23,-24,-21,-21,-39,39,39,-29,-32,-51,39,-50,-19,39,-49,39,-40,-20,-33,-36,39,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_DOUBLE':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,40,-22,-23,-24,-21,-21,-39,40,40,-29,-32,-51,40,-50,-19,40,-49,40,-40,-20,-33,-36,40,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_BYTE':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,41,-22,-23,-24,-21,-21,-39,41,41,-29,-32,-51,41,-50,-19,41,-49,41,-40,-20,-33,-36,41,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_BOOLEAN':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,42,-22,-23,-24,-21,-21,-39,42,42,-29,-32,-51,42,-50,-19,42,-49,42,-40,-20,-33,-36,42,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_CHAR':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,43,-22,-23,-24,-21,-21,-39,43,43,-29,-32,-51,43,-50,-19,43,-49,43,-40,-20,-33,-36,43,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_STRING':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,44,-22,-23,-24,-21,-21,-39,44,44,-29,-32,-51,44,-50,-19,44,-49,44,-40,-20,-33,-36,44,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_LONG':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,45,-22,-23,-24,-21,-21,-39,45,45,-29,-32,-51,45,-50,-19,45,-49,45,-40,-20,-33,-36,45,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'TYPE_VOID':([4,5,6,16,19,21,22,23,25,26,27,28,29,32,33,48,50,55,64,76,78,101,102,122,125,127,171,177,186,194,198,203,210,216,217,220,223,226,233,234,235,239,241,242,248,],[-5,-6,-7,-8,-21,-8,-17,-18,-8,-8,46,-22,-23,-24,-21,-21,-39,46,46,-29,-32,-51,46,-50,-19,46,-49,46,-40,-20,-33,-36,46,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'ID':([13,15,33,36,37,38,39,40,41,42,43,44,45,46,48,50,57,65,66,67,68,69,70,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,129,151,171,172,173,175,178,179,181,182,184,186,187,189,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[14,18,56,73,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,56,-39,56,-97,-96,124,-94,-95,-98,128,131,-29,-32,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-51,152,56,154,56,56,56,56,56,56,56,56,56,56,56,56,56,-50,56,-104,183,-49,56,56,195,-105,-106,56,56,56,-40,56,206,56,-33,56,-36,56,-41,-42,56,-43,-34,-37,56,-38,-45,-46,-47,-44,-35,56,-48,]),'EXTENDS':([14,],[15,]),'LCHAV':([14,17,18,24,52,180,185,196,211,215,218,221,225,232,240,],[16,25,26,33,33,33,33,-25,-26,33,229,229,33,33,229,]),'IMPLEMENTS':([14,],[17,]),'RCHAV':([20,21,22,23,31,32,34,35,47,48,50,56,58,59,60,61,62,63,76,77,78,95,96,97,98,101,117,119,120,122,124,125,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,157,158,159,160,161,162,163,164,165,166,167,169,171,186,190,194,198,203,208,209,216,217,220,223,226,229,233,234,235,238,239,241,242,243,248,],[30,-15,-17,-18,-16,-24,71,72,76,-30,-39,-60,-54,-55,-56,-57,-58,-59,-29,-31,-32,-93,-101,-102,-103,-51,-92,-99,-100,-50,-91,-19,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-118,-49,-40,-117,-20,-33,-36,-61,-62,-41,-42,-43,-34,-37,236,-38,-45,-46,244,-47,-44,-35,247,-48,]),'WHILE':([33,48,50,76,78,100,101,122,171,186,198,203,216,217,220,223,226,233,234,235,239,241,242,248,],[51,51,-39,-29,-32,149,-51,-50,-49,-40,-33,-36,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'DO':([33,48,50,76,78,101,122,171,186,198,203,216,217,220,223,226,233,234,235,239,241,242,248,],[52,52,-39,-29,-32,-51,-50,-49,-40,-33,-36,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'FOR':([33,48,50,76,78,101,122,171,186,198,203,216,217,220,223,226,233,234,235,239,241,242,248,],[53,53,-39,-29,-32,-51,-50,-49,-40,-33,-36,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'IF':([33,48,50,76,78,101,122,171,186,198,203,215,216,217,220,223,226,233,234,235,239,241,242,248,],[54,54,-39,-29,-32,-51,-50,-49,-40,-33,-36,225,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'SEMICOLON':([33,48,49,50,56,57,58,59,60,61,62,63,73,76,78,95,96,97,98,101,117,119,120,121,122,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,154,156,157,158,159,160,161,162,163,164,165,166,167,169,171,174,186,190,198,200,202,203,204,205,206,208,209,212,214,216,217,220,223,226,227,228,230,231,233,234,235,236,237,239,241,242,244,245,246,247,248,],[50,50,78,-39,-60,122,-54,-55,-56,-57,-58,-59,125,-29,-32,-93,-101,-102,-103,-51,-92,-99,-100,171,-50,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,182,186,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-118,-49,194,-40,-117,-33,213,-53,-36,216,217,220,-61,-62,223,-52,-41,-42,-43,-34,-37,234,235,239,241,-38,-45,-46,-121,-122,-47,-44,-35,-124,248,-123,-125,-48,]),'RETURN':([33,48,50,76,78,101,122,171,186,198,203,216,217,220,223,226,233,234,235,239,241,242,248,],[57,57,-39,-29,-32,-51,-50,-49,-40,-33,-36,-41,-42,-43,-34,-37,-38,-45,-46,-47,-44,-35,-48,]),'FLOAT_NUMBER':([33,48,50,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[60,60,-39,60,-29,-32,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-51,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-50,60,-49,60,60,60,60,60,-40,60,60,-33,60,-36,60,-41,-42,60,-43,-34,-37,60,-38,-45,-46,-47,-44,-35,60,-48,]),'DOUBLE_NUMBER':([33,48,50,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[61,61,-39,61,-29,-32,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-51,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-50,61,-49,61,61,61,61,61,-40,61,61,-33,61,-36,61,-41,-42,61,-43,-34,-37,61,-38,-45,-46,-47,-44,-35,61,-48,]),'INT_NUMBER':([33,48,50,57,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[62,62,-39,62,130,-29,-32,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-51,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-50,62,-49,62,62,62,62,62,-40,62,62,-33,62,-36,62,-41,-42,62,-43,-34,-37,62,-38,-45,-46,-47,-44,-35,62,-48,]),'STRING':([33,48,50,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[63,63,-39,63,-29,-32,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-51,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-50,63,-49,63,63,63,63,63,-40,63,63,-33,63,-36,63,-41,-42,63,-43,-34,-37,63,-38,-45,-46,-47,-44,-35,63,-48,]),'NEW':([33,48,50,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[64,64,-39,64,-29,-32,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-51,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-50,64,-49,64,64,64,64,64,-40,64,64,-33,64,-36,64,-41,-42,64,-43,-34,-37,64,-38,-45,-46,-47,-44,-35,64,-48,]),'INCREMENT':([33,48,50,56,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[68,68,-39,119,68,-29,-32,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-51,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-50,68,-49,68,68,68,68,68,-40,68,68,-33,68,-36,68,-41,-42,68,-43,-34,-37,68,-38,-45,-46,-47,-44,-35,68,-48,]),'DECREMENT':([33,48,50,56,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[69,69,-39,120,69,-29,-32,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-51,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-50,69,-49,69,69,69,69,69,-40,69,69,-33,69,-36,69,-41,-42,69,-43,-34,-37,69,-38,-45,-46,-47,-44,-35,69,-48,]),'MINUS':([33,48,49,50,56,57,58,59,60,61,62,63,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,181,182,184,186,187,190,191,193,198,199,200,201,202,203,204,208,209,213,214,216,217,218,220,223,224,226,227,229,233,234,235,238,239,241,242,243,248,],[66,66,83,-39,-60,66,-54,-55,-56,-57,-58,-59,-29,-32,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-93,-101,-102,-103,66,-51,66,66,66,66,66,66,66,66,66,66,66,66,66,-92,66,-99,-100,83,-50,-91,66,-63,-64,-65,-66,-67,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-118,83,-49,66,66,83,66,66,66,-40,66,-117,66,83,-33,83,83,66,83,-36,83,-61,-62,66,83,-41,-42,66,-43,-34,83,-37,83,66,-38,-45,-46,83,-47,-44,-35,66,-48,]),'PLUS':([33,48,49,50,56,57,58,59,60,61,62,63,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,181,182,184,186,187,190,191,193,198,199,200,201,202,203,204,208,209,213,214,216,217,218,220,223,224,226,227,229,233,234,235,238,239,241,242,243,248,],[65,65,82,-39,-60,65,-54,-55,-56,-57,-58,-59,-29,-32,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-93,-101,-102,-103,65,-51,65,65,65,65,65,65,65,65,65,65,65,65,65,-92,65,-99,-100,82,-50,-91,65,-63,-64,-65,-66,-67,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-118,82,-49,65,65,82,65,65,65,-40,65,-117,65,82,-33,82,82,65,82,-36,82,-61,-62,65,82,-41,-42,65,-43,-34,82,-37,82,65,-38,-45,-46,82,-47,-44,-35,65,-48,]),'NOT':([33,48,50,57,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,122,126,171,172,173,181,182,184,186,187,191,198,201,203,213,216,217,218,220,223,226,229,233,234,235,239,241,242,243,248,],[70,70,-39,70,-29,-32,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-51,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-50,70,-49,70,70,70,70,70,-40,70,70,-33,70,-36,70,-41,-42,70,-43,-34,-37,70,-38,-45,-46,-47,-44,-35,70,-48,]),'LBRACKET':([36,37,38,39,40,41,42,43,44,45,46,104,123,154,206,],[75,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,155,173,188,219,]),'LPAREN':([37,38,39,40,41,42,43,44,45,46,51,53,54,56,73,123,128,149,],[-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,99,102,103,118,127,172,177,181,]),'TIMES':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[79,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,79,-91,-63,-64,-65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-118,79,79,-117,79,79,79,79,79,-61,-62,79,79,79,79,]),'DIVIDE':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[80,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,80,-91,-63,-64,-65,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-118,80,80,-117,80,80,80,80,80,-61,-62,80,80,80,80,]),'MODULE':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[81,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,81,-91,-63,-64,-65,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-118,81,81,-117,81,81,81,81,81,-61,-62,81,81,81,81,]),'LEQ':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[84,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,84,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-118,84,84,-117,84,84,84,84,84,-61,-62,84,84,84,84,]),'GEQ':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[85,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,85,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-118,85,85,-117,85,85,85,85,85,-61,-62,85,85,85,85,]),'LT':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[86,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,86,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-118,86,86,-117,86,86,86,86,86,-61,-62,86,86,86,86,]),'GT':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[87,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,87,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-118,87,87,-117,87,87,87,87,87,-61,-62,87,87,87,87,]),'NEQ':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[88,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,88,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-118,88,88,-117,88,88,88,88,88,-61,-62,88,88,88,88,]),'EQ':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[89,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,89,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-118,89,89,-117,89,89,89,89,89,-61,-62,89,89,89,89,]),'AND':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[90,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,90,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,90,-88,-89,-90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-118,90,90,-117,90,90,90,90,90,-61,-62,90,90,90,90,]),'OR':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[91,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,91,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-118,91,91,-117,91,91,91,91,91,-61,-62,91,91,91,91,]),'BITWISE_AND':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[92,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,92,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,92,92,-88,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-118,92,92,-117,92,92,92,92,92,-61,-62,92,92,92,92,]),'BITWISE_OR':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[93,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,93,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,93,93,-88,-89,-90,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-118,93,93,-117,93,93,93,93,93,-61,-62,93,93,93,93,]),'BITWISE_XOR':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[94,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,94,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,94,94,-88,94,-90,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-118,94,94,-117,94,94,94,94,94,-61,-62,94,94,94,94,]),'URSHIFT':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[96,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,96,-91,-63,-64,-65,-66,-67,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-118,96,96,-117,96,96,96,96,96,-61,-62,96,96,96,96,]),'LSHIFT':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[97,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,97,-91,-63,-64,-65,-66,-67,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-118,97,97,-117,97,97,97,97,97,-61,-62,97,97,97,97,]),'RSHIFT':([49,56,58,59,60,61,62,63,95,96,97,98,117,119,120,121,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,174,190,193,199,200,202,204,208,209,214,224,227,238,],[98,-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,98,-91,-63,-64,-65,-66,-67,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-118,98,98,-117,98,98,98,98,98,-61,-62,98,98,98,98,]),'RPAREN':([56,58,59,60,61,62,63,95,96,97,98,117,118,119,120,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,190,192,195,197,199,207,208,209,222,224,],[-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,169,-99,-100,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,180,185,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,190,-118,-120,196,-117,208,-27,211,212,-119,-61,-62,-28,232,]),'COMMA':([56,58,59,60,61,62,63,95,96,97,98,117,119,120,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,157,158,159,160,161,162,163,164,165,166,167,169,170,190,195,208,209,238,],[-60,-54,-55,-56,-57,-58,-59,-93,-101,-102,-103,-92,-99,-100,-91,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-118,191,-117,210,-61,-62,243,]),'RBRACKET':([56,58,59,60,61,62,63,75,95,96,97,98,117,119,120,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,155,156,157,158,159,160,161,162,163,164,165,166,167,169,188,190,193,208,209,219,],[-60,-54,-55,-56,-57,-58,-59,129,-93,-101,-102,-103,-92,-99,-100,-91,178,179,-63,-64,-65,-66,-67,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,189,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-118,205,-117,209,-61,-62,230,]),'EQUAL':([56,73,152,154,183,205,206,230,],[105,126,184,187,201,218,221,240,]),'MINUS_EQ':([56,],[106,]),'TIMES_EQ':([56,],[107,]),'PLUS_EQ':([56,],[108,]),'DIVIDE_EQ':([56,],[109,]),'MOD_EQ':([56,],[110,]),'BITWISE_AND_EQ':([56,],[111,]),'BITWISE_OR_EQ':([56,],[112,]),'BITWISE_XOR_EQ':([56,],[113,]),'URSHIFT_EQ':([56,],[114,]),'LSHIFT_EQ':([56,],[115,]),'RSHIFT_EQ':([56,],[116,]),'ELSE':([76,101,203,],[-29,-51,215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class':([0,],[2,]),'visibility':([0,16,21,25,26,],[3,19,19,19,19,]),'classmodifier':([3,],[7,]),'membros':([16,21,25,26,],[20,31,34,35,]),'membro':([16,21,25,26,],[21,21,21,21,]),'atribute':([16,21,25,26,],[22,22,22,22,]),'function':([16,21,25,26,],[23,23,23,23,]),'signature':([16,21,25,26,],[24,24,24,24,]),'atributemodifier':([19,33,48,],[27,55,55,]),'body':([24,52,180,185,215,225,232,],[32,101,101,101,101,101,101,]),'type':([27,55,64,102,127,177,210,],[36,104,123,151,175,175,175,]),'primitivetypes':([27,55,64,102,127,177,210,],[37,37,37,37,37,37,37,]),'stms':([33,48,],[47,77,]),'stm':([33,48,],[48,48,]),'expression':([33,48,57,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,103,105,106,107,108,109,110,111,112,113,114,115,116,118,126,172,173,181,182,184,187,191,201,213,218,229,243,],[49,49,121,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,170,174,170,193,199,200,202,204,170,214,224,227,238,238,]),'operator':([33,48,57,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,103,105,106,107,108,109,110,111,112,113,114,115,116,118,126,172,173,181,182,184,187,191,201,213,218,229,243,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'call':([33,48,57,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,103,105,106,107,108,109,110,111,112,113,114,115,116,118,126,172,173,181,182,184,187,191,201,213,218,229,243,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unaryoperatorprefx':([33,48,57,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,103,105,106,107,108,109,110,111,112,113,114,115,116,118,126,172,173,181,182,184,187,191,201,213,218,229,243,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'brackets_expression':([36,],[74,]),'operatorbittobit':([49,121,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,156,157,158,159,160,161,162,163,164,165,166,167,170,174,193,199,200,202,204,214,224,227,238,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'bodyorstm':([52,180,185,215,225,232,],[100,198,203,226,233,242,]),'unaryoperatorsufx':([56,],[117,]),'expression_for':([102,],[150,]),'params_call':([118,172,191,],[168,192,207,]),'sigparams':([127,177,210,],[176,197,222,]),'chav_exp':([218,221,240,],[228,231,245,]),'expression_chav':([229,243,],[237,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class','program',1,'p_program','AnalizadorSintactico.py',23),
  ('class -> visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAV','class',9,'p_class_extends','AnalizadorSintactico.py',28),
  ('class -> visibility classmodifier CLASS ID LCHAV membros RCHAV','class',7,'p_class_default','AnalizadorSintactico.py',32),
  ('class -> visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV','class',8,'p_class_implements','AnalizadorSintactico.py',36),
  ('visibility -> PUBLIC','visibility',1,'p_visibility_public','AnalizadorSintactico.py',42),
  ('visibility -> PRIVATE','visibility',1,'p_visibility_private','AnalizadorSintactico.py',46),
  ('visibility -> PROTECTED','visibility',1,'p_visibility_protected','AnalizadorSintactico.py',50),
  ('visibility -> <empty>','visibility',0,'p_visibility_default','AnalizadorSintactico.py',54),
  ('classmodifier -> <empty>','classmodifier',0,'p_classmodifier_default','AnalizadorSintactico.py',60),
  ('classmodifier -> ABSTRACT','classmodifier',1,'p_classmodifier_abstract','AnalizadorSintactico.py',64),
  ('classmodifier -> FINAL','classmodifier',1,'p_classmodifier_final','AnalizadorSintactico.py',68),
  ('classmodifier -> PACKAGE','classmodifier',1,'p_classmodifier_package','AnalizadorSintactico.py',72),
  ('classmodifier -> STATIC','classmodifier',1,'p_classmodifier_static','AnalizadorSintactico.py',76),
  ('classmodifier -> VOID','classmodifier',1,'p_classmodifer_void','AnalizadorSintactico.py',80),
  ('membros -> membro','membros',1,'p_membros','AnalizadorSintactico.py',87),
  ('membros -> membro membros','membros',2,'p_multimembros','AnalizadorSintactico.py',91),
  ('membro -> atribute','membro',1,'p_membro_atribute','AnalizadorSintactico.py',96),
  ('membro -> function','membro',1,'p_membrofunction','AnalizadorSintactico.py',100),
  ('atribute -> visibility atributemodifier type ID SEMICOLON','atribute',5,'p_atribute','AnalizadorSintactico.py',107),
  ('atribute -> visibility atributemodifier type ID EQUAL expression SEMICOLON','atribute',7,'p_atribute_inicialized_type','AnalizadorSintactico.py',113),
  ('atributemodifier -> <empty>','atributemodifier',0,'p_atributemodifier_default','AnalizadorSintactico.py',121),
  ('atributemodifier -> STATIC','atributemodifier',1,'p_atributemodifier_static','AnalizadorSintactico.py',125),
  ('atributemodifier -> FINAL','atributemodifier',1,'p_atributemodifier_final','AnalizadorSintactico.py',130),
  ('function -> signature body','function',2,'p_function','AnalizadorSintactico.py',136),
  ('signature -> visibility atributemodifier type ID LPAREN sigparams RPAREN','signature',7,'p_signature_simple','AnalizadorSintactico.py',141),
  ('signature -> visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN','signature',8,'p_signature_list','AnalizadorSintactico.py',145),
  ('sigparams -> type ID','sigparams',2,'p_sigparams_id','AnalizadorSintactico.py',150),
  ('sigparams -> type ID COMMA sigparams','sigparams',4,'p_sigparams_sigparams','AnalizadorSintactico.py',154),
  ('body -> LCHAV stms RCHAV','body',3,'p_body','AnalizadorSintactico.py',159),
  ('stms -> stm','stms',1,'p_stms','AnalizadorSintactico.py',165),
  ('stms -> stm stms','stms',2,'p_multistms','AnalizadorSintactico.py',169),
  ('stm -> expression SEMICOLON','stm',2,'p_stm_exp','AnalizadorSintactico.py',175),
  ('stm -> WHILE LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_while','AnalizadorSintactico.py',179),
  ('stm -> DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON','stm',7,'p_stm_dowhile','AnalizadorSintactico.py',183),
  ('stm -> FOR LPAREN expression_for SEMICOLON expression SEMICOLON expression RPAREN bodyorstm','stm',9,'p_stm_for','AnalizadorSintactico.py',187),
  ('stm -> IF LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_if','AnalizadorSintactico.py',191),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE bodyorstm','stm',7,'p_stm_ifelse','AnalizadorSintactico.py',195),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstm','stm',8,'p_stm_elseif','AnalizadorSintactico.py',199),
  ('stm -> SEMICOLON','stm',1,'p_stm_semicollon','AnalizadorSintactico.py',203),
  ('stm -> atributemodifier type ID SEMICOLON','stm',4,'p_stm_variable','AnalizadorSintactico.py',207),
  ('stm -> atributemodifier type ID EQUAL expression SEMICOLON','stm',6,'p_stm_variable_type','AnalizadorSintactico.py',211),
  ('stm -> atributemodifier type ID LBRACKET RBRACKET SEMICOLON','stm',6,'p_stm_variable_type_list','AnalizadorSintactico.py',216),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID SEMICOLON','stm',6,'p_stm_variable_type_list_pre','AnalizadorSintactico.py',220),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID EQUAL chav_exp SEMICOLON','stm',8,'p_stm_variable_type_list_list_pre','AnalizadorSintactico.py',224),
  ('stm -> atributemodifier type ID LBRACKET RBRACKET EQUAL expression SEMICOLON','stm',8,'p_stm_variable_type_list_expression','AnalizadorSintactico.py',228),
  ('stm -> atributemodifier type ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLON','stm',8,'p_stm_variable_type_list_expression_inicialized','AnalizadorSintactico.py',232),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET SEMICOLON','stm',8,'p_stm_variable_type_list_list','AnalizadorSintactico.py',236),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLON','stm',10,'p_stm_variable_type_list_list_inicialized','AnalizadorSintactico.py',240),
  ('stm -> RETURN expression SEMICOLON','stm',3,'p_stm_return','AnalizadorSintactico.py',246),
  ('stm -> RETURN SEMICOLON','stm',2,'p_stm_void_return','AnalizadorSintactico.py',250),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm_body','AnalizadorSintactico.py',256),
  ('expression_for -> type ID EQUAL expression','expression_for',4,'p_expression_assign_for_type','AnalizadorSintactico.py',262),
  ('expression_for -> ID EQUAL expression','expression_for',3,'p_expression_assign_for','AnalizadorSintactico.py',266),
  ('expression -> operator','expression',1,'p_expression_operator','AnalizadorSintactico.py',272),
  ('expression -> call','expression',1,'p_expression_call','AnalizadorSintactico.py',276),
  ('expression -> FLOAT_NUMBER','expression',1,'p_expression_FLOAT_NUMBER','AnalizadorSintactico.py',280),
  ('expression -> DOUBLE_NUMBER','expression',1,'p_expression_DOUBLE_NUMBER','AnalizadorSintactico.py',284),
  ('expression -> INT_NUMBER','expression',1,'p_expression_INT_NUMBER','AnalizadorSintactico.py',288),
  ('expression -> STRING','expression',1,'p_expression_STRING','AnalizadorSintactico.py',292),
  ('expression -> ID','expression',1,'p_expression_ID','AnalizadorSintactico.py',296),
  ('expression -> NEW type LPAREN params_call RPAREN','expression',5,'p_expression_new','AnalizadorSintactico.py',300),
  ('expression -> NEW type LBRACKET expression RBRACKET','expression',5,'p_expression_new_list','AnalizadorSintactico.py',304),
  ('operator -> expression TIMES expression','operator',3,'p_operator_arithmetic_times','AnalizadorSintactico.py',311),
  ('operator -> expression DIVIDE expression','operator',3,'p_operator_arithmetic_divide','AnalizadorSintactico.py',315),
  ('operator -> expression MODULE expression','operator',3,'p_operator_arithmetic_module','AnalizadorSintactico.py',319),
  ('operator -> expression PLUS expression','operator',3,'p_operator_arithmetic_plus','AnalizadorSintactico.py',323),
  ('operator -> expression MINUS expression','operator',3,'p_operator_arithmetic_minus','AnalizadorSintactico.py',327),
  ('operator -> ID EQUAL expression','operator',3,'p_operator_assign_EQUAL','AnalizadorSintactico.py',331),
  ('operator -> ID MINUS_EQ expression','operator',3,'p_operator_assign_MINUS_EQ','AnalizadorSintactico.py',335),
  ('operator -> ID TIMES_EQ expression','operator',3,'p_operator_assign_TIMES_EQ','AnalizadorSintactico.py',339),
  ('operator -> ID PLUS_EQ expression','operator',3,'p_operator_assign_PLUS_EQ','AnalizadorSintactico.py',343),
  ('operator -> ID DIVIDE_EQ expression','operator',3,'p_operator_assign_DIVIDE_EQ','AnalizadorSintactico.py',347),
  ('operator -> ID MOD_EQ expression','operator',3,'p_operator_assign_MOD_EQ','AnalizadorSintactico.py',351),
  ('operator -> ID BITWISE_AND_EQ expression','operator',3,'p_operator_assign_BITWISE_AND_EQ','AnalizadorSintactico.py',355),
  ('operator -> ID BITWISE_OR_EQ expression','operator',3,'p_operator_assign_BITWISE_OR_EQ','AnalizadorSintactico.py',359),
  ('operator -> ID BITWISE_XOR_EQ expression','operator',3,'p_operator_assign_BITWISE_XOR_EQ','AnalizadorSintactico.py',363),
  ('operator -> ID URSHIFT_EQ expression','operator',3,'p_operator_assign_URSHIFT_EQ','AnalizadorSintactico.py',367),
  ('operator -> ID LSHIFT_EQ expression','operator',3,'p_operator_assign_LSHIFT_EQ','AnalizadorSintactico.py',371),
  ('operator -> ID RSHIFT_EQ expression','operator',3,'p_operator_assign_RSHIFT_EQ','AnalizadorSintactico.py',375),
  ('operator -> expression LEQ expression','operator',3,'p_operator_comparator_LEQ','AnalizadorSintactico.py',379),
  ('operator -> expression GEQ expression','operator',3,'p_operator_comparator_GEQ','AnalizadorSintactico.py',383),
  ('operator -> expression LT expression','operator',3,'p_operator_comparator_LT','AnalizadorSintactico.py',387),
  ('operator -> expression GT expression','operator',3,'p_operator_comparator_GT','AnalizadorSintactico.py',391),
  ('operator -> expression NEQ expression','operator',3,'p_operator_comparator_NEQ','AnalizadorSintactico.py',395),
  ('operator -> expression EQ expression','operator',3,'p_operator_comparator_EQ','AnalizadorSintactico.py',399),
  ('operator -> expression AND expression','operator',3,'p_operator_comparator_AND','AnalizadorSintactico.py',403),
  ('operator -> expression OR expression','operator',3,'p_operator_comparator_OR','AnalizadorSintactico.py',407),
  ('operator -> expression BITWISE_AND expression','operator',3,'p_operator_comparator_BITWISE_AND','AnalizadorSintactico.py',411),
  ('operator -> expression BITWISE_OR expression','operator',3,'p_operator_comparator_BITWISE_OR','AnalizadorSintactico.py',415),
  ('operator -> expression BITWISE_XOR expression','operator',3,'p_operator_comparator_BITWISE_XOR','AnalizadorSintactico.py',419),
  ('operator -> unaryoperatorprefx ID','operator',2,'p_operator_unaryoperatorprefx','AnalizadorSintactico.py',423),
  ('operator -> ID unaryoperatorsufx','operator',2,'p_operator_unaryoperatorsufx','AnalizadorSintactico.py',427),
  ('operator -> expression operatorbittobit','operator',2,'p_operator_operatorbittobit','AnalizadorSintactico.py',431),
  ('unaryoperatorprefx -> INCREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','AnalizadorSintactico.py',438),
  ('unaryoperatorprefx -> DECREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','AnalizadorSintactico.py',439),
  ('unaryoperatorprefx -> MINUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','AnalizadorSintactico.py',440),
  ('unaryoperatorprefx -> PLUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','AnalizadorSintactico.py',441),
  ('unaryoperatorprefx -> NOT','unaryoperatorprefx',1,'p_unaryoperatorprefx','AnalizadorSintactico.py',442),
  ('unaryoperatorsufx -> INCREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','AnalizadorSintactico.py',449),
  ('unaryoperatorsufx -> DECREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','AnalizadorSintactico.py',450),
  ('operatorbittobit -> URSHIFT','operatorbittobit',1,'p_operatorbittobit','AnalizadorSintactico.py',459),
  ('operatorbittobit -> LSHIFT','operatorbittobit',1,'p_operatorbittobit','AnalizadorSintactico.py',460),
  ('operatorbittobit -> RSHIFT','operatorbittobit',1,'p_operatorbittobit','AnalizadorSintactico.py',461),
  ('brackets_expression -> LBRACKET RBRACKET','brackets_expression',2,'p_brackets_expression_default','AnalizadorSintactico.py',469),
  ('brackets_expression -> LBRACKET INT_NUMBER RBRACKET','brackets_expression',3,'p_brackets_expression_int','AnalizadorSintactico.py',473),
  ('brackets_expression -> LBRACKET ID RBRACKET','brackets_expression',3,'p_brackets_expression_id','AnalizadorSintactico.py',478),
  ('type -> primitivetypes','type',1,'p_type','AnalizadorSintactico.py',485),
  ('primitivetypes -> TYPE_INT','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',491),
  ('primitivetypes -> TYPE_FLOAT','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',492),
  ('primitivetypes -> TYPE_DOUBLE','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',493),
  ('primitivetypes -> TYPE_BYTE','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',494),
  ('primitivetypes -> TYPE_BOOLEAN','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',495),
  ('primitivetypes -> TYPE_CHAR','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',496),
  ('primitivetypes -> TYPE_STRING','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',497),
  ('primitivetypes -> TYPE_LONG','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',498),
  ('primitivetypes -> TYPE_VOID','primitivetypes',1,'p_primitivetypes','AnalizadorSintactico.py',499),
  ('call -> ID LPAREN params_call RPAREN','call',4,'p_call','AnalizadorSintactico.py',508),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_default','AnalizadorSintactico.py',512),
  ('params_call -> expression COMMA params_call','params_call',3,'p_params_multi','AnalizadorSintactico.py',517),
  ('params_call -> expression','params_call',1,'p_params_unique','AnalizadorSintactico.py',521),
  ('chav_exp -> LCHAV RCHAV','chav_exp',2,'p_chav_exp','AnalizadorSintactico.py',526),
  ('chav_exp -> LCHAV expression_chav','chav_exp',2,'p_chav_exp_expchav','AnalizadorSintactico.py',530),
  ('expression_chav -> expression COMMA expression_chav','expression_chav',3,'p_expression_chav_mult','AnalizadorSintactico.py',537),
  ('expression_chav -> expression RCHAV','expression_chav',2,'p_expression_chav_expression_uni','AnalizadorSintactico.py',541),
  ('expression_chav -> expression COMMA RCHAV','expression_chav',3,'p_expression_chav_expression_comma','AnalizadorSintactico.py',545),
]
